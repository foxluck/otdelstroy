/*
 * jQuery UI Datepicker
 *
 * Copyright (c) 2006, 2007, 2008 Marc Grabanski
 * Dual licensed under the MIT (MIT-LICENSE.txt)
 * and GPL (GPL-LICENSE.txt) licenses.
 * 
 * http://docs.jquery.com/UI/Datepicker
 *
 * Depends:
 *	ui.core.js
 *
 * Marc Grabanski (m@marcgrabanski.com) and Keith Wood (kbwood@virginbroadband.com.au).
 */
   
(function(f){var s='datepicker';function R(){this.debug=false;this._j=null;this._8=[];this._f=false;this._d=false;this._u='ui-datepicker-div';this._v='ui-datepicker-append';this._9='ui-datepicker-trigger';this._w='ui-datepicker-dialog';this._x='ui-datepicker-prompt';this._y='ui-datepicker-unselectable';this._n='ui-datepicker-current-day';this.regional=[];this.regional['']={clearText:'Clear',clearStatus:'Erase the current date',closeText:'Close',closeStatus:'Close without change',prevText:'&#x3c;Prev',prevStatus:'Show the previous month',nextText:'Next&#x3e;',nextStatus:'Show the next month',currentText:'Today',currentStatus:'Show the current month',monthNames:['January','February','March','April','May','June','July','August','September','October','November','December'],monthNamesShort:['Jan','Feb','Mar','Apr','May','Jun','Jul','Aug','Sep','Oct','Nov','Dec'],monthStatus:'Show a different month',yearStatus:'Show a different year',weekHeader:'Wk',weekStatus:'Week of the year',dayNames:['Sunday','Monday','Tuesday','Wednesday','Thursday','Friday','Saturday'],dayNamesShort:['Sun','Mon','Tue','Wed','Thu','Fri','Sat'],dayNamesMin:['Su','Mo','Tu','We','Th','Fr','Sa'],dayStatus:'Set DD as first week day',dateStatus:'Select DD, M d',dateFormat:'mm/dd/yy',firstDay:0,initStatus:'Select a date',isRTL:false};this._2={showOn:'focus',showAnim:'show',showOptions:{},defaultDate:null,appendText:'',buttonText:'...',buttonImage:'',buttonImageOnly:false,closeAtTop:true,mandatory:false,hideIfNoPrevNext:false,navigationAsDateFormat:false,gotoCurrent:false,changeMonth:true,changeYear:true,yearRange:'-10:+10',changeFirstDay:true,highlightWeek:false,showOtherMonths:false,showWeeks:false,calculateWeek:this.iso8601Week,shortYearCutoff:'+10',showStatus:false,statusForDate:this.dateStatus,minDate:null,maxDate:null,duration:'normal',beforeShowDay:null,beforeShow:null,onSelect:null,onChangeMonthYear:null,onClose:null,numberOfMonths:1,stepMonths:1,rangeSelect:false,rangeSeparator:' - ',altField:'',altFormat:''};f.extend(this._2,this.regional['']);this.dpDiv=f('<div id="'+this._u+'" style="display: none;"></div>')}f.extend(R.prototype,{markerClassName:'hasDatepicker',log:function(){if(this.debug)console.log.apply('',arguments)},setDefaults:function(a){K(this._2,a||{});return this},_N:function(a,b){var c=null;for(attrName in this._2){var d=a.getAttribute('date:'+attrName);if(d){c=c||{};try{c[attrName]=eval(d)}catch(err){c[attrName]=d}}}var h=a.nodeName.toLowerCase();var g=(h=='div'||h=='span');if(!a.id)a.id='dp'+new Date().getTime();var i=this._z(f(a),g);i.settings=f.extend({},b||{},c||{});if(h=='input'){this._O(a,i)}else if(g){this._P(a,i)}},_z:function(a,b){return{id:a[0].id,input:a,selectedDay:0,selectedMonth:0,selectedYear:0,drawMonth:0,drawYear:0,inline:b,dpDiv:(!b?this.dpDiv:f('<div class="ui-datepicker-inline"></div>'))}},_O:function(d,h){var g=f(d);if(g.hasClass(this.markerClassName))return;var i=this._0(h,'appendText');var l=this._0(h,'isRTL');if(i)g[l?'before':'after']('<span class="'+this._v+'">'+i+'</span>');var j=this._0(h,'showOn');if(j=='focus'||j=='both')g.focus(this._h);if(j=='button'||j=='both'){var k=this._0(h,'buttonText');var o=this._0(h,'buttonImage');var p=f(this._0(h,'buttonImageOnly')?f('<img/>').addClass(this._9).attr({src:o,alt:k,title:k}):f('<button type="button"></button>').addClass(this._9).html(o==''?k:f('<img/>').attr({src:o,alt:k,title:k})));g[l?'before':'after'](p);p.click(function(){if(f.datepicker._f&&f.datepicker._i==d)f.datepicker._e();else f.datepicker._h(d);return false})}g.addClass(this.markerClassName).keydown(this._o).keypress(this._A).bind("setData.datepicker",function(a,b,c){h.settings[b]=c}).bind("getData.datepicker",function(a,b){return this._0(h,b)});f.data(d,s,h)},_P:function(d,h){var g=f(d);if(g.hasClass(this.markerClassName))return;g.addClass(this.markerClassName).append(h.dpDiv).bind("setData.datepicker",function(a,b,c){h.settings[b]=c}).bind("getData.datepicker",function(a,b){return this._0(h,b)});f.data(d,s,h);this._B(h,this._C(h));this._5(h)},_10:function(a,b,c,d,h){var g=this._Q;if(!g){var i='dp'+new Date().getTime();this._6=f('<input type="text" id="'+i+'" size="1" style="position: absolute;top: -100px;"/>');this._6.keydown(this._o);f('body').append(this._6);g=this._Q=this._z(this._6,false);g.settings={};f.data(this._6[0],s,g)}K(g.settings,d||{});this._6.val(b);this._3=(h?(h.length?h:[h.pageX,h.pageY]):null);if(!this._3){var l=window.innerWidth||document.documentElement.clientWidth||document.body.clientWidth;var j=window.innerHeight||document.documentElement.clientHeight||document.body.clientHeight;var k=document.documentElement.scrollLeft||document.body.scrollLeft;var o=document.documentElement.scrollTop||document.body.scrollTop;this._3=[(l/2)-100+k,(j/2)-150+o]}this._6.css('left',this._3[0]+'px').css('top',this._3[1]+'px');g.settings.onSelect=c;this._d=true;this.dpDiv.addClass(this._w);this._h(this._6[0]);if(f.blockUI)f.blockUI(this.dpDiv);f.data(this._6[0],s,g);return this},_11:function(a){var b=a.nodeName.toLowerCase();var c=f(a);f.removeData(a,s);if(b=='input'){c.siblings('.'+this._v).remove().end().siblings('.'+this._9).remove().end().removeClass(this.markerClassName).unbind('focus',this._h).unbind('keydown',this._o).unbind('keypress',this._A)}else if(b=='div'||b=='span')c.removeClass(this.markerClassName).empty()},_12:function(b){b.disabled=false;f(b).siblings('button.'+this._9).each(function(){this.disabled=false}).end().siblings('img.'+this._9).css({opacity:'1.0',cursor:''});this._8=f.map(this._8,function(a){return(a==b?null:a)})},_13:function(b){b.disabled=true;f(b).siblings('button.'+this._9).each(function(){this.disabled=true}).end().siblings('img.'+this._9).css({opacity:'0.5',cursor:'default'});this._8=f.map(this._8,function(a){return(a==b?null:a)});this._8[this._8.length]=b},_R:function(a){if(!a)return false;for(var b=0;b<this._8.length;b++){if(this._8[b]==a)return true}return false},_14:function(a,b,c){var d=b||{};if(typeof b=='string'){d={};d[b]=c}if(inst=f.data(a,s)){K(inst.settings,d);this._5(inst)}},_15:function(a,b,c){var d=f.data(a,s);if(d){this._B(d,b,c);this._5(d)}},_16:function(a){var b=f.data(a,s);if(b)this._D(b);return(b?this._p(b):null)},_o:function(a){var b=f.data(a.target,s);var c=true;if(f.datepicker._f)switch(a.keyCode){case 9:f.datepicker._e(null,'');break;case 13:f.datepicker._E(a.target,b.selectedMonth,b.selectedYear,f('td.ui-datepicker-days-cell-over',b.dpDiv)[0]);return false;break;case 27:f.datepicker._e(null,f.datepicker._0(b,'duration'));break;case 33:f.datepicker._4(a.target,(a.ctrlKey?-1:-f.datepicker._0(b,'stepMonths')),(a.ctrlKey?'Y':'M'));break;case 34:f.datepicker._4(a.target,(a.ctrlKey?+1:+f.datepicker._0(b,'stepMonths')),(a.ctrlKey?'Y':'M'));break;case 35:if(a.ctrlKey)f.datepicker._F(a.target);break;case 36:if(a.ctrlKey)f.datepicker._G(a.target);break;case 37:if(a.ctrlKey)f.datepicker._4(a.target,-1,'D');break;case 38:if(a.ctrlKey)f.datepicker._4(a.target,-7,'D');break;case 39:if(a.ctrlKey)f.datepicker._4(a.target,+1,'D');break;case 40:if(a.ctrlKey)f.datepicker._4(a.target,+7,'D');break;default:c=false}else if(a.keyCode==36&&a.ctrlKey)f.datepicker._h(this);else c=false;if(c){a.preventDefault();a.stopPropagation()}},_A:function(a){var b=f.data(a.target,s);var c=f.datepicker._S(f.datepicker._0(b,'dateFormat'));var d=String.fromCharCode(a.charCode==undefined?a.keyCode:a.charCode);return a.ctrlKey||(d<' '||!c||c.indexOf(d)>-1)},_h:function(a){a=a.target||a;if(a.nodeName.toLowerCase()!='input')a=f('input',a.parentNode)[0];if(f.datepicker._R(a)||f.datepicker._i==a)return;var b=f.data(a,s);var c=f.datepicker._0(b,'beforeShow');K(b.settings,(c?c.apply(a,[a,b]):{}));f.datepicker._e(null,'');f.datepicker._i=a;f.datepicker._D(b);if(f.datepicker._d)a.value='';if(!f.datepicker._3){f.datepicker._3=f.datepicker._H(f('img',a.parentNode)[0]);f.datepicker._3[1]+=a.offsetHeight}var d=false;f(a).parents().each(function(){d|=f(this).css('position')=='fixed';return!d});if(d&&f.browser.opera){f.datepicker._3[0]-=document.documentElement.scrollLeft;f.datepicker._3[1]-=document.documentElement.scrollTop}var h={left:f.datepicker._3[0],top:f.datepicker._3[1]};f.datepicker._3=null;b.rangeStart=null;b.dpDiv.css({position:'absolute',display:'block',top:'-1000px'});f.datepicker._5(b);b.dpDiv.width(f.datepicker._k(b)[1]*f('.ui-datepicker',b.dpDiv[0])[0].offsetWidth);h=f.datepicker._T(b,h,d);b.dpDiv.css({position:(f.datepicker._d&&f.blockUI?'static':(d?'fixed':'absolute')),display:'none',left:h.left+'px',top:h.top+'px'});if(!b.inline){var g=f.datepicker._0(b,'showAnim')||'show';var i=f.datepicker._0(b,'duration');var l=function(){f.datepicker._f=true;if(f.browser.msie&&parseInt(f.browser.version)<7)f('iframe.ui-datepicker-cover').css({width:b.dpDiv.width()+4,height:b.dpDiv.height()+4})};if(f.effects&&f.effects[g])b.dpDiv.show(g,f.datepicker._0(b,'showOptions'),i,l);else b.dpDiv[g](i,l);if(i=='')l();if(b.input[0].type!='hidden')b.input[0].focus();f.datepicker._j=b}},_5:function(a){var b={width:a.dpDiv.width()+4,height:a.dpDiv.height()+4};a.dpDiv.empty().append(this._U(a)).find('iframe.ui-datepicker-cover').css({width:b.width,height:b.height});var c=this._k(a);a.dpDiv[(c[0]!=1||c[1]!=1?'add':'remove')+'Class']('ui-datepicker-multi');a.dpDiv[(this._0(a,'isRTL')?'add':'remove')+'Class']('ui-datepicker-rtl');if(a.input&&a.input[0].type!='hidden')f(a.input[0]).focus()},_T:function(a,b,c){var d=a.input?this._H(a.input[0]):null;var h=window.innerWidth||document.documentElement.clientWidth;var g=window.innerHeight||document.documentElement.clientHeight;var i=document.documentElement.scrollLeft||document.body.scrollLeft;var l=document.documentElement.scrollTop||document.body.scrollTop;if(this._0(a,'isRTL')||(b.left+a.dpDiv.width()-i)>h)b.left=Math.max((c?0:i),d[0]+(a.input?a.input.width():0)-(c?i:0)-a.dpDiv.width()-(c&&f.browser.opera?document.documentElement.scrollLeft:0));else b.left-=(c?i:0);if((b.top+a.dpDiv.height()-l)>g)b.top=Math.max((c?0:l),d[1]-(c?l:0)-(this._d?0:a.dpDiv.height())-(c&&f.browser.opera?document.documentElement.scrollTop:0));else b.top-=(c?l:0);return b},_H:function(a){while(a&&(a.type=='hidden'||a.nodeType!=1)){a=a.nextSibling}var b=f(a).offset();return[b.left,b.top]},_e:function(a,b){var c=this._j;if(!c)return;var d=this._0(c,'rangeSelect');if(d&&this._a)this._q('#'+c.id,this._g(c,c.currentDay,c.currentMonth,c.currentYear));this._a=false;if(this._f){b=(b!=null?b:this._0(c,'duration'));var h=this._0(c,'showAnim');var g=function(){f.datepicker._I(c)};if(b!=''&&f.effects&&f.effects[h])c.dpDiv.hide(h,f.datepicker._0(c,'showOptions'),b,g);else c.dpDiv[(b==''?'hide':(h=='slideDown'?'slideUp':(h=='fadeIn'?'fadeOut':'hide')))](b,g);if(b=='')this._I(c);var i=this._0(c,'onClose');if(i)i.apply((c.input?c.input[0]:null),[this._p(c),c]);this._f=false;this._i=null;c.settings.prompt=null;if(this._d){this._6.css({position:'absolute',left:'0',top:'-100px'});if(f.blockUI){f.unblockUI();f('body').append(this.dpDiv)}}this._d=false}this._j=null},_I:function(a){a.dpDiv.removeClass(this._w).unbind('.ui-datepicker');f('.'+this._x,a.dpDiv).remove()},_V:function(a){if(!f.datepicker._j)return;var b=f(a.target);if((b.parents('#'+f.datepicker._u).length==0)&&!b.hasClass(f.datepicker.markerClassName)&&!b.hasClass(f.datepicker._9)&&f.datepicker._f&&!(f.datepicker._d&&f.blockUI))f.datepicker._e(null,'')},_4:function(a,b,c){var d=f(a);var h=f.data(d[0],s);this._r(h,b,c);this._5(h)},_G:function(a){var b=f(a);var c=f.data(b[0],s);if(this._0(c,'gotoCurrent')&&c.currentDay){c.selectedDay=c.currentDay;c.drawMonth=c.selectedMonth=c.currentMonth;c.drawYear=c.selectedYear=c.currentYear}else{var d=new Date();c.selectedDay=d.getDate();c.drawMonth=c.selectedMonth=d.getMonth();c.drawYear=c.selectedYear=d.getFullYear()}this._4(b);this._s(c)},_J:function(a,b,c){var d=f(a);var h=f.data(d[0],s);h._t=false;h[c=='M'?'drawMonth':'drawYear']=b.options[b.selectedIndex].value-0;this._4(d);this._s(h)},_K:function(a){var b=f(a);var c=f.data(b[0],s);if(c.input&&c._t&&!f.browser.msie)c.input[0].focus();c._t=!c._t},_W:function(a,b){var c=f(a);var d=f.data(c[0],s);d.settings.firstDay=b;this._5(d)},_E:function(a,b,c,d){if(f(d).hasClass(this._y))return;var h=f(a);var g=f.data(h[0],s);var i=this._0(g,'rangeSelect');if(i){this._a=!this._a;if(this._a){f('.ui-datepicker td').removeClass(this._n);f(d).addClass(this._n)}}g.selectedDay=g.currentDay=f('a',d).html();g.selectedMonth=g.currentMonth=b;g.selectedYear=g.currentYear=c;if(this._a){g.endDay=g.endMonth=g.endYear=null}else if(i){g.endDay=g.currentDay;g.endMonth=g.currentMonth;g.endYear=g.currentYear}this._q(a,this._g(g,g.currentDay,g.currentMonth,g.currentYear));if(this._a){g.rangeStart=this._1(new Date(g.currentYear,g.currentMonth,g.currentDay));this._5(g)}else if(i){g.selectedDay=g.currentDay=g.rangeStart.getDate();g.selectedMonth=g.currentMonth=g.rangeStart.getMonth();g.selectedYear=g.currentYear=g.rangeStart.getFullYear();g.rangeStart=null;if(g.inline)this._5(g)}},_F:function(a){var b=f(a);var c=f.data(b[0],s);if(this._0(c,'mandatory'))return;this._a=false;c.endDay=c.endMonth=c.endYear=c.rangeStart=null;this._q(b,'')},_q:function(a,b){var c=f(a);var d=f.data(c[0],s);b=(b!=null?b:this._g(d));if(this._0(d,'rangeSelect')&&b)b=(d.rangeStart?this._g(d,d.rangeStart):b)+this._0(d,'rangeSeparator')+b;if(d.input)d.input.val(b);this._X(d);var h=this._0(d,'onSelect');if(h)h.apply((d.input?d.input[0]:null),[b,d]);else if(d.input)d.input.trigger('change');if(d.inline)this._5(d);else if(!this._a){this._e(null,this._0(d,'duration'));this._i=d.input[0];if(typeof(d.input[0])!='object')d.input[0].focus();this._i=null}},_X:function(a){var b=this._0(a,'altField');if(b){var c=this._0(a,'altFormat');var d=this._p(a);dateStr=(Y(d)?(!d[0]&&!d[1]?'':this.formatDate(c,d[0],this._7(a))+this._0(a,'rangeSeparator')+this.formatDate(c,d[1]||d[0],this._7(a))):this.formatDate(c,d,this._7(a)));f(b).each(function(){f(this).val(dateStr)})}},noWeekends:function(a){var b=a.getDay();return[(b>0&&b<6),'']},iso8601Week:function(a){var b=new Date(a.getFullYear(),a.getMonth(),a.getDate());var c=new Date(b.getFullYear(),1-1,4);var d=c.getDay()||7;c.setDate(c.getDate()+1-d);if(d<4&&b<c){b.setDate(b.getDate()-3);return f.datepicker.iso8601Week(b)}else if(b>new Date(b.getFullYear(),12-1,28)){d=new Date(b.getFullYear()+1,1-1,4).getDay()||7;if(d>4&&(b.getDay()||7)<d-3){b.setDate(b.getDate()+3);return f.datepicker.iso8601Week(b)}}return Math.floor(((b-c)/86400000)/7)+1},dateStatus:function(a,b){return f.datepicker.formatDate(f.datepicker._0(b,'dateStatus'),a,f.datepicker._7(b))},parseDate:function(k,o,p){if(k==null||o==null)throw'Invalid arguments';o=(typeof o=='object'?o.toString():o+'');if(o=='')return null;var w=(p?p.shortYearCutoff:null)||this._2.shortYearCutoff;var u=(p?p.dayNamesShort:null)||this._2.dayNamesShort;var m=(p?p.dayNames:null)||this._2.dayNames;var q=(p?p.monthNamesShort:null)||this._2.monthNamesShort;var n=(p?p.monthNames:null)||this._2.monthNames;var r=-1;var A=-1;var B=-1;var H=false;var C=function(a){var b=(y+1<k.length&&k.charAt(y+1)==a);if(b)y++;return b};var E=function(a){C(a);var b=(a=='@'?14:(a=='y'?4:2));var c=b;var d=0;while(c>0&&v<o.length&&o.charAt(v)>='0'&&o.charAt(v)<='9'){d=d*10+(o.charAt(v++)-0);c--}if(c==b)throw'Missing number at position '+v;return d};var F=function(a,b,c){var d=(C(a)?c:b);var h=0;for(var g=0;g<d.length;g++)h=Math.max(h,d[g].length);var i='';var l=v;while(h>0&&v<o.length){i+=o.charAt(v++);for(var j=0;j<d.length;j++)if(i==d[j])return j+1;h--}throw'Unknown name at position '+l;};var x=function(){if(o.charAt(v)!=k.charAt(y))throw'Unexpected literal at position '+v;v++};var v=0;for(var y=0;y<k.length;y++){if(H)if(k.charAt(y)=="'"&&!C("'"))H=false;else x();else switch(k.charAt(y)){case'd':B=E('d');break;case'D':F('D',u,m);break;case'm':A=E('m');break;case'M':A=F('M',q,n);break;case'y':r=E('y');break;case'@':var z=new Date(E('@'));r=z.getFullYear();A=z.getMonth()+1;B=z.getDate();break;case"'":if(C("'"))x();else H=true;break;default:x()}}if(r<100)r+=new Date().getFullYear()-new Date().getFullYear()%100+(r<=w?0:-100);var z=this._1(new Date(r,A-1,B));if(z.getFullYear()!=r||z.getMonth()+1!=A||z.getDate()!=B)throw'Invalid date';return z},ATOM:'yy-mm-dd',COOKIE:'D, dd M yy',ISO_8601:'yy-mm-dd',RFC_822:'D, d M y',RFC_850:'DD, dd-M-y',RFC_1036:'D, d M y',RFC_1123:'D, d M yy',RFC_2822:'D, d M yy',RSS:'D, d M y',TIMESTAMP:'@',W3C:'yy-mm-dd',formatDate:function(h,g,i){if(!g)return'';var l=(i?i.dayNamesShort:null)||this._2.dayNamesShort;var j=(i?i.dayNames:null)||this._2.dayNames;var k=(i?i.monthNamesShort:null)||this._2.monthNamesShort;var o=(i?i.monthNames:null)||this._2.monthNames;var p=function(a){var b=(n+1<h.length&&h.charAt(n+1)==a);if(b)n++;return b};var w=function(a,b){return(p(a)&&b<10?'0':'')+b};var u=function(a,b,c,d){return(p(a)?d[b]:c[b])};var m='';var q=false;if(g)for(var n=0;n<h.length;n++){if(q)if(h.charAt(n)=="'"&&!p("'"))q=false;else m+=h.charAt(n);else switch(h.charAt(n)){case'd':m+=w('d',g.getDate());break;case'D':m+=u('D',g.getDay(),l,j);break;case'm':m+=w('m',g.getMonth()+1);break;case'M':m+=u('M',g.getMonth(),k,o);break;case'y':m+=(p('y')?g.getFullYear():(g.getYear()%100<10?'0':'')+g.getYear()%100);break;case'@':m+=g.getTime();break;case"'":if(p("'"))m+="'";else q=true;break;default:m+=h.charAt(n)}}return m},_S:function(a){var b='';var c=false;for(var d=0;d<a.length;d++)if(c)if(a.charAt(d)=="'"&&!lookAhead("'"))c=false;else b+=a.charAt(d);else switch(a.charAt(d)){case'd':case'm':case'y':case'@':b+='0123456789';break;case'D':case'M':return null;case"'":if(lookAhead("'"))b+="'";else c=true;break;default:b+=a.charAt(d)}return b},_0:function(a,b){return a.settings[b]!==undefined?a.settings[b]:this._2[b]},_D:function(a){var b=this._0(a,'dateFormat');var c=a.input?a.input.val().split(this._0(a,'rangeSeparator')):null;a.endDay=a.endMonth=a.endYear=null;var d=defaultDate=this._C(a);if(c.length>0){var h=this._7(a);if(c.length>1){d=this.parseDate(b,c[1],h)||defaultDate;a.endDay=d.getDate();a.endMonth=d.getMonth();a.endYear=d.getFullYear()}try{d=this.parseDate(b,c[0],h)||defaultDate}catch(e){this.log(e);d=defaultDate}}a.selectedDay=d.getDate();a.drawMonth=a.selectedMonth=d.getMonth();a.drawYear=a.selectedYear=d.getFullYear();a.currentDay=(c[0]?d.getDate():0);a.currentMonth=(c[0]?d.getMonth():0);a.currentYear=(c[0]?d.getFullYear():0);this._r(a)},_C:function(a){var b=this._l(this._0(a,'defaultDate'),new Date());var c=this._b(a,'min',true);var d=this._b(a,'max');b=(c&&b<c?c:b);b=(d&&b>d?d:b);return b},_l:function(j,k){var o=function(a){var b=new Date();b.setDate(b.getDate()+a);return b};var p=function(a,b){var c=new Date();var d=c.getFullYear();var h=c.getMonth();var g=c.getDate();var i=/([+-]?[0-9]+)\s*(d|D|w|W|m|M|y|Y)?/g;var l=i.exec(a);while(l){switch(l[2]||'d'){case'd':case'D':g+=(l[1]-0);break;case'w':case'W':g+=(l[1]*7);break;case'm':case'M':h+=(l[1]-0);g=Math.min(g,b(d,h));break;case'y':case'Y':d+=(l[1]-0);g=Math.min(g,b(d,h));break}l=i.exec(a)}return new Date(d,h,g)};j=(j==null?k:(typeof j=='string'?p(j,this._m):(typeof j=='number'?(isNaN(j)?k:o(j)):j)));j=(j&&j.toString()=='Invalid Date'?k:j);if(j){j.setHours(0);j.setMinutes(0);j.setSeconds(0);j.setMilliseconds(0)}return this._1(j)},_1:function(a){if(!a)return null;a.setHours(a.getHours()>12?a.getHours()+2:0);return a},_B:function(a,b,c){var d=!(b);b=this._l(b,new Date());a.selectedDay=a.currentDay=b.getDate();a.drawMonth=a.selectedMonth=a.currentMonth=b.getMonth();a.drawYear=a.selectedYear=a.currentYear=b.getFullYear();if(this._0(a,'rangeSelect')){if(c){c=this._l(c,null);a.endDay=c.getDate();a.endMonth=c.getMonth();a.endYear=c.getFullYear()}else{a.endDay=a.currentDay;a.endMonth=a.currentMonth;a.endYear=a.currentYear}}this._r(a);if(a.input)a.input.val(d?'':this._g(a)+(!this._0(a,'rangeSelect')?'':this._0(a,'rangeSeparator')+this._g(a,a.endDay,a.endMonth,a.endYear)))},_p:function(a){var b=(!a.currentYear||(a.input&&a.input.val()=='')?null:this._1(new Date(a.currentYear,a.currentMonth,a.currentDay)));if(this._0(a,'rangeSelect')){return[a.rangeStart||b,(!a.endYear?a.rangeStart||b:this._1(new Date(a.endYear,a.endMonth,a.endDay)))]}else return b},_U:function(a){var b=new Date();b=this._1(new Date(b.getFullYear(),b.getMonth(),b.getDate()));var c=this._0(a,'showStatus');var d=this._0(a,'isRTL');var h=(this._0(a,'mandatory')?'':'<div class="ui-datepicker-clear"><a onclick="jQuery.datepicker._F(\'#'+a.id+'\');"'+(c?this._c(a,this._0(a,'clearStatus')||'&#xa0;'):'')+'>'+this._0(a,'clearText')+'</a></div>');var g='<div class="ui-datepicker-control">'+(d?'':h)+'<div class="ui-datepicker-close"><a onclick="jQuery.datepicker._e();"'+(c?this._c(a,this._0(a,'closeStatus')||'&#xa0;'):'')+'>'+this._0(a,'closeText')+'</a></div>'+(d?h:'')+'</div>';var i=this._0(a,'prompt');var l=this._0(a,'closeAtTop');var j=this._0(a,'hideIfNoPrevNext');var k=this._0(a,'navigationAsDateFormat');var o=this._k(a);var p=this._0(a,'stepMonths');var w=(o[0]!=1||o[1]!=1);var u=this._1((!a.currentDay?new Date(9999,9,9):new Date(a.currentYear,a.currentMonth,a.currentDay)));var m=this._b(a,'min',true);var q=this._b(a,'max');var n=a.drawMonth;var r=a.drawYear;if(q){var A=this._1(new Date(q.getFullYear(),q.getMonth()-o[1]+1,q.getDate()));A=(m&&A<m?m:A);while(this._1(new Date(r,n,1))>A){n--;if(n<0){n=11;r--}}}var B=this._0(a,'prevText');B=(!k?B:this.formatDate(B,this._1(new Date(r,n-p,1)),this._7(a)));var H='<div class="ui-datepicker-prev">'+(this._L(a,-1,r,n)?'<a onclick="jQuery.datepicker._4(\'#'+a.id+'\', -'+p+', \'M\');"'+(c?this._c(a,this._0(a,'prevStatus')||'&#xa0;'):'')+'>'+B+'</a>':(j?'':'<label>'+B+'</label>'))+'</div>';var C=this._0(a,'nextText');C=(!k?C:this.formatDate(C,this._1(new Date(r,n+p,1)),this._7(a)));var E='<div class="ui-datepicker-next">'+(this._L(a,+1,r,n)?'<a onclick="jQuery.datepicker._4(\'#'+a.id+'\', +'+p+', \'M\');"'+(c?this._c(a,this._0(a,'nextStatus')||'&#xa0;'):'')+'>'+C+'</a>':(j?'':'<label>'+C+'</label>'))+'</div>';var F=this._0(a,'currentText');F=(!k?F:this.formatDate(F,b,this._7(a)));var x=(i?'<div class="'+this._x+'">'+i+'</div>':'')+(l&&!a.inline?g:'')+'<div class="ui-datepicker-links">'+(d?E:H)+(this._M(a,(this._0(a,'gotoCurrent')&&a.currentDay?u:b))?'<div class="ui-datepicker-current"><a onclick="jQuery.datepicker._G(\'#'+a.id+'\');"'+(c?this._c(a,this._0(a,'currentStatus')||'&#xa0;'):'')+'>'+F+'</a></div>':'')+(d?H:E)+'</div>';var v=this._0(a,'firstDay');var y=this._0(a,'changeFirstDay');var z=this._0(a,'dayNames');var Z=this._0(a,'dayNamesShort');var ba=this._0(a,'dayNamesMin');var bb=this._0(a,'monthNames');var S=this._0(a,'beforeShowDay');var N=this._0(a,'highlightWeek');var I=this._0(a,'showOtherMonths');var T=this._0(a,'showWeeks');var bc=this._0(a,'calculateWeek')||this.iso8601Week;var O=(c?this._0(a,'dayStatus')||'&#xa0;':'');var bd=this._0(a,'statusForDate')||this.dateStatus;var be=a.endDay?this._1(new Date(a.endYear,a.endMonth,a.endDay)):u;for(var P=0;P<o[0];P++)for(var L=0;L<o[1];L++){var U=this._1(new Date(r,n,a.selectedDay));x+='<div class="ui-datepicker-one-month'+(L==0?' ui-datepicker-new-row':'')+'">'+this._Y(a,n,r,m,q,U,P>0||L>0,c,bb)+'<table class="ui-datepicker" cellpadding="0" cellspacing="0"><thead><tr class="ui-datepicker-title-row">'+(T?'<td>'+this._0(a,'weekHeader')+'</td>':'');for(var D=0;D<7;D++){var J=(D+v)%7;var bf=(O.indexOf('DD')>-1?O.replace(/DD/,z[J]):O.replace(/D/,Z[J]));x+='<td'+((D+v+6)%7>=5?' class="ui-datepicker-week-end-cell"':'')+'>'+(!y?'<span':'<a onclick="jQuery.datepicker._W(\'#'+a.id+'\', '+J+');"')+(c?this._c(a,bf):'')+' title="'+z[J]+'">'+ba[J]+(y?'</a>':'</span>')+'</td>'}x+='</tr></thead><tbody>';var V=this._m(r,n);if(r==a.selectedYear&&n==a.selectedMonth)a.selectedDay=Math.min(a.selectedDay,V);var W=(this._Z(r,n)-v+7)%7;var bg=(w?6:Math.ceil((W+V)/7));var t=this._1(new Date(r,n,1-W));for(var X=0;X<bg;X++){x+='<tr class="ui-datepicker-days-row">'+(T?'<td class="ui-datepicker-week-col">'+bc(t)+'</td>':'');for(var D=0;D<7;D++){var M=(S?S.apply((a.input?a.input[0]:null),[t]):[true,'']);var G=(t.getMonth()!=n);var Q=G||!M[0]||(m&&t<m)||(q&&t>q);x+='<td class="ui-datepicker-days-cell'+((D+v+6)%7>=5?' ui-datepicker-week-end-cell':'')+(G?' ui-datepicker-otherMonth':'')+(t.getTime()==U.getTime()&&n==a.selectedMonth?' ui-datepicker-days-cell-over':'')+(Q?' '+this._y:'')+(G&&!I?'':' '+M[1]+(t.getTime()>=u.getTime()&&t.getTime()<=be.getTime()?' '+this._n:'')+(t.getTime()==b.getTime()?' ui-datepicker-today':''))+'"'+((!G||I)&&M[2]?' title="'+M[2]+'"':'')+(Q?(N?' onmouseover="jQuery(this).parent().addClass(\'ui-datepicker-week-over\');" onmouseout="jQuery(this).parent().removeClass(\'ui-datepicker-week-over\');"':''):' onmouseover="jQuery(this).addClass(\'ui-datepicker-days-cell-over\')'+(N?'.parent().addClass(\'ui-datepicker-week-over\')':'')+';'+(!c||(G&&!I)?'':'jQuery(\'#ui-datepicker-status-'+a.id+'\').html(\''+(bd.apply((a.input?a.input[0]:null),[t,a])||'&#xa0;')+'\');')+'" onmouseout="jQuery(this).removeClass(\'ui-datepicker-days-cell-over\')'+(N?'.parent().removeClass(\'ui-datepicker-week-over\')':'')+';'+(!c||(G&&!I)?'':'jQuery(\'#ui-datepicker-status-'+a.id+'\').html(\'&#xa0;\');')+'" onclick="jQuery.datepicker._E(\'#'+a.id+'\','+n+','+r+', this);"')+'>'+(G?(I?t.getDate():'&#xa0;'):(Q?t.getDate():'<a>'+t.getDate()+'</a>'))+'</td>';t.setDate(t.getDate()+1);t=this._1(t)}x+='</tr>'}n++;if(n>11){n=0;r++}x+='</tbody></table></div>'}x+=(c?'<div style="clear: both;"></div><div id="ui-datepicker-status-'+a.id+'" class="ui-datepicker-status">'+(this._0(a,'initStatus')||'&#xa0;')+'</div>':'')+(!l&&!a.inline?g:'')+'<div style="clear: both;"></div>'+(f.browser.msie&&parseInt(f.browser.version)<7&&!a.inline?'<iframe src="javascript:false;" class="ui-datepicker-cover"></iframe>':'');return x},_Y:function(a,b,c,d,h,g,i,l,j){d=(a.rangeStart&&d&&g<d?g:d);var k='<div class="ui-datepicker-header">';if(i||!this._0(a,'changeMonth'))k+=j[b]+'&#xa0;';else{var o=(d&&d.getFullYear()==c);var p=(h&&h.getFullYear()==c);k+='<select class="ui-datepicker-new-month" onchange="jQuery.datepicker._J(\'#'+a.id+'\', this, \'M\');" onclick="jQuery.datepicker._K(\'#'+a.id+'\');"'+(l?this._c(a,this._0(a,'monthStatus')||'&#xa0;'):'')+'>';for(var w=0;w<12;w++){if((!o||w>=d.getMonth())&&(!p||w<=h.getMonth()))k+='<option value="'+w+'"'+(w==b?' selected="selected"':'')+'>'+j[w]+'</option>'}k+='</select>'}if(i||!this._0(a,'changeYear'))k+=c;else{var u=this._0(a,'yearRange').split(':');var m=0;var q=0;if(u.length!=2){m=c-10;q=c+10}else if(u[0].charAt(0)=='+'||u[0].charAt(0)=='-'){m=q=new Date().getFullYear();m+=parseInt(u[0],10);q+=parseInt(u[1],10)}else{m=parseInt(u[0],10);q=parseInt(u[1],10)}m=(d?Math.max(m,d.getFullYear()):m);q=(h?Math.min(q,h.getFullYear()):q);k+='<select class="ui-datepicker-new-year" onchange="jQuery.datepicker._J(\'#'+a.id+'\', this, \'Y\');" onclick="jQuery.datepicker._K(\'#'+a.id+'\');"'+(l?this._c(a,this._0(a,'yearStatus')||'&#xa0;'):'')+'>';for(;m<=q;m++){k+='<option value="'+m+'"'+(m==c?' selected="selected"':'')+'>'+m+'</option>'}k+='</select>'}k+='</div>';return k},_c:function(a,b){return' onmouseover="jQuery(\'#ui-datepicker-status-'+a.id+'\').html(\''+b+'\');" onmouseout="jQuery(\'#ui-datepicker-status-'+a.id+'\').html(\'&#xa0;\');"'},_r:function(a,b,c){var d=a.drawYear+(c=='Y'?b:0);var h=a.drawMonth+(c=='M'?b:0);var g=Math.min(a.selectedDay,this._m(d,h))+(c=='D'?b:0);var i=this._1(new Date(d,h,g));var l=this._b(a,'min',true);var j=this._b(a,'max');i=(l&&i<l?l:i);i=(j&&i>j?j:i);a.selectedDay=i.getDate();a.drawMonth=a.selectedMonth=i.getMonth();a.drawYear=a.selectedYear=i.getFullYear();if(c=='M'||c=='Y')this._s(a)},_s:function(a){var b=this._0(a,'onChangeMonthYear');if(b)b.apply((a.input?a.input[0]:null),[new Date(a.selectedYear,a.selectedMonth,1),a])},_k:function(a){var b=this._0(a,'numberOfMonths');return(b==null?[1,1]:(typeof b=='number'?[1,b]:b))},_b:function(a,b,c){var d=this._l(this._0(a,b+'Date'),null);return(!c||!a.rangeStart?d:(!d||a.rangeStart>d?a.rangeStart:d))},_m:function(a,b){return 32-new Date(a,b,32).getDate()},_Z:function(a,b){return new Date(a,b,1).getDay()},_L:function(a,b,c,d){var h=this._k(a);var g=this._1(new Date(c,d+(b<0?b:h[1]),1));if(b<0)g.setDate(this._m(g.getFullYear(),g.getMonth()));return this._M(a,g)},_M:function(a,b){var c=(!a.rangeStart?null:this._1(new Date(a.selectedYear,a.selectedMonth,a.selectedDay)));c=(c&&a.rangeStart<c?a.rangeStart:c);var d=c||this._b(a,'min');var h=this._b(a,'max');return((!d||b>=d)&&(!h||b<=h))},_7:function(a){var b=this._0(a,'shortYearCutoff');b=(typeof b!='string'?b:new Date().getFullYear()%100+parseInt(b,10));return{shortYearCutoff:b,dayNamesShort:this._0(a,'dayNamesShort'),dayNames:this._0(a,'dayNames'),monthNamesShort:this._0(a,'monthNamesShort'),monthNames:this._0(a,'monthNames')}},_g:function(a,b,c,d){if(!b){a.currentDay=a.selectedDay;a.currentMonth=a.selectedMonth;a.currentYear=a.selectedYear}var h=(b?(typeof b=='object'?b:this._1(new Date(d,c,b))):this._1(new Date(a.currentYear,a.currentMonth,a.currentDay)));return this.formatDate(this._0(a,'dateFormat'),h,this._7(a))}});function K(a,b){f.extend(a,b);for(var c in b)if(b[c]==null||b[c]==undefined)a[c]=b[c];return a};function Y(a){return(a&&((f.browser.safari&&typeof a=='object'&&a.length)||(a.constructor&&a.constructor.toString().match(/\Array\(\)/))))};f.fn.datepicker=function(a){var b=Array.prototype.slice.call(arguments,1);if(typeof a=='string'&&(a=='isDisabled'||a=='getDate'))return f.datepicker['_'+a+'Datepicker'].apply(f.datepicker,[this[0]].concat(b));return this.each(function(){typeof a=='string'?f.datepicker['_'+a+'Datepicker'].apply(f.datepicker,[this].concat(b)):f.datepicker._N(this,a)})};f.datepicker=new R();f(document).ready(function(){f(document.body).append(f.datepicker.dpDiv).mousedown(f.datepicker._V)})})(jQuery);

WbsData = function() {
	var params = {};
	return {
		set: function (obj) {
			$.extend(params, obj);
		},
		get: function (name, defaultValue) {
			if( name == null ) return params;
			return params[name] || defaultValue || null;
		}
	}
}();

function setCookie(cookieName, cookieValue, nDays) {
	var today = new Date();
	var expire = new Date();
	if (nDays==null || nDays==0) nDays=1;
	expire.setTime(today.getTime() + 3600000*24*nDays);
	document.cookie = cookieName+"="+escape(cookieValue)
	+ ";expires="+expire.toGMTString();
}

function newClass(parent, prop) {
	  // Dynamically create class constructor.
	  var clazz = function() {
	    // Stupid JS need exactly one "operator new" calling for parent
	    // constructor just after class definition.
	    if (clazz.preparing) return delete(clazz.preparing);
	    // Call custom constructor.
	    if (clazz.constr) {
	      this.constructor = clazz; // we need it!
	      clazz.constr.apply(this, arguments);
	    }
	  }
	  clazz.prototype = {}; // no prototype by default
	  if (parent) {
	    parent.preparing = true;
	    clazz.prototype = new parent;
	    clazz.prototype.constructor = parent;
	    clazz.constr = parent; // BY DEFAULT - parent constructor
	  }
	  if (prop) {
	    var cname = "constructor";
	    for (var k in prop) {
	      if (k != cname) clazz.prototype[k] = prop[k];
	    }
	    if (prop[cname] && prop[cname] != Object)
	      clazz.constr = prop[cname];
	  }
	  clazz.prototype.superclass = function() {return this.constructor.prototype};
	  return clazz;
}

Function.prototype.bind = function(scope, object) {	
	if (object)
		scope.self = object;
	
	var __method = this;
	return function() {
		return __method.apply(scope, arguments);
	}
}

function addHandler(element, event, action, scope){
	if (scope) {
		action = action.bind(scope);
	}
	
	if(document.addEventListener) element.addEventListener(event, action, null);
	else if(document.attachEvent) element.attachEvent('on' + event,action);
	else element['on'+event] = action;
}

function createDiv(className) {
	return createElem("div", className);
}

function createElem(tag, className, attributes) {
	var elem = document.createElement(tag);
	$(elem).addClass(className);
	if (attributes) {
		$(elem).attr(attributes);
	}
	return elem;	
}

function htmlspecialchars(str) {
	if (str == null || typeof str != 'string' || str.length == 0) {
		return str;
	}
	return str.replace(/&/g, "&amp;").replace(/</g, "&lt;").replace(/>/g, "&gt;").replace(/"/g, "&quot;").replace(/'/g, "&#039;").replace(/\n/g, "<br/>").replace(/\s/g, "&nbsp;");
}

$().ajaxComplete(function(request, settings){
	if (settings.status == 200) {
		try {
			var response = eval("(" + settings.responseText + ")");
			if (response.errorCode == 'SESSION_TIMEOUT') {
				if (window && window.parent) {
					var d = window.parent.document;
				} else {
					var d = document;
				}
				d.location.href = response.redirectUrl;
			}
			if ( response.status == 'ERR' && !response.hide &&  typeof(response.error) == "string") {
				if (document.hideError) {
					document.hideError = false;
				} else {
					alert(response.error);
				}
			}
		} catch (e) {
			
		}
	}
});
 
/*
 * Metadata - jQuery plugin for parsing metadata from elements
 *
 * Copyright (c) 2006 John Resig, Yehuda Katz, JяПНУЖrn Zaefferer, Paul McLanahan
 *
 * Dual licensed under the MIT and GPL licenses:
 *   http://www.opensource.org/licenses/mit-license.php
 *   http://www.gnu.org/licenses/gpl.html
 *
 * Revision: $Id$
 *
 */

(function($) {

$.extend({
	metadata : {
		defaults : {
			type: 'class',
			name: 'metadata',
			cre: /({.*})/,
			single: 'metadata'
		},
		setType: function( type, name ){
			this.defaults.type = type;
			this.defaults.name = name;
		},
		get: function( elem, opts ){
			var settings = $.extend({},this.defaults,opts);
			// check for empty string in single property
			if ( !settings.single.length ) settings.single = 'metadata';
			
			var data = $.data(elem, settings.single);
			// returned cached data if it already exists
			if ( data ) return data;
			
			data = "{}";
			
			if ( settings.type == "class" ) {
				var m = settings.cre.exec( elem.className );
				if ( m )
					data = m[1];
			} else if ( settings.type == "elem" ) {
				if( !elem.getElementsByTagName )
					return undefined;
				var e = elem.getElementsByTagName(settings.name);
				if ( e.length )
					data = $.trim(e[0].innerHTML);
			} else if ( elem.getAttribute != undefined ) {
				var attr = elem.getAttribute( settings.name );
				if ( attr )
					data = attr;
			}
			
			if ( data.indexOf( '{' ) <0 )
			data = "{" + data + "}";
			
			data = eval("(" + data + ")");
			
			$.data( elem, settings.single, data );
			return data;
		}
	}
});

/**
 * Returns the metadata object for the first member of the jQuery object.
 *
 * @name metadata
 * @descr Returns element's metadata object
 * @param Object opts An object contianing settings to override the defaults
 * @type jQuery
 * @cat Plugins/Metadata
 */
$.fn.metadata = function( opts ){
	return $.metadata.get( this[0], opts );
};

})(jQuery);


/*
 * 
 * TableSorter 2.0 - Client-side table sorting with ease!
 * Version 2.0.3
 * @requires jQuery v1.2.3
 * 
 * Copyright (c) 2007 Christian Bach
 * Examples and docs at: http://tablesorter.com
 * Dual licensed under the MIT and GPL licenses:
 * http://www.opensource.org/licenses/mit-license.php
 * http://www.gnu.org/licenses/gpl.html
 * 
 */
/**
 *
 * @description Create a sortable table with multi-column sorting capabilitys
 * 
 * @example $('table').tablesorter();
 * @desc Create a simple tablesorter interface.
 *
 * @example $('table').tablesorter({ sortList:[[0,0],[1,0]] });
 * @desc Create a tablesorter interface and sort on the first and secound column in ascending order.
 * 
 * @example $('table').tablesorter({ headers: { 0: { sorter: false}, 1: {sorter: false} } });
 * @desc Create a tablesorter interface and disableing the first and secound column headers.
 * 
 * @example $('table').tablesorter({ 0: {sorter:"integer"}, 1: {sorter:"currency"} });
 * @desc Create a tablesorter interface and set a column parser for the first and secound column.
 * 
 * 
 * @param Object settings An object literal containing key/value pairs to provide optional settings.
 * 
 * @option String cssHeader (optional) 			A string of the class name to be appended to sortable tr elements in the thead of the table. 
 * 												Default value: "header"
 * 
 * @option String cssAsc (optional) 			A string of the class name to be appended to sortable tr elements in the thead on a ascending sort. 
 * 												Default value: "headerSortUp"
 * 
 * @option String cssDesc (optional) 			A string of the class name to be appended to sortable tr elements in the thead on a descending sort. 
 * 												Default value: "headerSortDown"
 * 
 * @option String sortInitialOrder (optional) 	A string of the inital sorting order can be asc or desc. 
 * 												Default value: "asc"
 * 
 * @option String sortMultisortKey (optional) 	A string of the multi-column sort key. 
 * 												Default value: "shiftKey"
 * 
 * @option String textExtraction (optional) 	A string of the text-extraction method to use. 
 * 												For complex html structures inside td cell set this option to "complex", 
 * 												on large tables the complex option can be slow. 
 * 												Default value: "simple"
 * 
 * @option Object headers (optional) 			An array containing the forces sorting rules. 
 * 												This option let's you specify a default sorting rule. 
 * 												Default value: null
 * 
 * @option Array sortList (optional) 			An array containing the forces sorting rules. 
 * 												This option let's you specify a default sorting rule. 
 * 												Default value: null
 * 
 * @option Array sortForce (optional) 			An array containing forced sorting rules. 
 * 												This option let's you specify a default sorting rule, which is prepended to user-selected rules.
 * 												Default value: null
 *  
  * @option Array sortAppend (optional) 			An array containing forced sorting rules. 
 * 												This option let's you specify a default sorting rule, which is appended to user-selected rules.
 * 												Default value: null
 * 
 * @option Boolean widthFixed (optional) 		Boolean flag indicating if tablesorter should apply fixed widths to the table columns.
 * 												This is usefull when using the pager companion plugin.
 * 												This options requires the dimension jquery plugin.
 * 												Default value: false
 *
 * @option Boolean cancelSelection (optional) 	Boolean flag indicating if tablesorter should cancel selection of the table headers text.
 * 												Default value: true
 *
 * @option Boolean debug (optional) 			Boolean flag indicating if tablesorter should display debuging information usefull for development.
 *
 * @type jQuery
 *
 * @name tablesorter
 * 
 * @cat Plugins/Tablesorter
 * 
 * @author Christian Bach/christian.bach@polyester.se
 */

(function($) {
	$.extend({
		tablesorter: new function() {
			
			var parsers = [], widgets = [];
			
			this.defaults = {
				cssHeader: "header",
				cssAsc: "headerSortUp",
				cssDesc: "headerSortDown",
				sortInitialOrder: "asc",
				sortMultiSortKey: "shiftKey",
				sortForce: null,
				sortAppend: null,
				textExtraction: "simple",
				parsers: {}, 
				widgets: [],		
				widgetZebra: {css: ["even","odd"]},
				headers: {},
				widthFixed: false,
				cancelSelection: true,
				sortList: [],
				headerList: [],
				dateFormat: "us",
				decimal: '.',
				debug: false
			};
			
			/* debuging utils */
			function benchmark(s,d) {
				log(s + "," + (new Date().getTime() - d.getTime()) + "ms");
			}
			
			this.benchmark = benchmark;
			
			function log(s) {
				if (typeof console != "undefined" && typeof console.debug != "undefined") {
					console.log(s);
				} else {
					alert(s);
				}
			}
						
			/* parsers utils */
			function buildParserCache(table,$headers) {
				
				if(table.config.debug) { var parsersDebug = ""; }
				
				var rows = table.tBodies[0].rows;
				
				if(table.tBodies[0].rows[0]) {

					var list = [], cells = rows[0].cells, l = cells.length;
					
					for (var i=0;i < l; i++) {
						var p = false;
						
						if($.metadata && ($($headers[i]).metadata() && $($headers[i]).metadata().sorter)  ) {
						
							p = getParserById($($headers[i]).metadata().sorter);	
						
						} else if((table.config.headers[i] && table.config.headers[i].sorter)) {
	
							p = getParserById(table.config.headers[i].sorter);
						}
						if(!p) {
							p = detectParserForColumn(table,cells[i]);
						}
	
						if(table.config.debug) { parsersDebug += "column:" + i + " parser:" +p.id + "\n"; }
	
						list.push(p);
					}
				}
				
				if(table.config.debug) { log(parsersDebug); }

				return list;
			};
			
			function detectParserForColumn(table,node) {
				var l = parsers.length;
				for(var i=1; i < l; i++) {
					if(parsers[i].is($.trim(getElementText(table.config,node)),table,node)) {
						return parsers[i];
					}
				}
				// 0 is always the generic parser (text)
				return parsers[0];
			}
			
			function getParserById(name) {
				var l = parsers.length;
				for(var i=0; i < l; i++) {
					if(parsers[i].id.toLowerCase() == name.toLowerCase()) {	
						return parsers[i];
					}
				}
				return false;
			}
			
			/* utils */
			function buildCache(table) {
				
				if(table.config.debug) { var cacheTime = new Date(); }
				
				
				var totalRows = (table.tBodies[0] && table.tBodies[0].rows.length) || 0,
					totalCells = (table.tBodies[0].rows[0] && table.tBodies[0].rows[0].cells.length) || 0,
					parsers = table.config.parsers, 
					cache = {row: [], normalized: []};
				
					for (var i=0;i < totalRows; ++i) {
					
						/** Add the table data to main data array */
						var c = table.tBodies[0].rows[i], cols = [];
					
						cache.row.push($(c));
						
						for(var j=0; j < totalCells; ++j) {
							cols.push(parsers[j].format(getElementText(table.config,c.cells[j]),table,c.cells[j]));	
						}
												
						cols.push(i); // add position for rowCache
						cache.normalized.push(cols);
						cols = null;
					};
				
				if(table.config.debug) { benchmark("Building cache for " + totalRows + " rows:", cacheTime); }
				
				return cache;
			};
			
			function getElementText(config,node) {
				
				if(!node) return "";
								
				var t = "";
				
				if(config.textExtraction == "simple") {
					if(node.childNodes[0] && node.childNodes[0].hasChildNodes()) {
						t = node.childNodes[0].innerHTML;
					} else {
						t = node.innerHTML;
					}
				} else {
					if(typeof(config.textExtraction) == "function") {
						t = config.textExtraction(node);
					} else { 
						t = $(node).text();
					}	
				}
				return t;
			}
			
			function appendToTable(table,cache) {
				
				if(table.config.debug) {var appendTime = new Date()}
				
				var c = cache, 
					r = c.row, 
					n= c.normalized, 
					totalRows = n.length, 
					checkCell = (n[0].length-1), 
					tableBody = $(table.tBodies[0]),
					rows = [];
				
				for (var i=0;i < totalRows; i++) {
					rows.push(r[n[i][checkCell]]);	
					if(!table.config.appender) {
						
						var o = r[n[i][checkCell]];
						var l = o.length;
						for(var j=0; j < l; j++) {
							
							tableBody[0].appendChild(o[j]);
						
						}
						
						//tableBody.append(r[n[i][checkCell]]);
					}
				}	
				
				if(table.config.appender) {
				
					table.config.appender(table,rows);	
				}
				
				rows = null;
				
				if(table.config.debug) { benchmark("Rebuilt table:", appendTime); }
								
				//apply table widgets
				applyWidget(table);
				
				// trigger sortend
				setTimeout(function() {
					$(table).trigger("sortEnd");	
				},0);
				
			};
			
			function buildHeaders(table) {
				
				if(table.config.debug) { var time = new Date(); }
				
				var meta = ($.metadata) ? true : false, tableHeadersRows = [];
			
				for(var i = 0; i < table.tHead.rows.length; i++) { tableHeadersRows[i]=0; };
				
				$tableHeaders = $("thead th",table);
		
				$tableHeaders.each(function(index) {
							
					this.count = 0;
					this.column = index;
					this.order = formatSortingOrder(table.config.sortInitialOrder);
					
					if(checkHeaderMetadata(this) || checkHeaderOptions(table,index)) this.sortDisabled = true;
					
					if(!this.sortDisabled) {
						$(this).addClass(table.config.cssHeader);
					}
					
					// add cell to headerList
					table.config.headerList[index]= this;
				});
				
				if(table.config.debug) { benchmark("Built headers:", time); log($tableHeaders); }
				
				return $tableHeaders;
				
			};
						
		   	function checkCellColSpan(table, rows, row) {
                var arr = [], r = table.tHead.rows, c = r[row].cells;
				
				for(var i=0; i < c.length; i++) {
					var cell = c[i];
					
					if ( cell.colSpan > 1) { 
						arr = arr.concat(checkCellColSpan(table, headerArr,row++));
					} else  {
						if(table.tHead.length == 1 || (cell.rowSpan > 1 || !r[row+1])) {
							arr.push(cell);
						}
						//headerArr[row] = (i+row);
					}
				}
				return arr;
			};
			
			function checkHeaderMetadata(cell) {
				if(($.metadata) && ($(cell).metadata().sorter === false)) { return true; };
				return false;
			}
			
			function checkHeaderOptions(table,i) {	
				if((table.config.headers[i]) && (table.config.headers[i].sorter === false)) { return true; };
				return false;
			}
			
			function applyWidget(table) {
				var c = table.config.widgets;
				var l = c.length;
				for(var i=0; i < l; i++) {
					
					getWidgetById(c[i]).format(table);
				}
				
			}
			
			function getWidgetById(name) {
				var l = widgets.length;
				for(var i=0; i < l; i++) {
					if(widgets[i].id.toLowerCase() == name.toLowerCase() ) {
						return widgets[i]; 
					}
				}
			};
			
			function formatSortingOrder(v) {
				
				if(typeof(v) != "Number") {
					i = (v.toLowerCase() == "desc") ? 1 : 0;
				} else {
					i = (v == (0 || 1)) ? v : 0;
				}
				return i;
			}
			
			function isValueInArray(v, a) {
				var l = a.length;
				for(var i=0; i < l; i++) {
					if(a[i][0] == v) {
						return true;	
					}
				}
				return false;
			}
				
			function setHeadersCss(table,$headers, list, css) {
				// remove all header information
				$headers.removeClass(css[0]).removeClass(css[1]);
				
				var h = [];
				$headers.each(function(offset) {
						if(!this.sortDisabled) {
							h[this.column] = $(this);					
						}
				});
				
				var l = list.length; 
				for(var i=0; i < l; i++) {
					h[list[i][0]].addClass(css[list[i][1]]);
				}
			}
			
			function fixColumnWidth(table,$headers) {
				var c = table.config;
				if(c.widthFixed) {
					var colgroup = $('<colgroup>');
					$("tr:first td",table.tBodies[0]).each(function() {
						colgroup.append($('<col>').css('width',$(this).width()));
					});
					$(table).prepend(colgroup);
				};
			}
			
			function updateHeaderSortCount(table,sortList) {
				var c = table.config, l = sortList.length;
				for(var i=0; i < l; i++) {
					var s = sortList[i], o = c.headerList[s[0]];
					o.count = s[1];
					o.count++;
				}
			}
			
			/* sorting methods */
			function multisort(table,sortList,cache) {
				
				if(table.config.debug) { var sortTime = new Date(); }
				
				var dynamicExp = "var sortWrapper = function(a,b) {", l = sortList.length;
					
				for(var i=0; i < l; i++) {
					
					var c = sortList[i][0];
					var order = sortList[i][1];
					var s = (getCachedSortType(table.config.parsers,c) == "text") ? ((order == 0) ? "sortText" : "sortTextDesc") : ((order == 0) ? "sortNumeric" : "sortNumericDesc");
					
					var e = "e" + i;
					
					dynamicExp += "var " + e + " = " + s + "(a[" + c + "],b[" + c + "]); ";
					dynamicExp += "if(" + e + ") { return " + e + "; } ";
					dynamicExp += "else { ";
				}
				
				// if value is the same keep orignal order	
				var orgOrderCol = cache.normalized[0].length - 1;
				dynamicExp += "return a[" + orgOrderCol + "]-b[" + orgOrderCol + "];";
						
				for(var i=0; i < l; i++) {
					dynamicExp += "}; ";
				}
				
				dynamicExp += "return 0; ";	
				dynamicExp += "}; ";	
				
				eval(dynamicExp);
				
				cache.normalized.sort(sortWrapper);
				
				if(table.config.debug) { benchmark("Sorting on " + sortList.toString() + " and dir " + order+ " time:", sortTime); }
				
				return cache;
			};
			
			function sortText(a,b) {
				return ((a < b) ? -1 : ((a > b) ? 1 : 0));
			};
			
			function sortTextDesc(a,b) {
				return ((b < a) ? -1 : ((b > a) ? 1 : 0));
			};	
			
	 		function sortNumeric(a,b) {
				return a-b;
			};
			
			function sortNumericDesc(a,b) {
				return b-a;
			};
			
			function getCachedSortType(parsers,i) {
				return parsers[i].type;
			};
			
			/* public methods */
			this.construct = function(settings) {

				return this.each(function() {
					
					if(!this.tHead || !this.tBodies) return;
					
					var $this, $document,$headers, cache, config, shiftDown = 0, sortOrder;
					
					this.config = {};
					
					config = $.extend(this.config, $.tablesorter.defaults, settings);
					
					// store common expression for speed					
					$this = $(this);
					
					// build headers
					$headers = buildHeaders(this);
					
					// try to auto detect column type, and store in tables config
					this.config.parsers = buildParserCache(this,$headers);
					
					
					// build the cache for the tbody cells
					cache = buildCache(this);
					
					// get the css class names, could be done else where.
					var sortCSS = [config.cssDesc,config.cssAsc];
					
					// fixate columns if the users supplies the fixedWidth option
					fixColumnWidth(this);
					
					// apply event handling to headers
					// this is to big, perhaps break it out?
					$headers.click(function(e) {
						
						$this.trigger("sortStart");
						
						var totalRows = ($this[0].tBodies[0] && $this[0].tBodies[0].rows.length) || 0;
						
						if(!this.sortDisabled && totalRows > 0) {
							
							
							// store exp, for speed
							var $cell = $(this);
	
							// get current column index
							var i = this.column;
							
							// get current column sort order
							this.order = this.count++ % 2;
							
							// user only whants to sort on one column
							if(!e[config.sortMultiSortKey]) {
								
								// flush the sort list
								config.sortList = [];
								
								if(config.sortForce != null) {
									var a = config.sortForce; 
									for(var j=0; j < a.length; j++) {
										if(a[j][0] != i) {
											config.sortList.push(a[j]);
										}
									}
								}
								
								// add column to sort list
								config.sortList.push([i,this.order]);
							
							// multi column sorting
							} else {
								// the user has clicked on an all ready sortet column.
								if(isValueInArray(i,config.sortList)) {	 
									
									// revers the sorting direction for all tables.
									for(var j=0; j < config.sortList.length; j++) {
										var s = config.sortList[j], o = config.headerList[s[0]];
										if(s[0] == i) {
											o.count = s[1];
											o.count++;
											s[1] = o.count % 2;
										}
									}	
								} else {
									// add column to sort list array
									config.sortList.push([i,this.order]);
								}
							};
							setTimeout(function() {
								//set css for headers
								setHeadersCss($this[0],$headers,config.sortList,sortCSS);
								appendToTable($this[0],multisort($this[0],config.sortList,cache));
							},1);
							// stop normal event by returning false
							return false;
						}
					// cancel selection	
					}).mousedown(function() {
						if(config.cancelSelection) {
							this.onselectstart = function() {return false};
							return false;
						}
					});
					
					// apply easy methods that trigger binded events
					$this.bind("update",function() {
						
						// rebuild parsers.
						this.config.parsers = buildParserCache(this,$headers);
						
						// rebuild the cache map
						cache = buildCache(this);
						
					}).bind("sorton",function(e,list) {
						
						$(this).trigger("sortStart");
						
						config.sortList = list;
						
						// update and store the sortlist
						var sortList = config.sortList;
						
						// update header count index
						updateHeaderSortCount(this,sortList);
						
						//set css for headers
						setHeadersCss(this,$headers,sortList,sortCSS);
						
						
						// sort the table and append it to the dom
						appendToTable(this,multisort(this,sortList,cache));

					}).bind("appendCache",function() {
						
						appendToTable(this,cache);
					
					}).bind("applyWidgetId",function(e,id) {
						
						getWidgetById(id).format(this);
						
					}).bind("applyWidgets",function() {
						// apply widgets
						applyWidget(this);
					});
					
					if($.metadata && ($(this).metadata() && $(this).metadata().sortlist)) {
						config.sortList = $(this).metadata().sortlist;
					}
					// if user has supplied a sort list to constructor.
					if(config.sortList.length > 0) {
						$this.trigger("sorton",[config.sortList]);	
					}
					
					// apply widgets
					applyWidget(this);
				});
			};
			
			this.addParser = function(parser) {
				var l = parsers.length, a = true;
				for(var i=0; i < l; i++) {
					if(parsers[i].id.toLowerCase() == parser.id.toLowerCase()) {
						a = false;
					}
				}
				if(a) { parsers.push(parser); };
			};
			
			this.addWidget = function(widget) {
				widgets.push(widget);
			};
			
			this.formatFloat = function(s) {
				var i = parseFloat(s);
				return (isNaN(i)) ? 0 : i;
			};
			this.formatInt = function(s) {
				var i = parseInt(s);
				return (isNaN(i)) ? 0 : i;
			};
			
			this.isDigit = function(s,config) {
				var DECIMAL = '\\' + config.decimal;
				var exp = '/(^[+]?0(' + DECIMAL +'0+)?$)|(^([-+]?[1-9][0-9]*)$)|(^([-+]?((0?|[1-9][0-9]*)' + DECIMAL +'(0*[1-9][0-9]*)))$)|(^[-+]?[1-9]+[0-9]*' + DECIMAL +'0+$)/';
				return RegExp(exp).test($.trim(s));
			};
			
			this.clearTableBody = function(table) {
				if($.browser.msie) {
					function empty() {
						while ( this.firstChild ) this.removeChild( this.firstChild );
					}
					empty.apply(table.tBodies[0]);
				} else {
					table.tBodies[0].innerHTML = "";
				}
			};
		}
	});
	
	// extend plugin scope
	$.fn.extend({
        tablesorter: $.tablesorter.construct
	});
	
	var ts = $.tablesorter;
	
	// add default parsers
	ts.addParser({
		id: "text",
		is: function(s) {
			return true;
		},
		format: function(s) {
			return s.toLowerCase();
		},
		type: "text"
	});
	
	ts.addParser({
		id: "digit",
		is: function(s,table) {
			var c = table.config;
			return $.tablesorter.isDigit(s,c);
		},
		format: function(s) {
			return $.tablesorter.formatFloat(s);
		},
		type: "numeric"
	});
	
	ts.addParser({
		id: "currency",
		is: function(s) {
			return /^[£$€?.]/.test(s);
		},
		format: function(s) {
			return $.tablesorter.formatFloat(s.replace(new RegExp(/[^0-9.]/g),""));
		},
		type: "numeric"
	});
	
	ts.addParser({
		id: "ipAddress",
		is: function(s) {
			return /^\d{2,3}[\.]\d{2,3}[\.]\d{2,3}[\.]\d{2,3}$/.test(s);
		},
		format: function(s) {
			var a = s.split("."), r = "", l = a.length;
			for(var i = 0; i < l; i++) {
				var item = a[i];
			   	if(item.length == 2) {
					r += "0" + item;
			   	} else {
					r += item;
			   	}
			}
			return $.tablesorter.formatFloat(r);
		},
		type: "numeric"
	});
	
	ts.addParser({
		id: "url",
		is: function(s) {
			return /^(https?|ftp|file):\/\/$/.test(s);
		},
		format: function(s) {
			return jQuery.trim(s.replace(new RegExp(/(https?|ftp|file):\/\//),''));
		},
		type: "text"
	});
	
	ts.addParser({
		id: "isoDate",
		is: function(s) {
			return /^\d{4}[\/-]\d{1,2}[\/-]\d{1,2}$/.test(s);
		},
		format: function(s) {
			return $.tablesorter.formatFloat((s != "") ? new Date(s.replace(new RegExp(/-/g),"/")).getTime() : "0");
		},
		type: "numeric"
	});
		
	ts.addParser({
		id: "percent",
		is: function(s) { 
			return /\%$/.test($.trim(s));
		},
		format: function(s) {
			return $.tablesorter.formatFloat(s.replace(new RegExp(/%/g),""));
		},
		type: "numeric"
	});

	ts.addParser({
		id: "usLongDate",
		is: function(s) {
			return s.match(new RegExp(/^[A-Za-z]{3,10}\.? [0-9]{1,2}, ([0-9]{4}|'?[0-9]{2}) (([0-2]?[0-9]:[0-5][0-9])|([0-1]?[0-9]:[0-5][0-9]\s(AM|PM)))$/));
		},
		format: function(s) {
			return $.tablesorter.formatFloat(new Date(s).getTime());
		},
		type: "numeric"
	});

	ts.addParser({
		id: "shortDate",
		is: function(s) {
			return /\d{1,2}[\/\-.]\d{1,2}[\/\-.]\d{2,4}/.test(s);
		},
		format: function(s,table) {
			var c = table.config;
			s = s.replace(/\-/g,"/");
			if(c.dateFormat == "us") {
				// reformat the string in ISO format
				s = s.replace(/(\d{1,2})[\/\-](\d{1,2})[\/\-](\d{4})/, "$3/$1/$2");
			} else if(c.dateFormat == "uk") {
				//reformat the string in ISO format
				s = s.replace(/(\d{1,2})[\/\-](\d{1,2})[\/\-](\d{4})/, "$3/$2/$1");
			} else if(c.dateFormat == "dd/mm/yy" || c.dateFormat == "dd-mm-yy") {
				s = s.replace(/(\d{1,2})[\/\-](\d{1,2})[\/\-](\d{2})/, "$1/$2/$3");	
			} else if(c.dateFormat == "mm/dd/yy") {
				s = s.replace(/(\d{1,2})[\/\-](\d{1,2})[\/\-](\d{4})/, "$2/$1/$3");
			} else if(c.dateFormat == "dd.mm.yy") {
				s = s.replace(/(\d{1,2})[\/\-.](\d{1,2})[\/\-.](\d{4})/, "$1/$2/$3");
			}
			return $.tablesorter.formatFloat(new Date(s).getTime());
		},
		type: "numeric"
	});

	ts.addParser({
	    id: "time",
	    is: function(s) {
	        return /^(([0-2]?[0-9]:[0-5][0-9])|([0-1]?[0-9]:[0-5][0-9]\s(am|pm)))$/.test(s);
	    },
	    format: function(s) {
	        return $.tablesorter.formatFloat(new Date("2000/01/01 " + s).getTime());
	    },
	  type: "numeric"
	});
	
	
	ts.addParser({
	    id: "metadata",
	    is: function(s) {
	        return false;
	    },
	    format: function(s,table,cell) {
			var c = table.config, p = (!c.parserMetadataName) ? 'sortValue' : c.parserMetadataName;
	        return $(cell).metadata()[p];
	    },
	  type: "numeric"
	});
	
	// add default widgets
	ts.addWidget({
		id: "zebra",
		format: function(table) {
			if(table.config.debug) { var time = new Date(); }
			$("tr:visible",table.tBodies[0])
	        .filter(':even')
	        .removeClass(table.config.widgetZebra.css[1]).addClass(table.config.widgetZebra.css[0])
	        .end().filter(':odd')
	        .removeClass(table.config.widgetZebra.css[0]).addClass(table.config.widgetZebra.css[1]);
			if(table.config.debug) { $.tablesorter.benchmark("Applying Zebra widget", time); }
		}
	});	
})(jQuery);
/**
  * @name  wbsPopup
  * @type  jQuery
  * @param String  target             	div
  * @param Hash    options            	additional options
  * @param Iteger  options[width]  	
  * @param Iteger  options[height]
  * @param String  options[backgroundColor] background css background-color
  * @param Float  options[opacity]
  * @param String  options[url]  url content
  * @param Function  options[loadComplite]  callback
  * @param Function  options[hidePopup]  callback
  * @param Hash  options[callback]  object Functions to callback (iframe use)
  */
(function($) {
	
	$.fn.wbsPopup = function(options) {
		
		var settings = {
            width		: 500,
            height		: 400,
            backgroundColor: '#000000',
            opacity		: 0.5,
            iframe		: false,
            close		: ''
        };
        
        if(options) {
            $.extend(settings, options);
        }
        
        var loadComplite = settings.loadComplite || function() {};
        var hidePopup = settings.hidePopup || function() {};
        var callback = settings.callback || {};
        
        return this.each(function() {
        	if ( !settings.iframe ) {
        		$(this).empty();
        	}
        	var $target = $(this);

        	var $body =  $('body');
    	
		    $(window).keydown(function(e){		 
		    	if (e.keyCode == 27) {
					if ( settings.iframe)
						window.closePopup(false);
					else { 
						$target.wbsPopupClose();
					}
		    	}
		    });
        	
        	var $background = $("<div id='wbs-popup-bg'></div>");
        	$body.append($background);
        	$background.css({
        		opacity: settings.opacity,
        		'z-index': 500,
        		position: 'absolute',
        		top: 0,
        		left: 0,
				height: '100%',
				width: '100%',
				'background-color': settings.backgroundColor
        	});
        	
        	$target.css({
        		marginLeft: '-' + parseInt((settings.width / 2),10) + 'px', 
        		width: settings.width + 'px',
        		position: 'absolute',
        		display: 'block',
        		height: settings.height,
        		width : settings.width,
        		left: '50%',
        		top: '50%',
        		'z-index': 502        		
        	});
			if ( !(jQuery.browser.msie)) { // take away IE6
				$target.css({
					marginTop: '-' + parseInt((settings.height / 2), 10) + 'px'
				});
			}
						
			if (settings.url) {
				if ( !settings.iframe ) {
					$target.load( settings.url, function(){
						
						if ( !this.settings.close == '' )							
							$(this.self).append('<a href="#" id="popupclose" onclick="$(this).parent().wbsPopupClose(); $(this).remove(); return false;" >'+this.settings.close+'</a>');
							
						this.loadComplite();
					}.bind({
						self: this,
						settings: settings,
						loadComplite: loadComplite
					}) );
				}
				else {
					$target.hidePopup = hidePopup;
					$target.loadComplite = loadComplite;
					$target.children().not('#popup').remove();
					var $iframe = $('<iframe id="popup_iframe" src="'+settings.url+'" style="width:100%; height:100%;"/>').appendTo($target);
					
					window.closePopup = function(isReload, id){
						var isReload = (isReload == undefined) ? true : isReload;
						this.wbsPopupClose();
						if (isReload)
							this.hidePopup(id);
							
						//this.loadComplite(id);
					}.bind($target);
					
					var self = this;
					var isFrist = true;
					var dd_ = loadComplite;
					$iframe.load(function(){
						if ( isFrist ) {
							isFrist = false;
							
							$iframe.contents().find('form').submit(function(){
								$iframe.hide();
								$('#progress').show();
							});
							
							return;
						}
						var response = $iframe.contents().find('body').html();
						if ( response.length > 0 )						
						try {
							var response = eval("(" + response + ")");
						} catch (e) {}
						
						dd_.apply(self, [response]);
						return true;
					});
				}
			}
			else {
				if ( !settings.close == '' )
					$(this).append('<a href="#" id="popupclose" onclick="$(this).parent().wbsPopupClose(); $(this).remove(); return false;" >'+settings.close+'</a>');
			}

			$target.show();	
        });
	};
	
	$.fn.wbsPopupRender = function( notBindEvent ) {		
		return this.each(function() {
			var $target = $(this);
			$target.css({
        		marginLeft: '-' + parseInt( ($(this).width() / 2), 10) + 'px',
        		marginTop: '-' + parseInt( ($(this).height() / 2), 10) + 'px'
        	});
        	if ( !notBindEvent )
        	$(window).resize(function(){
        		$target.wbsPopupRender( true );
        	});
        	
		});
	};
	
	$.fn.wbsPopupClose = function(target, options) {
		return this.each(function() {
			$(this).children('iframe').remove();
			$('#popup_iframe').remove();
			$('#wbs-popup-bg').remove();
			$(this).hide();
		});
	};
	
})(jQuery);
/**
  * @name  editableGrid
  * @type  jQuery
  */
(function($) {
	$.fn.editableGrid = function(options){
		
		// config
		var defaults = {	
			containerId: 'test',
			show_delete_column: true,
			callback: function(){},
			saveCallback: function(){},
			"visible_fields":{},
			"hidden_fields":{},
			"all_fields":[],
			"contacts":{}
		}
		
		var options = $.extend(defaults, options);
		
		//create additional options
		for (var field_key in options.visible_fields){
			options.all_fields[field_key] = options.visible_fields[field_key];
		}
		for (var field_key in options.hidden_fields){
			options.all_fields[field_key]= options.hidden_fields[field_key];
		}
		
		//private functions
		
		function appendDeleteField(){
			if (options.show_delete_column) {
				var delete_field = {
						name:'',
						dbname:'DELETE',
						type: 'DELETE',
						width: '2%'
					};
				options.visible_fields["delete"] = delete_field;
			}
		}

		appendDeleteField();
		
		function getLength(obj) {
		    var size = 0;
		    for (key in obj) {
		        size++;
		    }
		    return size;
		};
		
		function checkEmail(el){
			val = $(el).val();
			var re = /^(?:[a-z0-9!#$%&'*+/=?^_`{|}~-]+(?:\.[a-z0-9!#$%&'*+/=?^_`{|}~-]+)*|"(?:[\x01-\x08\x0b\x0c\x0e-\x1f\x21\x23-\x5b\x5d-\x7f]|\\[\x01-\x09\x0b\x0c\x0e-\x7f])*")@(?:(?:[a-z0-9](?:[a-z0-9-]*[a-z0-9])?\.)+[a-z0-9](?:[a-z0-9-]*[a-z0-9])?|\[(?:(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\.){3}(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?|[a-z0-9-]*[a-z0-9]:(?:[\x01-\x08\x0b\x0c\x0e-\x1f\x21-\x5a\x53-\x7f]|\\[\x01-\x09\x0b\x0c\x0e-\x7f])+)\])/i
			if (val=='' || re.test(val)) {
				return 0;
			} else {
				$(el).focus();
				return options.invalid_email_msg;
			}
		}
		
		function checkDate(el){
			val = $(el).val();
			var re = new RegExp();
			if (val=='' || re.test(val)) {
				return 0;
			} else {
				$(el).focus();
				return options.invalid_date_msg;
			}
		}
		
		function checkUrl(el){
			val = $(el).val();
			var re = new RegExp();
			re.compile("^((http|https)+://)?[A-Za-z0-9-_]+\\.[A-Za-z0-9-_%&\?\/.=]+$"); 
			if (val=='' || re.test(val)) {
				return 0;
			} else {
				$(el).focus();
				return options.invalid_url_msg;
			}
		}
		
		function checkRequired(el, field){
			val = $(el).val();
			if (val=='') {
				$(el).focus();
				return options.required_field_msg;
			} else {
				return 0;
			}
		}
		
		function addErrorMsg(el, msg){
			$(el).addClass('error');
			$('.tooltip', $(el).parent()).remove();
			$(el).parent().append('<span class="tooltip">'+msg+'</span>');
		}
		
		function removeErrorMsg(el){
			$(el).removeClass('error');
			$('.tooltip', $(el).parent()).remove();
		}
		
		function generateRowContent(values, length){
			var rowContent = $('<tr></tr>');
			var fields = options.visible_fields;
			var field_counter = 0;
			for (var field_key in fields){
				var field = fields[field_key];
				var ceilContent = $('<td class="'+field.type+'"></td>');
				var value = "";
				var id = 0;
				var disabled = false;
				if (values != null) {
					id = values[0];
					value = values[field_counter+1];
					if (value == undefined) disabled = true;
					if (value == null) value = "";
				} else {
					id = "new-"+(length+1);
				}
				
				switch(field.type) {
					case "TEXT": 
					case "URL": 
					case "EMAIL": 
					case "MOBILE":
					case "NUMERIC": 
					case "VARCHAR": 
						var input = $('<input value="'+value+'" size="'+field.options+'" type="text"></input>');
						input.attr('name','CONTACTS['+id+']['+field.id+']');
						input.attr('id','CONTACTS-'+id+'-'+field.id);
						switch(field.type) {
							case "EMAIL": 
								$(input).blur(function(){
									check = checkEmail(this);
									if (check!=0){
										addErrorMsg(this,check);
									} else {
										removeErrorMsg(this);
									}
								});
								$(input).keyup(function(){
									check = checkEmail(this)
									if (check==0){
										removeErrorMsg(this);
									}
								});
								
							break;
							case "URL": 
								$(input).blur(function(){
									check = checkUrl(this)
									if (check!=0){
										addErrorMsg(this,check);
									} else {
										removeErrorMsg(this);
									}
								});
								
								$(input).keyup(function(){
									check = checkUrl(this)
									if (check==0){
										removeErrorMsg(this);
									}
								});
							break;
						}

						/* check for required fields
						$(input).blur(function(){
							check = checkRequired(this, field);
							if (check!=0){
								addErrorMsg(this,check);
							}
						})
						*/
						ceilContent.append(input);
						break;
					case "DATE":
						var input = $('<input value="'+value+'" class="datepicker" type="text"></input>');
						input.attr('name','CONTACTS['+id+']['+field.id+']');
						input.attr('id','CONTACTS-'+id+'-'+field.id);
						input.addClass('DateField');
						ceilContent.append(input);

						$(input).keydown(function(){
							if ($(this).val()=='' && $(this).hasClass('error')){
								removeErrorMsg(this);
							}
						})
						
						break;
					case "CHECKBOX":
						var input = $('<input value="1" '+(value==0 ? '' : 'checked')+' type="checkbox"></input>');
						input.attr('name','CONTACTS['+id+']['+field.id+']');
						input.attr('id','CONTACTS-'+id+'-'+field.id);
						input.change(function () {
							var n = $(this).attr('name');
							var id = $(this).attr('id');
							var v = $(this).is(":checked") ? 1 : 0;
							if (!$('#' + id + '-h').length) {
								$(this).parent().append('<input type="hidden" name="' + n + '" id="' + id + '-h" value="' + v + '" />');
							} 
							$('#' + id + '-h').val(v);							
						});
						ceilContent.append(input);
						break;
					case "MENU":
						var select = $('<select></select>');
						select.attr('name','CONTACTS['+id+']['+field.id+']');
						select.attr('id','CONTACTS-'+id+'-'+field.id);
						select.append('<option value=""></option>')
						for (var option_cnt in field.options){
							var option = $('<option></option>');
							option.attr('value',field.options[option_cnt]);
							option.html(field.options[option_cnt]);
							if (value == field.options[option_cnt]) {
								option.attr('selected','selected');
								option.addClass('selected');
							}
							select.append(option)
							select.change(function(){
								$('option', this).removeClass('selected');
								$('option[value='+$(this).val()+']', this).addClass('selected');
							});
						}
						ceilContent.append(select);
						break;
					case "DELETE":
						if (values != null) {
							var deleteCheckbox = $('<input name="DELETE[]" id="DELETE['+id+']" class="delete_chbox" value="'+id+'" type="checkbox"></input>');
							deleteCheckbox.change(function(){
								var tr = $(this).parent().parent().parent();
								if (!tr.hasClass('disabled')){
									tr.addClass('disabled');
									$(':input',tr).attr('disabled','disabled');
									$(this).removeAttr('disabled');
								} else {
									tr.removeClass('disabled');
									$(':input',tr).removeAttr('disabled');
								}
							})
							ceilContent.append(deleteCheckbox);
							var div = $('<div style="width:80px;"></div>');
							div.append(deleteCheckbox);
							div.append('<label for="DELETE['+id+']"><small>'+options.delete_msg+'</small></label>');
							ceilContent.append(div);
						} else{
							var deleteCheckbox = $('<input type="checkbox"></input>');
							deleteCheckbox.click(function(){
								$(this).parent().parent().parent().remove()
								options.callback();
							})
							ceilContent.append(deleteCheckbox);
						}
						break;
				}
				
				if (disabled) {
					$(ceilContent).children().attr('disabled', 'disabled');
				}
				
				$(ceilContent).click(
					function() {
						$('input', this).focus();
					}
				);
				
				$(":input",ceilContent).focus(function(){
					if (!$(this).hasClass('delete_chbox')){
						$('.focused').removeClass('focused');
						$(this).addClass('focused');
					}
				});
				
				rowContent.append(ceilContent);
				field_counter++;
			}
			return rowContent;
		}
		
		function renderFields(fields){
			$('.replace_row').remove();
			$('#multi_edit_button').show();
			var content = $([]);
			var thead = $('thead', $('#'+options.containerId));
			if ($(thead).length>0) $(thead).remove();
			var tbody = $('tbody', $('#'+options.containerId));
			if ($(tbody).length>0) $(tbody).remove();
			var thead_wrap = $('<thead></thead>');
			var thead = $('<tr></tr>');
			for (var field_key in fields){
				var field_name = fields[field_key].name.split(' — ');
				if (field_name[1]) {
					field_name = field_name[1];
				} else {
					field_name = field_name[0];
				}
				var field = $('<th>'+field_name+'</th>');
				if (fields[field_key].type == "DELETE") {
					field.addClass('{sorter: false}');
				}
				if (fields[field_key].type == "DATE") {
						field.addClass("{sorter: false}");
					}
				if (fields[field_key].width != null) {
					field.css('width',fields[field_key].width);
				} else {
					field.css('width',Math.round(100 / (getLength(fields)-1))+'%');
				}
				thead.append(field);
			}
			thead_wrap.append(thead);
			
			var tbody = $('<tbody></tbody>');
			var contacts = options.contacts;
			for (var contact_id in contacts){
				var rowArray = [];
				rowArray.push(contact_id);
				for (var field_key in fields){
					rowArray.push(contacts[ contact_id ][ fields[field_key].dbname ])
				}
				var rowContent = generateRowContent(rowArray, 0);
				if (contacts[ contact_id ]['right_delete'] != 1) {
					$('.DELETE', rowContent).html('<div style="width:80px;"></div>');
				}
				if (contacts[ contact_id ]['right'] != 1) {
					$(':input', rowContent).attr('disabled','disabled');
				}
				tbody.append(rowContent);
			}
			content['thead'] = thead_wrap;
			content['tbody'] = tbody;
			return content;
		}
		
		/* public functions */
		 
		this.addRow = /* public */ function(){
			var tbody = $('tbody', $('#'+options.containerId));
			var rowContent = generateRowContent(null, $('tbody tr', $(this)).length)
			tbody.prepend(rowContent);
			options.callback();
		}
		
		this.multiEdit = /* public */ function(){
			$('#multi_edit_button').hide();
			$('.replace_row').remove();
			if ($('.focused').length > 0) {
				var row = $('.focused').parent().parent().clone(true);
			} else {
				var row = $('tbody tr:first', '#'+options.containerId).clone(true);
			}
			$('td.DELETE div', row).html('');
			$(':input',row).each(function(i){
				$(this).removeAttr('disabled');
				if ($(this).hasClass('DateField')) {
					$('img', $(this).parent()).remove();
					var input = $('<input id="'+('multiedit-'+i)+'" value="" type="text"></input>');
					input.addClass('DateField');
					$(this).replaceWith(input);
				}
				$(this).attr('name','');
				$(this).attr('id','multiedit-'+i);
				if(! $(this).hasClass('focused')) $(this).val('');
				$('option[class=selected]', this).attr('selected','selected');
			})
			row.removeClass('even');
			row.removeClass('odd');
			row.addClass('replace_row');
			
			var apply_btn = $('<input type="button" class="button" value="'+options.apply_msg+'"></input>');
			var close_btn = $('<input type="button" class="button cancel" value="'+options.close_msg+'"></input>');
			
			apply_btn.click(function(){
				$('table tbody tr', '#'+options.containerId).each(function(){
					$(':input',this).each(function(i, obj) {
						if ($("#multiedit-"+i).attr('type') == 'checkbox' || ($("#multiedit-"+i).val()!='' && !$("#multiedit-"+i).hasClass('error'))){
							if ($(this).attr('type') == 'checkbox') {
								if ($("#multiedit-"+i).is(":checked")) {
									$(this).attr('checked', 'checked');
								} else {
									$(this).removeAttr('checked');
								}
							} else if (!$(this).attr('disabled')) {
								$(this).val($("#multiedit-"+i).val());
							}
						}
					});
				})
			});
			close_btn.click(function(){
				/*$('.replace_row').remove();
				var content = renderFields(options.visible_fields);
				$('table.grid', '#'+options.containerId).append(content['tbody']);
				$('table.grid', '#'+options.containerId).append(content['thead']);
				$('#multi_edit_button').show();
				options.callback();*/
				$('.replace_row').remove();
				$('#multi_edit_button').show();
			});
			
			var buttons_row = $('<tfoot></tfoot>');
			var buttons_row_tr = $('<tr class="multiedit_tfoot"></tr>');
			var buttons_row_td = $('<td colspan="100" align="left"></td>');
			var buttons_row_td_div = $('<div class="multiedit_tfoot_div"></div>');
			buttons_row_td_div.append(apply_btn);
			buttons_row_td_div.append(close_btn);
			buttons_row_td.append(buttons_row_td_div);
			buttons_row_tr.append(buttons_row_td);
			buttons_row.append(buttons_row_tr);
			var multi_edit = $('<table cellpadding="0" cellspacing="0" border="0" width="100%" class="datatable replace_row"></table>');
			var multi_edit_thead = $('thead', '#'+options.containerId).clone();
			multi_edit_thead.css({'visibility': 'hidden', 'overflow':'hidden', 'height':'0px','line-height':'0px'});
			multi_edit.append(multi_edit_thead);
			multi_edit.append('<tr class="multiedit_thead"><td colspan="100">'+options.replace_info_msg+'</td></tr>');
			multi_edit.append(row);
			multi_edit.append(buttons_row);
			$('#'+options.containerId).prepend(multi_edit);
			options.callback();
			$('.focused', row).focus();
			$('td', row).each(function(){
				$(this).attr('name','');
			});
		}
		
		this.changeFields = /* public */function(){
			var select1 = $('<select id="select1" style="width: 300px;" size="8" multiple></select>');
			var select2 = $('<select id="select2" style="width: 300px;" size="8" multiple></select>');
			var visible_fields = options.visible_fields;
			if (options.show_delete_column) delete visible_fields['delete'];

			for (var field_key in visible_fields){
				var field = visible_fields[field_key];
				var option = $('<option></option>');
				option.attr('value',field_key);
				option.html(field.name);
				select1.append(option)
			}
			var hidden_fields = options.hidden_fields;
			for (var field_key in hidden_fields){
				var field = hidden_fields[field_key];
				var option = $('<option></option>');
				option.attr('value',field_key);
				option.html(field.name);
				select2.append(option)
			}

			var up = $('<div id="btn-up" class="updown wbs-move-btn disable"><a href="javascript:void(0)" id="link_up">↑</a></div>');
			var down = $('<div id="btn-down" class="updown wbs-move-btn disable"><a href="javascript:void(0)" id="link_down">↓</a></div>');
			
			up.click(function() {  
					$("#select1 option:selected").insertBefore($("#select1 option:selected:first").prev());
			});  			
			down.click(function() {  
					$("#select1 option:selected").insertAfter($("#select1 option:selected:last").next());
			} );
			
			var add = $('<div id="btn-left" class="wbs-move-btn disable"><a href="javascript:void(0)" id="link_left">←</a></div>');
			var remove = $('<div id="btn-right" class="wbs-move-btn disable"><a href="javascript:void(0)" id="link_right">→</a></div>');
			
			add.click(function() {  
					$('#select1').change();
					$('#btn-left').addClass('disable');
					$('#btn-right').removeClass('disable');
					return !$('#select2 option:selected').remove().appendTo('#select1');  
			});  			
			remove.click(function() {  
				//if (!$('#btn-left').hasClass('disable')) {
					$('#select2').change();
					$('#btn-right').addClass('disable');
					$('#btn-left').removeClass('disable');
					$('#select1 option:selected').remove().appendTo('#select2'); 
					if ($('#select1 option').length == 0) $('#changeFields').attr('disabled','disabled');
				//} 
			} );
			
			var container_dlg = $('<div class="wbs-dlg-content" class="field visible-fields" id="changefields"></div>');		
			var container = $('<div id="dlg-move-content" class="hidden wbs-dlg-content-inner" style="display: block;"></div>');		
			var table = $('<table></table>');
			var tr = $('<tr></tr>');
			var select1_div = $('<div class="select-container"></div>');
			select1_div.append(select1);
			var select2_div = $('<div class="select-container"></div>');
			select2_div.append(select2);
			
			var column1 = $('<td></td>');
			column1.append('<h4>'+options.visible_columns_msg+'</h4>');
			column1.append(select1_div);
			
			var column2 = $('<td align="middle" align="center" width="30" style="vertical-align: middle;"></td>');
			var column2_div = $('<div class="control-btns" style="padding-top:45px" id="control"></div>');
			column2_div.append(up);
			column2_div.append(down);
			column2_div.append(remove);
			column2_div.append(add);
			column2.append(column2_div);
			
			var column3 = $('<td></td>');
			column3.append('<h4>'+options.hidden_columns_msg+'</h4>');
			column3.append(select2_div);
			tr.append(column1);
			tr.append(column2);
			tr.append(column3);
			table.append(tr);
			container.append(table);

			select1.change(function(){
				$('#select1').addClass('select_focused');
				$('#select2').removeClass('select_focused');
				$('#changeFields').removeAttr('disabled');
				$('#btn-right').removeClass('disable');
				$('#select1').focus();
			});

			select1.focus(function(){
				$('.updown','#control').removeClass('disable');
			});
			
			select2.focus(function(){
				$('.updown','#control').addClass('disable');
			});
			
			select2.change(function(){
				$('#select2').addClass('select_focused');
				$('#select1').removeClass('select_focused');
				$('#changeFields').removeAttr('disabled');
				$('#btn-left').removeClass('disable');
				$('#select2').focus();
			});
			
			select2_div.dblclick(function() {  
				$('#select1').change();
				$('#btn-left').addClass('disable');
				$('#btn-right').removeClass('disable');
				 return !$('#select2 option:selected').remove().appendTo('#select1');  
			}); 
			select1_div.dblclick(function() {  
				$('#select2').change();
				$('#btn-right').addClass('disable');
				$('#btn-left').removeClass('disable');
				 return !$('#select1 option:selected').remove().appendTo('#select2');  
			}); 

			$('#popup').wbsPopup({
				width: 690,
				height: 280
			});
			$('#popup').prepend(
				'<div class="wbs-dlg-header">'+
					'<div class="label">'+options.customize_columns_msg+'</div>'+
				'</div>'
			);				
			container_dlg.append(container);
			$('#popup').append(container_dlg);
			$('#popup').append(
				'<div class="wbs-dlg-footer">'+
				'<div class="setting-options">'+
					'<input id="changeFields" class="wbs-dlg-button" disabled="disabled" type="button" value="'+options.save_fields_msg+'"/>'+
					'<input class="wbs-dlg-button" type="button" value="'+options.cancel_msg+'" onclick="$(\'#popup\').wbsPopupClose()" />'+
				'</div>'
			);
			$('#changeFields').click(function(){
				options.visible_fields = [];
				$('#select1 option').each(function(sort){
					var id = $(this).val();
					for (var field_key in options.all_fields){
						if (field_key==id) {
							options.visible_fields[sort] = options.all_fields[id];
							options.visible_fields[sort]['real_id'] = id;
							if (options.hidden_fields[id]) {
								delete options.hidden_fields[id];
							}
						}
					}
				})
				$('#select2 option').each(function(){
					var id = $(this).val();
					for (var field_key in options.all_fields){
						if (field_key==id) {
							options.hidden_fields[id] = options.all_fields[id];
						}
					}
				})
				appendDeleteField();
				var content = renderFields(options.visible_fields)
				$('table.grid', '#'+options.containerId).append(content['thead']);
				$('table.grid', '#'+options.containerId).append(content['tbody']);
				var tmp_arr = options.visible_fields;
				if (options.show_delete_column) delete tmp_arr['delete'];
				options.visible_fields = new Object();
				var real_id = 0;
				var cnt = 0;
				for (var field_key in tmp_arr){
					real_id = tmp_arr[field_key].real_id;
					if (real_id) {
						cnt++;
						var item = options.all_fields[real_id];
						item.sort = cnt;
						options.visible_fields[real_id] = item;
					}
				}
				appendDeleteField();
				options.callback();
				$('#popup').wbsPopupClose();
			})
		}
		
		this.init =  /* public */ function() {  
			var obj = $(this);
			var wrapper = $('<div class="datatable"></div>');
			var table = $('<table cellpadding="0" cellspacing="0" border="0" class="grid"></table>');
			table.css('width','100%');
			var fields = options.visible_fields;
			var content = renderFields(fields);
			table.append(content['thead']);
			table.append(content['tbody']);

			var tfoot = $('<tfoot></tfoot>');
			var tfoot_tr = $('<tr></tr>');
			var tfoot_td = $('<td colspan="100" ></td>');
			var msg = $('<div class="msg" style="display:none;"></div>');
			tfoot_td.append(msg);
			var tfoot_div = $('<div></div>');
			
			var save_button = $('<input type="button" class="button" value="'+options.save_msg+'"></input>');
			save_button.click(function(){
				var request = $('#'+options.containerId+'_form').serializeArray();
				$.post(options.save_action_url, request , function (response) {
					if (response.status == 'OK') {
						msg.html(options.redirect_msg);
						if (!msg.hasClass('msg-yellow')) {
							msg.addClass('msg-yellow');
							msg.removeClass('msg-error');
						}
						msg.show();
						
						var message = "Saved: " + response.data.saved;
						if (response.data.deleted) {
							message += ", deleted: " + response.data.deleted;
						}
						options.saveCallback(message)
					} else {
						msg.html(options.error_msg);
						if (!msg.hasClass('msg-error')) {
							msg.addClass('msg-error');
							msg.removeClass('msg-yellow');
						}
						var errors = response.error;
						for (var contact_id in errors){
							for (var error_id in errors[contact_id]){
								var error = errors[contact_id][error_id];
								if (error.type == 'delete') {
									var checkboxes = $(':input[name=delete]');
									checkboxes.each(function(){
										if ($(this).val()==error.id) {
											$(this).parent().css('background-color', '#F7CBCA');
											$(this).parent().append('<div class="tooltip">'+error.text+'</div>');
										}
									});
								} else {
									if (error.id != undefined) {
										var input_name = 'CONTACTS-'+contact_id+'-'+error['id'];
										var el = $('#'+input_name);
										$(el).addClass('error');
										$('.tooltip', $(el).parent()).remove();
										$(el).parent().append('<div class="tooltip">'+error.text+'</div>');
									} else {
										var ids = error.ids.toString().split (',');
										for (var id in ids){
											var input_name = 'CONTACTS-'+contact_id+'-'+ids[id];
											var el = $('#'+input_name);
											$(el).addClass('linked');
											$(el).addClass('error');
											$(el).keydown(function(){
												if ($(this).val()=='' && $(this).hasClass('error')){
													$('.linked').each(function(){
														$('.tooltip', $(this).parent()).remove();
														$(this).removeClass('linked');
														$(this).removeClass('error');
													});
												}
											})
											$('.tooltip', $(el).parent()).remove();
											$(el).parent().append('<div class="tooltip">'+error.text+'</div>');
										}
									}
								}
							}
						}
						
						msg.show();
					}
				}, "json");
			});
			
			var cancel_button = $('<input type="reset" class="button" value="'+options.cancel_msg+'"></input>');
			cancel_button.click(function(){
				/*
				var content = renderFields(options.visible_fields);
				$('.msg', '#'+options.containerId).hide();
				$('table.grid', '#'+options.containerId).append(content['tbody']);
				$('table.grid', '#'+options.containerId).append(content['thead']);
				options.callback();
				*/
				options.saveCallback(false);
			});
			
			tfoot_div.append(save_button);
			tfoot_div.append(cancel_button);
			tfoot_td.append(tfoot_div);
			tfoot_tr.append(tfoot_td);
			tfoot.append(tfoot_tr);
			table.append(tfoot);
			
			wrapper.append(table);
			$('#'+options.containerId).append(wrapper);
			options.callback();
		}
		
		return {
			init: this.init,
			callback: this.callback,
			saveCallback: this.saveCallback,
			multiEdit: this.multiEdit,
			addRow: this.addRow,
			changeFields: this.changeFields
		}
	};
})(jQuery);
