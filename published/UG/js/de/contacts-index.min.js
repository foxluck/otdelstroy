function moveSelect(from, to, btn_id, disable) {
	jQuery("#" + from + " option:selected").each(function () {
		jQuery(this).appendTo("#" + to).attr("selected", "");
	});
	if(disable) {
		if(!jQuery("#" + from).html()) {
			jQuery("#" + btn_id).attr('disabled', true);
		} else {
			jQuery("#" + btn_id).attr('disabled', false);
		}
	}
}

function showMultiSelect(data1, data2, btn_id, disable) {
	var str1 = '';
	for (var i = 0; i < data1[1].length; i++) {
		var f = data1[1][i];
		var style = (f[0] == 0) ? ' style="font-weight:bold"' : '';
		str1 += '<option value="' + f[0] + '"' + style + '>' + f[1] + '</option>';
	}
	jQuery("#" + data1[0]).append(str1).dblclick(function () {
		if(typeof(btn_id) == "undefined" || !jQuery("#" + btn_id).hasClass("disable")) {
			moveSelect(data1[0], data2[0], btn_id, disable);
		}
	});
	var str2 = '';
	for (i = 0; i < data2[1].length; i++) {
		f = data2[1][i];
		str2 += '<option value="' + f[0] + '">' + f[1] + '</option>';
	}
	jQuery("#" + data2[0]).append(str2).dblclick(function () {
		moveSelect(data2[0], data1[0], btn_id, disable);
	});	
}
/*
 * jQuery UI Datepicker
 *
 * Copyright (c) 2006, 2007, 2008 Marc Grabanski
 * Dual licensed under the MIT (MIT-LICENSE.txt)
 * and GPL (GPL-LICENSE.txt) licenses.
 * 
 * http://docs.jquery.com/UI/Datepicker
 *
 * Depends:
 *	ui.core.js
 *
 * Marc Grabanski (m@marcgrabanski.com) and Keith Wood (kbwood@virginbroadband.com.au).
 */
   
(function(f){var s='datepicker';function R(){this.debug=false;this._j=null;this._8=[];this._f=false;this._d=false;this._u='ui-datepicker-div';this._v='ui-datepicker-append';this._9='ui-datepicker-trigger';this._w='ui-datepicker-dialog';this._x='ui-datepicker-prompt';this._y='ui-datepicker-unselectable';this._n='ui-datepicker-current-day';this.regional=[];this.regional['']={clearText:'Clear',clearStatus:'Erase the current date',closeText:'Close',closeStatus:'Close without change',prevText:'&#x3c;Prev',prevStatus:'Show the previous month',nextText:'Next&#x3e;',nextStatus:'Show the next month',currentText:'Today',currentStatus:'Show the current month',monthNames:['January','February','March','April','May','June','July','August','September','October','November','December'],monthNamesShort:['Jan','Feb','Mar','Apr','May','Jun','Jul','Aug','Sep','Oct','Nov','Dec'],monthStatus:'Show a different month',yearStatus:'Show a different year',weekHeader:'Wk',weekStatus:'Week of the year',dayNames:['Sunday','Monday','Tuesday','Wednesday','Thursday','Friday','Saturday'],dayNamesShort:['Sun','Mon','Tue','Wed','Thu','Fri','Sat'],dayNamesMin:['Su','Mo','Tu','We','Th','Fr','Sa'],dayStatus:'Set DD as first week day',dateStatus:'Select DD, M d',dateFormat:'mm/dd/yy',firstDay:0,initStatus:'Select a date',isRTL:false};this._2={showOn:'focus',showAnim:'show',showOptions:{},defaultDate:null,appendText:'',buttonText:'...',buttonImage:'',buttonImageOnly:false,closeAtTop:true,mandatory:false,hideIfNoPrevNext:false,navigationAsDateFormat:false,gotoCurrent:false,changeMonth:true,changeYear:true,yearRange:'-10:+10',changeFirstDay:true,highlightWeek:false,showOtherMonths:false,showWeeks:false,calculateWeek:this.iso8601Week,shortYearCutoff:'+10',showStatus:false,statusForDate:this.dateStatus,minDate:null,maxDate:null,duration:'normal',beforeShowDay:null,beforeShow:null,onSelect:null,onChangeMonthYear:null,onClose:null,numberOfMonths:1,stepMonths:1,rangeSelect:false,rangeSeparator:' - ',altField:'',altFormat:''};f.extend(this._2,this.regional['']);this.dpDiv=f('<div id="'+this._u+'" style="display: none;"></div>')}f.extend(R.prototype,{markerClassName:'hasDatepicker',log:function(){if(this.debug)console.log.apply('',arguments)},setDefaults:function(a){K(this._2,a||{});return this},_N:function(a,b){var c=null;for(attrName in this._2){var d=a.getAttribute('date:'+attrName);if(d){c=c||{};try{c[attrName]=eval(d)}catch(err){c[attrName]=d}}}var h=a.nodeName.toLowerCase();var g=(h=='div'||h=='span');if(!a.id)a.id='dp'+new Date().getTime();var i=this._z(f(a),g);i.settings=f.extend({},b||{},c||{});if(h=='input'){this._O(a,i)}else if(g){this._P(a,i)}},_z:function(a,b){return{id:a[0].id,input:a,selectedDay:0,selectedMonth:0,selectedYear:0,drawMonth:0,drawYear:0,inline:b,dpDiv:(!b?this.dpDiv:f('<div class="ui-datepicker-inline"></div>'))}},_O:function(d,h){var g=f(d);if(g.hasClass(this.markerClassName))return;var i=this._0(h,'appendText');var l=this._0(h,'isRTL');if(i)g[l?'before':'after']('<span class="'+this._v+'">'+i+'</span>');var j=this._0(h,'showOn');if(j=='focus'||j=='both')g.focus(this._h);if(j=='button'||j=='both'){var k=this._0(h,'buttonText');var o=this._0(h,'buttonImage');var p=f(this._0(h,'buttonImageOnly')?f('<img/>').addClass(this._9).attr({src:o,alt:k,title:k}):f('<button type="button"></button>').addClass(this._9).html(o==''?k:f('<img/>').attr({src:o,alt:k,title:k})));g[l?'before':'after'](p);p.click(function(){if(f.datepicker._f&&f.datepicker._i==d)f.datepicker._e();else f.datepicker._h(d);return false})}g.addClass(this.markerClassName).keydown(this._o).keypress(this._A).bind("setData.datepicker",function(a,b,c){h.settings[b]=c}).bind("getData.datepicker",function(a,b){return this._0(h,b)});f.data(d,s,h)},_P:function(d,h){var g=f(d);if(g.hasClass(this.markerClassName))return;g.addClass(this.markerClassName).append(h.dpDiv).bind("setData.datepicker",function(a,b,c){h.settings[b]=c}).bind("getData.datepicker",function(a,b){return this._0(h,b)});f.data(d,s,h);this._B(h,this._C(h));this._5(h)},_10:function(a,b,c,d,h){var g=this._Q;if(!g){var i='dp'+new Date().getTime();this._6=f('<input type="text" id="'+i+'" size="1" style="position: absolute;top: -100px;"/>');this._6.keydown(this._o);f('body').append(this._6);g=this._Q=this._z(this._6,false);g.settings={};f.data(this._6[0],s,g)}K(g.settings,d||{});this._6.val(b);this._3=(h?(h.length?h:[h.pageX,h.pageY]):null);if(!this._3){var l=window.innerWidth||document.documentElement.clientWidth||document.body.clientWidth;var j=window.innerHeight||document.documentElement.clientHeight||document.body.clientHeight;var k=document.documentElement.scrollLeft||document.body.scrollLeft;var o=document.documentElement.scrollTop||document.body.scrollTop;this._3=[(l/2)-100+k,(j/2)-150+o]}this._6.css('left',this._3[0]+'px').css('top',this._3[1]+'px');g.settings.onSelect=c;this._d=true;this.dpDiv.addClass(this._w);this._h(this._6[0]);if(f.blockUI)f.blockUI(this.dpDiv);f.data(this._6[0],s,g);return this},_11:function(a){var b=a.nodeName.toLowerCase();var c=f(a);f.removeData(a,s);if(b=='input'){c.siblings('.'+this._v).remove().end().siblings('.'+this._9).remove().end().removeClass(this.markerClassName).unbind('focus',this._h).unbind('keydown',this._o).unbind('keypress',this._A)}else if(b=='div'||b=='span')c.removeClass(this.markerClassName).empty()},_12:function(b){b.disabled=false;f(b).siblings('button.'+this._9).each(function(){this.disabled=false}).end().siblings('img.'+this._9).css({opacity:'1.0',cursor:''});this._8=f.map(this._8,function(a){return(a==b?null:a)})},_13:function(b){b.disabled=true;f(b).siblings('button.'+this._9).each(function(){this.disabled=true}).end().siblings('img.'+this._9).css({opacity:'0.5',cursor:'default'});this._8=f.map(this._8,function(a){return(a==b?null:a)});this._8[this._8.length]=b},_R:function(a){if(!a)return false;for(var b=0;b<this._8.length;b++){if(this._8[b]==a)return true}return false},_14:function(a,b,c){var d=b||{};if(typeof b=='string'){d={};d[b]=c}if(inst=f.data(a,s)){K(inst.settings,d);this._5(inst)}},_15:function(a,b,c){var d=f.data(a,s);if(d){this._B(d,b,c);this._5(d)}},_16:function(a){var b=f.data(a,s);if(b)this._D(b);return(b?this._p(b):null)},_o:function(a){var b=f.data(a.target,s);var c=true;if(f.datepicker._f)switch(a.keyCode){case 9:f.datepicker._e(null,'');break;case 13:f.datepicker._E(a.target,b.selectedMonth,b.selectedYear,f('td.ui-datepicker-days-cell-over',b.dpDiv)[0]);return false;break;case 27:f.datepicker._e(null,f.datepicker._0(b,'duration'));break;case 33:f.datepicker._4(a.target,(a.ctrlKey?-1:-f.datepicker._0(b,'stepMonths')),(a.ctrlKey?'Y':'M'));break;case 34:f.datepicker._4(a.target,(a.ctrlKey?+1:+f.datepicker._0(b,'stepMonths')),(a.ctrlKey?'Y':'M'));break;case 35:if(a.ctrlKey)f.datepicker._F(a.target);break;case 36:if(a.ctrlKey)f.datepicker._G(a.target);break;case 37:if(a.ctrlKey)f.datepicker._4(a.target,-1,'D');break;case 38:if(a.ctrlKey)f.datepicker._4(a.target,-7,'D');break;case 39:if(a.ctrlKey)f.datepicker._4(a.target,+1,'D');break;case 40:if(a.ctrlKey)f.datepicker._4(a.target,+7,'D');break;default:c=false}else if(a.keyCode==36&&a.ctrlKey)f.datepicker._h(this);else c=false;if(c){a.preventDefault();a.stopPropagation()}},_A:function(a){var b=f.data(a.target,s);var c=f.datepicker._S(f.datepicker._0(b,'dateFormat'));var d=String.fromCharCode(a.charCode==undefined?a.keyCode:a.charCode);return a.ctrlKey||(d<' '||!c||c.indexOf(d)>-1)},_h:function(a){a=a.target||a;if(a.nodeName.toLowerCase()!='input')a=f('input',a.parentNode)[0];if(f.datepicker._R(a)||f.datepicker._i==a)return;var b=f.data(a,s);var c=f.datepicker._0(b,'beforeShow');K(b.settings,(c?c.apply(a,[a,b]):{}));f.datepicker._e(null,'');f.datepicker._i=a;f.datepicker._D(b);if(f.datepicker._d)a.value='';if(!f.datepicker._3){f.datepicker._3=f.datepicker._H(f('img',a.parentNode)[0]);f.datepicker._3[1]+=a.offsetHeight}var d=false;f(a).parents().each(function(){d|=f(this).css('position')=='fixed';return!d});if(d&&f.browser.opera){f.datepicker._3[0]-=document.documentElement.scrollLeft;f.datepicker._3[1]-=document.documentElement.scrollTop}var h={left:f.datepicker._3[0],top:f.datepicker._3[1]};f.datepicker._3=null;b.rangeStart=null;b.dpDiv.css({position:'absolute',display:'block',top:'-1000px'});f.datepicker._5(b);b.dpDiv.width(f.datepicker._k(b)[1]*f('.ui-datepicker',b.dpDiv[0])[0].offsetWidth);h=f.datepicker._T(b,h,d);b.dpDiv.css({position:(f.datepicker._d&&f.blockUI?'static':(d?'fixed':'absolute')),display:'none',left:h.left+'px',top:h.top+'px'});if(!b.inline){var g=f.datepicker._0(b,'showAnim')||'show';var i=f.datepicker._0(b,'duration');var l=function(){f.datepicker._f=true;if(f.browser.msie&&parseInt(f.browser.version)<7)f('iframe.ui-datepicker-cover').css({width:b.dpDiv.width()+4,height:b.dpDiv.height()+4})};if(f.effects&&f.effects[g])b.dpDiv.show(g,f.datepicker._0(b,'showOptions'),i,l);else b.dpDiv[g](i,l);if(i=='')l();if(b.input[0].type!='hidden')b.input[0].focus();f.datepicker._j=b}},_5:function(a){var b={width:a.dpDiv.width()+4,height:a.dpDiv.height()+4};a.dpDiv.empty().append(this._U(a)).find('iframe.ui-datepicker-cover').css({width:b.width,height:b.height});var c=this._k(a);a.dpDiv[(c[0]!=1||c[1]!=1?'add':'remove')+'Class']('ui-datepicker-multi');a.dpDiv[(this._0(a,'isRTL')?'add':'remove')+'Class']('ui-datepicker-rtl');if(a.input&&a.input[0].type!='hidden')f(a.input[0]).focus()},_T:function(a,b,c){var d=a.input?this._H(a.input[0]):null;var h=window.innerWidth||document.documentElement.clientWidth;var g=window.innerHeight||document.documentElement.clientHeight;var i=document.documentElement.scrollLeft||document.body.scrollLeft;var l=document.documentElement.scrollTop||document.body.scrollTop;if(this._0(a,'isRTL')||(b.left+a.dpDiv.width()-i)>h)b.left=Math.max((c?0:i),d[0]+(a.input?a.input.width():0)-(c?i:0)-a.dpDiv.width()-(c&&f.browser.opera?document.documentElement.scrollLeft:0));else b.left-=(c?i:0);if((b.top+a.dpDiv.height()-l)>g)b.top=Math.max((c?0:l),d[1]-(c?l:0)-(this._d?0:a.dpDiv.height())-(c&&f.browser.opera?document.documentElement.scrollTop:0));else b.top-=(c?l:0);return b},_H:function(a){while(a&&(a.type=='hidden'||a.nodeType!=1)){a=a.nextSibling}var b=f(a).offset();return[b.left,b.top]},_e:function(a,b){var c=this._j;if(!c)return;var d=this._0(c,'rangeSelect');if(d&&this._a)this._q('#'+c.id,this._g(c,c.currentDay,c.currentMonth,c.currentYear));this._a=false;if(this._f){b=(b!=null?b:this._0(c,'duration'));var h=this._0(c,'showAnim');var g=function(){f.datepicker._I(c)};if(b!=''&&f.effects&&f.effects[h])c.dpDiv.hide(h,f.datepicker._0(c,'showOptions'),b,g);else c.dpDiv[(b==''?'hide':(h=='slideDown'?'slideUp':(h=='fadeIn'?'fadeOut':'hide')))](b,g);if(b=='')this._I(c);var i=this._0(c,'onClose');if(i)i.apply((c.input?c.input[0]:null),[this._p(c),c]);this._f=false;this._i=null;c.settings.prompt=null;if(this._d){this._6.css({position:'absolute',left:'0',top:'-100px'});if(f.blockUI){f.unblockUI();f('body').append(this.dpDiv)}}this._d=false}this._j=null},_I:function(a){a.dpDiv.removeClass(this._w).unbind('.ui-datepicker');f('.'+this._x,a.dpDiv).remove()},_V:function(a){if(!f.datepicker._j)return;var b=f(a.target);if((b.parents('#'+f.datepicker._u).length==0)&&!b.hasClass(f.datepicker.markerClassName)&&!b.hasClass(f.datepicker._9)&&f.datepicker._f&&!(f.datepicker._d&&f.blockUI))f.datepicker._e(null,'')},_4:function(a,b,c){var d=f(a);var h=f.data(d[0],s);this._r(h,b,c);this._5(h)},_G:function(a){var b=f(a);var c=f.data(b[0],s);if(this._0(c,'gotoCurrent')&&c.currentDay){c.selectedDay=c.currentDay;c.drawMonth=c.selectedMonth=c.currentMonth;c.drawYear=c.selectedYear=c.currentYear}else{var d=new Date();c.selectedDay=d.getDate();c.drawMonth=c.selectedMonth=d.getMonth();c.drawYear=c.selectedYear=d.getFullYear()}this._4(b);this._s(c)},_J:function(a,b,c){var d=f(a);var h=f.data(d[0],s);h._t=false;h[c=='M'?'drawMonth':'drawYear']=b.options[b.selectedIndex].value-0;this._4(d);this._s(h)},_K:function(a){var b=f(a);var c=f.data(b[0],s);if(c.input&&c._t&&!f.browser.msie)c.input[0].focus();c._t=!c._t},_W:function(a,b){var c=f(a);var d=f.data(c[0],s);d.settings.firstDay=b;this._5(d)},_E:function(a,b,c,d){if(f(d).hasClass(this._y))return;var h=f(a);var g=f.data(h[0],s);var i=this._0(g,'rangeSelect');if(i){this._a=!this._a;if(this._a){f('.ui-datepicker td').removeClass(this._n);f(d).addClass(this._n)}}g.selectedDay=g.currentDay=f('a',d).html();g.selectedMonth=g.currentMonth=b;g.selectedYear=g.currentYear=c;if(this._a){g.endDay=g.endMonth=g.endYear=null}else if(i){g.endDay=g.currentDay;g.endMonth=g.currentMonth;g.endYear=g.currentYear}this._q(a,this._g(g,g.currentDay,g.currentMonth,g.currentYear));if(this._a){g.rangeStart=this._1(new Date(g.currentYear,g.currentMonth,g.currentDay));this._5(g)}else if(i){g.selectedDay=g.currentDay=g.rangeStart.getDate();g.selectedMonth=g.currentMonth=g.rangeStart.getMonth();g.selectedYear=g.currentYear=g.rangeStart.getFullYear();g.rangeStart=null;if(g.inline)this._5(g)}},_F:function(a){var b=f(a);var c=f.data(b[0],s);if(this._0(c,'mandatory'))return;this._a=false;c.endDay=c.endMonth=c.endYear=c.rangeStart=null;this._q(b,'')},_q:function(a,b){var c=f(a);var d=f.data(c[0],s);b=(b!=null?b:this._g(d));if(this._0(d,'rangeSelect')&&b)b=(d.rangeStart?this._g(d,d.rangeStart):b)+this._0(d,'rangeSeparator')+b;if(d.input)d.input.val(b);this._X(d);var h=this._0(d,'onSelect');if(h)h.apply((d.input?d.input[0]:null),[b,d]);else if(d.input)d.input.trigger('change');if(d.inline)this._5(d);else if(!this._a){this._e(null,this._0(d,'duration'));this._i=d.input[0];if(typeof(d.input[0])!='object')d.input[0].focus();this._i=null}},_X:function(a){var b=this._0(a,'altField');if(b){var c=this._0(a,'altFormat');var d=this._p(a);dateStr=(Y(d)?(!d[0]&&!d[1]?'':this.formatDate(c,d[0],this._7(a))+this._0(a,'rangeSeparator')+this.formatDate(c,d[1]||d[0],this._7(a))):this.formatDate(c,d,this._7(a)));f(b).each(function(){f(this).val(dateStr)})}},noWeekends:function(a){var b=a.getDay();return[(b>0&&b<6),'']},iso8601Week:function(a){var b=new Date(a.getFullYear(),a.getMonth(),a.getDate());var c=new Date(b.getFullYear(),1-1,4);var d=c.getDay()||7;c.setDate(c.getDate()+1-d);if(d<4&&b<c){b.setDate(b.getDate()-3);return f.datepicker.iso8601Week(b)}else if(b>new Date(b.getFullYear(),12-1,28)){d=new Date(b.getFullYear()+1,1-1,4).getDay()||7;if(d>4&&(b.getDay()||7)<d-3){b.setDate(b.getDate()+3);return f.datepicker.iso8601Week(b)}}return Math.floor(((b-c)/86400000)/7)+1},dateStatus:function(a,b){return f.datepicker.formatDate(f.datepicker._0(b,'dateStatus'),a,f.datepicker._7(b))},parseDate:function(k,o,p){if(k==null||o==null)throw'Invalid arguments';o=(typeof o=='object'?o.toString():o+'');if(o=='')return null;var w=(p?p.shortYearCutoff:null)||this._2.shortYearCutoff;var u=(p?p.dayNamesShort:null)||this._2.dayNamesShort;var m=(p?p.dayNames:null)||this._2.dayNames;var q=(p?p.monthNamesShort:null)||this._2.monthNamesShort;var n=(p?p.monthNames:null)||this._2.monthNames;var r=-1;var A=-1;var B=-1;var H=false;var C=function(a){var b=(y+1<k.length&&k.charAt(y+1)==a);if(b)y++;return b};var E=function(a){C(a);var b=(a=='@'?14:(a=='y'?4:2));var c=b;var d=0;while(c>0&&v<o.length&&o.charAt(v)>='0'&&o.charAt(v)<='9'){d=d*10+(o.charAt(v++)-0);c--}if(c==b)throw'Missing number at position '+v;return d};var F=function(a,b,c){var d=(C(a)?c:b);var h=0;for(var g=0;g<d.length;g++)h=Math.max(h,d[g].length);var i='';var l=v;while(h>0&&v<o.length){i+=o.charAt(v++);for(var j=0;j<d.length;j++)if(i==d[j])return j+1;h--}throw'Unknown name at position '+l;};var x=function(){if(o.charAt(v)!=k.charAt(y))throw'Unexpected literal at position '+v;v++};var v=0;for(var y=0;y<k.length;y++){if(H)if(k.charAt(y)=="'"&&!C("'"))H=false;else x();else switch(k.charAt(y)){case'd':B=E('d');break;case'D':F('D',u,m);break;case'm':A=E('m');break;case'M':A=F('M',q,n);break;case'y':r=E('y');break;case'@':var z=new Date(E('@'));r=z.getFullYear();A=z.getMonth()+1;B=z.getDate();break;case"'":if(C("'"))x();else H=true;break;default:x()}}if(r<100)r+=new Date().getFullYear()-new Date().getFullYear()%100+(r<=w?0:-100);var z=this._1(new Date(r,A-1,B));if(z.getFullYear()!=r||z.getMonth()+1!=A||z.getDate()!=B)throw'Invalid date';return z},ATOM:'yy-mm-dd',COOKIE:'D, dd M yy',ISO_8601:'yy-mm-dd',RFC_822:'D, d M y',RFC_850:'DD, dd-M-y',RFC_1036:'D, d M y',RFC_1123:'D, d M yy',RFC_2822:'D, d M yy',RSS:'D, d M y',TIMESTAMP:'@',W3C:'yy-mm-dd',formatDate:function(h,g,i){if(!g)return'';var l=(i?i.dayNamesShort:null)||this._2.dayNamesShort;var j=(i?i.dayNames:null)||this._2.dayNames;var k=(i?i.monthNamesShort:null)||this._2.monthNamesShort;var o=(i?i.monthNames:null)||this._2.monthNames;var p=function(a){var b=(n+1<h.length&&h.charAt(n+1)==a);if(b)n++;return b};var w=function(a,b){return(p(a)&&b<10?'0':'')+b};var u=function(a,b,c,d){return(p(a)?d[b]:c[b])};var m='';var q=false;if(g)for(var n=0;n<h.length;n++){if(q)if(h.charAt(n)=="'"&&!p("'"))q=false;else m+=h.charAt(n);else switch(h.charAt(n)){case'd':m+=w('d',g.getDate());break;case'D':m+=u('D',g.getDay(),l,j);break;case'm':m+=w('m',g.getMonth()+1);break;case'M':m+=u('M',g.getMonth(),k,o);break;case'y':m+=(p('y')?g.getFullYear():(g.getYear()%100<10?'0':'')+g.getYear()%100);break;case'@':m+=g.getTime();break;case"'":if(p("'"))m+="'";else q=true;break;default:m+=h.charAt(n)}}return m},_S:function(a){var b='';var c=false;for(var d=0;d<a.length;d++)if(c)if(a.charAt(d)=="'"&&!lookAhead("'"))c=false;else b+=a.charAt(d);else switch(a.charAt(d)){case'd':case'm':case'y':case'@':b+='0123456789';break;case'D':case'M':return null;case"'":if(lookAhead("'"))b+="'";else c=true;break;default:b+=a.charAt(d)}return b},_0:function(a,b){return a.settings[b]!==undefined?a.settings[b]:this._2[b]},_D:function(a){var b=this._0(a,'dateFormat');var c=a.input?a.input.val().split(this._0(a,'rangeSeparator')):null;a.endDay=a.endMonth=a.endYear=null;var d=defaultDate=this._C(a);if(c.length>0){var h=this._7(a);if(c.length>1){d=this.parseDate(b,c[1],h)||defaultDate;a.endDay=d.getDate();a.endMonth=d.getMonth();a.endYear=d.getFullYear()}try{d=this.parseDate(b,c[0],h)||defaultDate}catch(e){this.log(e);d=defaultDate}}a.selectedDay=d.getDate();a.drawMonth=a.selectedMonth=d.getMonth();a.drawYear=a.selectedYear=d.getFullYear();a.currentDay=(c[0]?d.getDate():0);a.currentMonth=(c[0]?d.getMonth():0);a.currentYear=(c[0]?d.getFullYear():0);this._r(a)},_C:function(a){var b=this._l(this._0(a,'defaultDate'),new Date());var c=this._b(a,'min',true);var d=this._b(a,'max');b=(c&&b<c?c:b);b=(d&&b>d?d:b);return b},_l:function(j,k){var o=function(a){var b=new Date();b.setDate(b.getDate()+a);return b};var p=function(a,b){var c=new Date();var d=c.getFullYear();var h=c.getMonth();var g=c.getDate();var i=/([+-]?[0-9]+)\s*(d|D|w|W|m|M|y|Y)?/g;var l=i.exec(a);while(l){switch(l[2]||'d'){case'd':case'D':g+=(l[1]-0);break;case'w':case'W':g+=(l[1]*7);break;case'm':case'M':h+=(l[1]-0);g=Math.min(g,b(d,h));break;case'y':case'Y':d+=(l[1]-0);g=Math.min(g,b(d,h));break}l=i.exec(a)}return new Date(d,h,g)};j=(j==null?k:(typeof j=='string'?p(j,this._m):(typeof j=='number'?(isNaN(j)?k:o(j)):j)));j=(j&&j.toString()=='Invalid Date'?k:j);if(j){j.setHours(0);j.setMinutes(0);j.setSeconds(0);j.setMilliseconds(0)}return this._1(j)},_1:function(a){if(!a)return null;a.setHours(a.getHours()>12?a.getHours()+2:0);return a},_B:function(a,b,c){var d=!(b);b=this._l(b,new Date());a.selectedDay=a.currentDay=b.getDate();a.drawMonth=a.selectedMonth=a.currentMonth=b.getMonth();a.drawYear=a.selectedYear=a.currentYear=b.getFullYear();if(this._0(a,'rangeSelect')){if(c){c=this._l(c,null);a.endDay=c.getDate();a.endMonth=c.getMonth();a.endYear=c.getFullYear()}else{a.endDay=a.currentDay;a.endMonth=a.currentMonth;a.endYear=a.currentYear}}this._r(a);if(a.input)a.input.val(d?'':this._g(a)+(!this._0(a,'rangeSelect')?'':this._0(a,'rangeSeparator')+this._g(a,a.endDay,a.endMonth,a.endYear)))},_p:function(a){var b=(!a.currentYear||(a.input&&a.input.val()=='')?null:this._1(new Date(a.currentYear,a.currentMonth,a.currentDay)));if(this._0(a,'rangeSelect')){return[a.rangeStart||b,(!a.endYear?a.rangeStart||b:this._1(new Date(a.endYear,a.endMonth,a.endDay)))]}else return b},_U:function(a){var b=new Date();b=this._1(new Date(b.getFullYear(),b.getMonth(),b.getDate()));var c=this._0(a,'showStatus');var d=this._0(a,'isRTL');var h=(this._0(a,'mandatory')?'':'<div class="ui-datepicker-clear"><a onclick="jQuery.datepicker._F(\'#'+a.id+'\');"'+(c?this._c(a,this._0(a,'clearStatus')||'&#xa0;'):'')+'>'+this._0(a,'clearText')+'</a></div>');var g='<div class="ui-datepicker-control">'+(d?'':h)+'<div class="ui-datepicker-close"><a onclick="jQuery.datepicker._e();"'+(c?this._c(a,this._0(a,'closeStatus')||'&#xa0;'):'')+'>'+this._0(a,'closeText')+'</a></div>'+(d?h:'')+'</div>';var i=this._0(a,'prompt');var l=this._0(a,'closeAtTop');var j=this._0(a,'hideIfNoPrevNext');var k=this._0(a,'navigationAsDateFormat');var o=this._k(a);var p=this._0(a,'stepMonths');var w=(o[0]!=1||o[1]!=1);var u=this._1((!a.currentDay?new Date(9999,9,9):new Date(a.currentYear,a.currentMonth,a.currentDay)));var m=this._b(a,'min',true);var q=this._b(a,'max');var n=a.drawMonth;var r=a.drawYear;if(q){var A=this._1(new Date(q.getFullYear(),q.getMonth()-o[1]+1,q.getDate()));A=(m&&A<m?m:A);while(this._1(new Date(r,n,1))>A){n--;if(n<0){n=11;r--}}}var B=this._0(a,'prevText');B=(!k?B:this.formatDate(B,this._1(new Date(r,n-p,1)),this._7(a)));var H='<div class="ui-datepicker-prev">'+(this._L(a,-1,r,n)?'<a onclick="jQuery.datepicker._4(\'#'+a.id+'\', -'+p+', \'M\');"'+(c?this._c(a,this._0(a,'prevStatus')||'&#xa0;'):'')+'>'+B+'</a>':(j?'':'<label>'+B+'</label>'))+'</div>';var C=this._0(a,'nextText');C=(!k?C:this.formatDate(C,this._1(new Date(r,n+p,1)),this._7(a)));var E='<div class="ui-datepicker-next">'+(this._L(a,+1,r,n)?'<a onclick="jQuery.datepicker._4(\'#'+a.id+'\', +'+p+', \'M\');"'+(c?this._c(a,this._0(a,'nextStatus')||'&#xa0;'):'')+'>'+C+'</a>':(j?'':'<label>'+C+'</label>'))+'</div>';var F=this._0(a,'currentText');F=(!k?F:this.formatDate(F,b,this._7(a)));var x=(i?'<div class="'+this._x+'">'+i+'</div>':'')+(l&&!a.inline?g:'')+'<div class="ui-datepicker-links">'+(d?E:H)+(this._M(a,(this._0(a,'gotoCurrent')&&a.currentDay?u:b))?'<div class="ui-datepicker-current"><a onclick="jQuery.datepicker._G(\'#'+a.id+'\');"'+(c?this._c(a,this._0(a,'currentStatus')||'&#xa0;'):'')+'>'+F+'</a></div>':'')+(d?H:E)+'</div>';var v=this._0(a,'firstDay');var y=this._0(a,'changeFirstDay');var z=this._0(a,'dayNames');var Z=this._0(a,'dayNamesShort');var ba=this._0(a,'dayNamesMin');var bb=this._0(a,'monthNames');var S=this._0(a,'beforeShowDay');var N=this._0(a,'highlightWeek');var I=this._0(a,'showOtherMonths');var T=this._0(a,'showWeeks');var bc=this._0(a,'calculateWeek')||this.iso8601Week;var O=(c?this._0(a,'dayStatus')||'&#xa0;':'');var bd=this._0(a,'statusForDate')||this.dateStatus;var be=a.endDay?this._1(new Date(a.endYear,a.endMonth,a.endDay)):u;for(var P=0;P<o[0];P++)for(var L=0;L<o[1];L++){var U=this._1(new Date(r,n,a.selectedDay));x+='<div class="ui-datepicker-one-month'+(L==0?' ui-datepicker-new-row':'')+'">'+this._Y(a,n,r,m,q,U,P>0||L>0,c,bb)+'<table class="ui-datepicker" cellpadding="0" cellspacing="0"><thead><tr class="ui-datepicker-title-row">'+(T?'<td>'+this._0(a,'weekHeader')+'</td>':'');for(var D=0;D<7;D++){var J=(D+v)%7;var bf=(O.indexOf('DD')>-1?O.replace(/DD/,z[J]):O.replace(/D/,Z[J]));x+='<td'+((D+v+6)%7>=5?' class="ui-datepicker-week-end-cell"':'')+'>'+(!y?'<span':'<a onclick="jQuery.datepicker._W(\'#'+a.id+'\', '+J+');"')+(c?this._c(a,bf):'')+' title="'+z[J]+'">'+ba[J]+(y?'</a>':'</span>')+'</td>'}x+='</tr></thead><tbody>';var V=this._m(r,n);if(r==a.selectedYear&&n==a.selectedMonth)a.selectedDay=Math.min(a.selectedDay,V);var W=(this._Z(r,n)-v+7)%7;var bg=(w?6:Math.ceil((W+V)/7));var t=this._1(new Date(r,n,1-W));for(var X=0;X<bg;X++){x+='<tr class="ui-datepicker-days-row">'+(T?'<td class="ui-datepicker-week-col">'+bc(t)+'</td>':'');for(var D=0;D<7;D++){var M=(S?S.apply((a.input?a.input[0]:null),[t]):[true,'']);var G=(t.getMonth()!=n);var Q=G||!M[0]||(m&&t<m)||(q&&t>q);x+='<td class="ui-datepicker-days-cell'+((D+v+6)%7>=5?' ui-datepicker-week-end-cell':'')+(G?' ui-datepicker-otherMonth':'')+(t.getTime()==U.getTime()&&n==a.selectedMonth?' ui-datepicker-days-cell-over':'')+(Q?' '+this._y:'')+(G&&!I?'':' '+M[1]+(t.getTime()>=u.getTime()&&t.getTime()<=be.getTime()?' '+this._n:'')+(t.getTime()==b.getTime()?' ui-datepicker-today':''))+'"'+((!G||I)&&M[2]?' title="'+M[2]+'"':'')+(Q?(N?' onmouseover="jQuery(this).parent().addClass(\'ui-datepicker-week-over\');" onmouseout="jQuery(this).parent().removeClass(\'ui-datepicker-week-over\');"':''):' onmouseover="jQuery(this).addClass(\'ui-datepicker-days-cell-over\')'+(N?'.parent().addClass(\'ui-datepicker-week-over\')':'')+';'+(!c||(G&&!I)?'':'jQuery(\'#ui-datepicker-status-'+a.id+'\').html(\''+(bd.apply((a.input?a.input[0]:null),[t,a])||'&#xa0;')+'\');')+'" onmouseout="jQuery(this).removeClass(\'ui-datepicker-days-cell-over\')'+(N?'.parent().removeClass(\'ui-datepicker-week-over\')':'')+';'+(!c||(G&&!I)?'':'jQuery(\'#ui-datepicker-status-'+a.id+'\').html(\'&#xa0;\');')+'" onclick="jQuery.datepicker._E(\'#'+a.id+'\','+n+','+r+', this);"')+'>'+(G?(I?t.getDate():'&#xa0;'):(Q?t.getDate():'<a>'+t.getDate()+'</a>'))+'</td>';t.setDate(t.getDate()+1);t=this._1(t)}x+='</tr>'}n++;if(n>11){n=0;r++}x+='</tbody></table></div>'}x+=(c?'<div style="clear: both;"></div><div id="ui-datepicker-status-'+a.id+'" class="ui-datepicker-status">'+(this._0(a,'initStatus')||'&#xa0;')+'</div>':'')+(!l&&!a.inline?g:'')+'<div style="clear: both;"></div>'+(f.browser.msie&&parseInt(f.browser.version)<7&&!a.inline?'<iframe src="javascript:false;" class="ui-datepicker-cover"></iframe>':'');return x},_Y:function(a,b,c,d,h,g,i,l,j){d=(a.rangeStart&&d&&g<d?g:d);var k='<div class="ui-datepicker-header">';if(i||!this._0(a,'changeMonth'))k+=j[b]+'&#xa0;';else{var o=(d&&d.getFullYear()==c);var p=(h&&h.getFullYear()==c);k+='<select class="ui-datepicker-new-month" onchange="jQuery.datepicker._J(\'#'+a.id+'\', this, \'M\');" onclick="jQuery.datepicker._K(\'#'+a.id+'\');"'+(l?this._c(a,this._0(a,'monthStatus')||'&#xa0;'):'')+'>';for(var w=0;w<12;w++){if((!o||w>=d.getMonth())&&(!p||w<=h.getMonth()))k+='<option value="'+w+'"'+(w==b?' selected="selected"':'')+'>'+j[w]+'</option>'}k+='</select>'}if(i||!this._0(a,'changeYear'))k+=c;else{var u=this._0(a,'yearRange').split(':');var m=0;var q=0;if(u.length!=2){m=c-10;q=c+10}else if(u[0].charAt(0)=='+'||u[0].charAt(0)=='-'){m=q=new Date().getFullYear();m+=parseInt(u[0],10);q+=parseInt(u[1],10)}else{m=parseInt(u[0],10);q=parseInt(u[1],10)}m=(d?Math.max(m,d.getFullYear()):m);q=(h?Math.min(q,h.getFullYear()):q);k+='<select class="ui-datepicker-new-year" onchange="jQuery.datepicker._J(\'#'+a.id+'\', this, \'Y\');" onclick="jQuery.datepicker._K(\'#'+a.id+'\');"'+(l?this._c(a,this._0(a,'yearStatus')||'&#xa0;'):'')+'>';for(;m<=q;m++){k+='<option value="'+m+'"'+(m==c?' selected="selected"':'')+'>'+m+'</option>'}k+='</select>'}k+='</div>';return k},_c:function(a,b){return' onmouseover="jQuery(\'#ui-datepicker-status-'+a.id+'\').html(\''+b+'\');" onmouseout="jQuery(\'#ui-datepicker-status-'+a.id+'\').html(\'&#xa0;\');"'},_r:function(a,b,c){var d=a.drawYear+(c=='Y'?b:0);var h=a.drawMonth+(c=='M'?b:0);var g=Math.min(a.selectedDay,this._m(d,h))+(c=='D'?b:0);var i=this._1(new Date(d,h,g));var l=this._b(a,'min',true);var j=this._b(a,'max');i=(l&&i<l?l:i);i=(j&&i>j?j:i);a.selectedDay=i.getDate();a.drawMonth=a.selectedMonth=i.getMonth();a.drawYear=a.selectedYear=i.getFullYear();if(c=='M'||c=='Y')this._s(a)},_s:function(a){var b=this._0(a,'onChangeMonthYear');if(b)b.apply((a.input?a.input[0]:null),[new Date(a.selectedYear,a.selectedMonth,1),a])},_k:function(a){var b=this._0(a,'numberOfMonths');return(b==null?[1,1]:(typeof b=='number'?[1,b]:b))},_b:function(a,b,c){var d=this._l(this._0(a,b+'Date'),null);return(!c||!a.rangeStart?d:(!d||a.rangeStart>d?a.rangeStart:d))},_m:function(a,b){return 32-new Date(a,b,32).getDate()},_Z:function(a,b){return new Date(a,b,1).getDay()},_L:function(a,b,c,d){var h=this._k(a);var g=this._1(new Date(c,d+(b<0?b:h[1]),1));if(b<0)g.setDate(this._m(g.getFullYear(),g.getMonth()));return this._M(a,g)},_M:function(a,b){var c=(!a.rangeStart?null:this._1(new Date(a.selectedYear,a.selectedMonth,a.selectedDay)));c=(c&&a.rangeStart<c?a.rangeStart:c);var d=c||this._b(a,'min');var h=this._b(a,'max');return((!d||b>=d)&&(!h||b<=h))},_7:function(a){var b=this._0(a,'shortYearCutoff');b=(typeof b!='string'?b:new Date().getFullYear()%100+parseInt(b,10));return{shortYearCutoff:b,dayNamesShort:this._0(a,'dayNamesShort'),dayNames:this._0(a,'dayNames'),monthNamesShort:this._0(a,'monthNamesShort'),monthNames:this._0(a,'monthNames')}},_g:function(a,b,c,d){if(!b){a.currentDay=a.selectedDay;a.currentMonth=a.selectedMonth;a.currentYear=a.selectedYear}var h=(b?(typeof b=='object'?b:this._1(new Date(d,c,b))):this._1(new Date(a.currentYear,a.currentMonth,a.currentDay)));return this.formatDate(this._0(a,'dateFormat'),h,this._7(a))}});function K(a,b){f.extend(a,b);for(var c in b)if(b[c]==null||b[c]==undefined)a[c]=b[c];return a};function Y(a){return(a&&((f.browser.safari&&typeof a=='object'&&a.length)||(a.constructor&&a.constructor.toString().match(/\Array\(\)/))))};f.fn.datepicker=function(a){var b=Array.prototype.slice.call(arguments,1);if(typeof a=='string'&&(a=='isDisabled'||a=='getDate'))return f.datepicker['_'+a+'Datepicker'].apply(f.datepicker,[this[0]].concat(b));return this.each(function(){typeof a=='string'?f.datepicker['_'+a+'Datepicker'].apply(f.datepicker,[this].concat(b)):f.datepicker._N(this,a)})};f.datepicker=new R();f(document).ready(function(){f(document.body).append(f.datepicker.dpDiv).mousedown(f.datepicker._V)})})(jQuery);

WbsCommon = function() {
}

WbsCommon.setPublishedUrl = function (url){
	WbsCommon.publishedUrl = url;
}

WbsCommon.getPublishedUrl = function (addUrl) {
	if (!addUrl)
		return WbsCommon.clearUrl(WbsCommon.publishedUrl);
	return WbsCommon.clearUrl(WbsCommon.publishedUrl + "/" + addUrl);
}

WbsCommon.clearUrl= function(url) {
	url = url.replace(/\/\//g, "/");
	return url;
}

WbsCommon.showLoading = function (el) {
	return false;
	/*var img = createElem("img");
	img.style.width = 16;
	img.style.height = 16;
	img.src = WbsCommon.getPublishedUrl("common/html/res/images/loading.gif");
	img.style.position = "absolute";
	img.style.backgroundColor = "white";
	
	el.insertBefore(img, el.firstChild);*/
}

WbsCommon.showError = function (errorData) {
	alert(errorData.errorStr);
	if (errorData.errorCode && errorData.errorCode == "SESSION_TIMEOUT" && errorData.redirectUrl)
			window.top.location.href = errorData.redirectUrl;
	if (errorData.newLocation && errorData.sessionExpired) { // for old code
			window.top.location.href = errorData.newLocation.replace("../", ""); // only ONE replace need			
	}
}



function setCookie(cookieName,cookieValue,nDays) {
	var today = new Date();
	var expire = new Date();
	if (nDays==null || nDays==0) nDays=1;
	expire.setTime(today.getTime() + 3600000*24*nDays);
	document.cookie = cookieName+"="+escape(cookieValue)
	+ ";expires="+expire.toGMTString();
}

function getCookie(name) {
	var dc = document.cookie;
	var prefix = name + "=";
	var begin = dc.indexOf("; " + prefix);
	if (begin == -1) {
    begin = dc.indexOf(prefix);
    if (begin != 0) return null;
	} else {
	    begin += 2;
	}
	var end = document.cookie.indexOf(";", begin);
	if (end == -1) {
    end = dc.length;
	}
	return unescape(dc.substring(begin + prefix.length, end));
}

function extend(Child, Parent) {
    var F = function() { }
    F.prototype = Parent.prototype
    Child.prototype = new F()
    Child.prototype.constructor = Child
    Child.superclass = Parent.prototype    
}

function newClass(parent, prop) {
  // Dynamically create class constructor.
  var clazz = function() {
    // Stupid JS need exactly one "operator new" calling for parent
    // constructor just after class definition.
    if (clazz.preparing) return delete(clazz.preparing);
    // Call custom constructor.
    if (clazz.constr) {
      this.constructor = clazz; // we need it!
      clazz.constr.apply(this, arguments);
    }
  }
  clazz.prototype = {}; // no prototype by default
  if (parent) {
    parent.preparing = true;
    clazz.prototype = new parent;
    clazz.prototype.constructor = parent;
    clazz.constr = parent; // BY DEFAULT - parent constructor
  }
  if (prop) {
    var cname = "constructor";
    for (var k in prop) {
      if (k != cname) clazz.prototype[k] = prop[k];
    }
    if (prop[cname] && prop[cname] != Object)
      clazz.constr = prop[cname];
  }
  clazz.prototype.superclass = function() {return this.constructor.prototype};
  return clazz;
}


document.onLoadFunctions = new Array();
function registerOnLoad( callback )
{
	document.onLoadFunctions.push( callback );
}

function runOnLoad () {
	for ( i = 0; i < document.onLoadFunctions.length; i++ ) {
		var callback = document.onLoadFunctions[i];
		callback();
	}
}
window.onload = function() {
	runOnLoad();
}

function getDocumentSize()
{
	if (document.clientHeight != null)
		return {height: document.clientHeight, width: document.clientHeight};
	
	if ( typeof(document.documentElement.clientHeight) != 'undefined' && document.documentElement.clientHeight > 0 )
		return {height: document.documentElement.clientHeight, width: document.documentElement.clientWidth};

	if ( typeof(document.body.clientHeight) != 'undefined' )
		return {height: document.body.clientHeight, width: document.body.clientWidth};
	

	return {height: 0, width: 0};
}


function createDiv(className) {
	return createElem("div", className);
}

function createElem(tag, className, attributes) {
	if (Ext.isIE && tag == "input" && attributes && (attributes.type == "radio" || attributes.type == "checkbox") && attributes.name) { // IE bug with radio and checkbox elements
			var elem = document.createElement("<input type='" + this.type + "' name='" + this.name + "'>");
	} else
		var elem = document.createElement(tag);
	
	
	if (Ext.isIE) {
		elem.show = window.showElem;
		elem.hide = window.hideElem;
	}
	if (className)
		elem.className = className;
	
	if (attributes) {
		for (var attName in attributes)
			elem.setAttribute(attName, attributes[attName]);
	}
	
	return elem;	
}


function createTextSpan(value, cls) {
	var span = createElem("span", cls);
	span.appendChild(document.createTextNode(value));
	return span;
}

function createLink(label, className, href) {
	if (href == null)
		href = "javascript:void(0)";
	var link = createElem("a");
	link.href = href;
	link.innerHTML = label;	
	return link;
}

function clearNode(node) {
	var nodesToRemove = new Array ();
	while (node.childNodes.length > 0) {
		node.removeChild(node.firstChild);
	}
	/*for (var childId in node.childNodes) {
		nodesToRemove[nodesToRemove.length] = childId;
	}
	
	for (var i = 0; i < nodesToRemove.length; i++) {
		var childNode = node.childNodes[nodesToRemove[i]];
		if (childNode.nodeType == 1) {
			node.removeChild(childNode);
		}
	}*/
}

function getStyle(elem, sStyle, pxClear) {
	var x = elem;
	var y;
	if (x.currentStyle) {
  	y = x.currentStyle[sStyle.camelize()];
	} else {
		try {
   		y = document.defaultView.getComputedStyle(x,null).getPropertyValue(sStyle);
   	}
   		catch(e) { }
 	}
 	if (y == "auto")
 		y = "0";
 		
 	if (pxClear) {
 		y = (y) ? y.replace("px", "") * 1 : 0;
 	}
 	return y;
}

String.prototype.camelize = function () {
  var oStringList = this.split('-');
  if (oStringList.length == 1) return oStringList[0];

  var camelizedString = this.indexOf('-') == 0
    ? oStringList[0].charAt(0).toUpperCase() + oStringList[0].substring(1)
    : oStringList[0];

  for (var i = 1, len = oStringList.length; i < len; i++) {
    var s = oStringList[i];
    camelizedString += s.charAt(0).toUpperCase() + s.substring(1);
  }

  return camelizedString;
}

String.prototype.truncate = function (length) {
	if ((this.length - 3) < length)
		return this;
	return this.substring(0,length) + "...";
}


String.prototype.htmlSpecialChars = function() {
	if (this == null || this.length == 0) {
		  return this;
	}
    return this.replace(/&/g, "&amp;").replace(/</g, "&lt;").replace(/>/g, "&gt;").replace(/"/g, "&quot;").replace(/'/g, "&#039;").replace(/\n/g, "<br />");
}

// simple
String.prototype.sprintf = function (param1, param2, param3) {
	var args = Array.prototype.slice.call(arguments);
  args.unshift(this);
  return sprintf.apply(this,args);	
}


function getFilesizeStr (fileSize) {
	fileSize = parseInt(fileSize);
	if ( !fileSize )
		return "0.00 KB";
		
	var res = "";
	if ( fileSize < 1024 )
		res = fileSize + " bytes";
	else if ( fileSize < 1024*1024 )
		res = Math.round(100*(Math.ceil(fileSize)/1024))/100 + " KB";
	else
		res = Math.round(100*Math.ceil(fileSize)/(1024*1024))/100 + " MB";
	return res;
}

function addClass(elem, className) {
	if (elem.className == null)
		elem.className = "";
	var classes = elem.className.split(" ");
	for (var i = 0; i < classes.length; i++) {
		if (classes[i] == className)
			return;
	}	
	classes[classes.length] = className;
	elem.className = classes.join(" ");
}

function removeClass (elem, className) {
	var classes = elem.className.split(" ");
	var newClasses = new Array ();
	for (var i = 0; i < classes.length; i++) {
		if (classes[i] == className)
			continue;
		newClasses[newClasses.length] = classes[i];
	}	
	elem.className = newClasses.join(" ");
}

var Exception = function(message) {
	this.message = message;
}


function addHandler(element,event,action,scope, param){
	if (scope)
		action = action.bind(scope);
	
  if(document.addEventListener)element.addEventListener(event,action,param);
  else if(document.attachEvent)element.attachEvent('on'+event,action);
  else element['on'+event]=action;
}


Function.prototype.bind = function(object) {
  var __method = this;
  return function() {
  	return __method.apply(object, arguments);
	}
}

if (typeof(jQuery) == 'undefined') {
	Object.prototype.extend = function(object) {
		  for (var prop in object)
		  	this[prop] = object[prop];
		  return this;
	}
}

if (window.Element) {
	Element.prototype.show = function() {
		this.style.display = "";
	}

	Element.prototype.hide = function() {
		this.style.display = "none";
	}
} else {
	window.showElem = function() {
		this.style.display = "";
	}
	window.hideElem = function() {
		this.style.display = "none";
	}
}


function addEmptyImg(elem) {
	var img = createElem("img");
	img.src = WbsCommon.getPublishedUrl("common/html/res/images/s.gif");
	img.style.width = "1px";
	img.style.height = "1px";	
	elem.appendChild(img);
}


Html = {
	getRadioGroupValue: function (radioName, parentNode)
	{
		if (!parentNode)
			parentNode = document;
		
		var inputs = parentNode.getElementsByTagName("input");
		
		for (var i=0; i < inputs.length; i++)
	    if (inputs[i].name == radioName && inputs[i].checked) return inputs[i].value;

	  return null;
	},
		
	setRadioGroupValue: function (radioName, value, parentNode)
	{
		if (!parentNode)
			parentNode = document;
		var inputs = parentNode.getElementsByTagName("input");
		
		for (var i=0; i < inputs.length; i++)
	    if (inputs[i].name == radioName) 
	  		inputs[i].checked = (inputs[i].value == value);
	  return null;
	}	
};








function sprintf () {
var a, f = arguments[0], fi= '', i = 1, m = [''], o = '', p;
while (f = f.substring (m[0].length)) {
m = /^([^\%]*)(?:(\x25)((\x25)|(?:(\d+)\$)?(\+)?(0|'([^$]))?(-|\^)?(\d+)?(?:\.(\d+))?([bcdefosuxX])))?/.exec(f);
if (a = m[12]) {
if (arguments.length < (i = m[5] || i))
throw("sprintf '" + m[0] + "' : No argument " + i);
a = arguments[i++];
s = (/[def]/.test(m[12]) && m[6] && a > 0) ? '+':'';
switch (m[12]) {
case 'b': a = a.toString(2); break;
case 'c': a = String.fromCharCode(a); break;
case 'd': a = parseInt(a); break;
case 'e': a = m[11] ? a.toExponential(m[11]) : a.toExponential(); break;
case 'f': a = m[11] ? parseFloat(a).toFixed(m[11]) : parseFloat(a); break;
case 'o': a = a.toString(8); break;
case 's': a = ((a = String(a)) && m[11] ? a.substring(0, m[11]) : a); break;
case 'u': a = Math.abs(a); break;
case 'x': a = a.toString(16); break;
case 'X': a = a.toString(16).toUpperCase(); break;
}
if (m[10] && (m[10] > a.length)) {
fir=fil=str_repeat(m[7] ? m[8] || '0' : ' ', m[10]-a.length);
if (m[9] == '^') {
fil = fil.substr(0, fil.length / 2);
fir = fir.substr(fil.length);
} else
m[9] == '-' ? (fil = '') : (fir = '');
a = fil + a + fir;
}
}
o += m[1] + ((m[3] ? m[4] || (s + a) : m[2]) || '');
}
return o;
}

/*
 * Ext JS Library 2.2
 * Copyright(c) 2006-2008, Ext JS, LLC.
 * licensing@extjs.com
 * 
 * http://extjs.com/license
 */


Ext={version:"2.2"};
Ext.apply=function(C,D,B){if(B){Ext.apply(C,B)}if(C&&D&&typeof D=="object"){for(var A in D){C[A]=D[A]}}return C};
(function(){var idSeed=0;var ua=navigator.userAgent.toLowerCase();var isStrict=document.compatMode=="CSS1Compat",isOpera=ua.indexOf("opera")>-1,isSafari=(/webkit|khtml/).test(ua),isSafari3=isSafari&&ua.indexOf("webkit/5")!=-1,isIE=!isOpera&&ua.indexOf("msie")>-1,isIE7=!isOpera&&ua.indexOf("msie 7")>-1,isGecko=!isSafari&&ua.indexOf("gecko")>-1,isGecko3=!isSafari&&ua.indexOf("rv:1.9")>-1,isBorderBox=isIE&&!isStrict,isWindows=(ua.indexOf("windows")!=-1||ua.indexOf("win32")!=-1),isMac=(ua.indexOf("macintosh")!=-1||ua.indexOf("mac os x")!=-1),isAir=(ua.indexOf("adobeair")!=-1),isLinux=(ua.indexOf("linux")!=-1),isSecure=window.location.href.toLowerCase().indexOf("https")===0;if(isIE&&!isIE7){try{document.execCommand("BackgroundImageCache",false,true)}catch(e){}}Ext.apply(Ext,{isStrict:isStrict,isSecure:isSecure,isReady:false,enableGarbageCollector:true,enableListenerCollection:false,SSL_SECURE_URL:"javascript:false",BLANK_IMAGE_URL:"http:/"+"/extjs.com/s.gif",emptyFn:function(){},applyIf:function(o,c){if(o&&c){for(var p in c){if(typeof o[p]=="undefined"){o[p]=c[p]}}}return o},addBehaviors:function(o){if(!Ext.isReady){Ext.onReady(function(){Ext.addBehaviors(o)});return }var cache={};for(var b in o){var parts=b.split("@");if(parts[1]){var s=parts[0];if(!cache[s]){cache[s]=Ext.select(s)}cache[s].on(parts[1],o[b])}}cache=null},id:function(el,prefix){prefix=prefix||"ext-gen";el=Ext.getDom(el);var id=prefix+(++idSeed);return el?(el.id?el.id:(el.id=id)):id},extend:function(){var io=function(o){for(var m in o){this[m]=o[m]}};var oc=Object.prototype.constructor;return function(sb,sp,overrides){if(typeof sp=="object"){overrides=sp;sp=sb;sb=overrides.constructor!=oc?overrides.constructor:function(){sp.apply(this,arguments)}}var F=function(){},sbp,spp=sp.prototype;F.prototype=spp;sbp=sb.prototype=new F();sbp.constructor=sb;sb.superclass=spp;if(spp.constructor==oc){spp.constructor=sp}sb.override=function(o){Ext.override(sb,o)};sbp.override=io;Ext.override(sb,overrides);sb.extend=function(o){Ext.extend(sb,o)};return sb}}(),override:function(origclass,overrides){if(overrides){var p=origclass.prototype;for(var method in overrides){p[method]=overrides[method]}}},namespace:function(){var a=arguments,o=null,i,j,d,rt;for(i=0;i<a.length;++i){d=a[i].split(".");rt=d[0];eval("if (typeof "+rt+" == \"undefined\"){"+rt+" = {};} o = "+rt+";");for(j=1;j<d.length;++j){o[d[j]]=o[d[j]]||{};o=o[d[j]]}}},urlEncode:function(o){if(!o){return""}var buf=[];for(var key in o){var ov=o[key],k=encodeURIComponent(key);var type=typeof ov;if(type=="undefined"){buf.push(k,"=&")}else{if(type!="function"&&type!="object"){buf.push(k,"=",encodeURIComponent(ov),"&")}else{if(Ext.isArray(ov)){if(ov.length){for(var i=0,len=ov.length;i<len;i++){buf.push(k,"=",encodeURIComponent(ov[i]===undefined?"":ov[i]),"&")}}else{buf.push(k,"=&")}}}}}buf.pop();return buf.join("")},urlDecode:function(string,overwrite){if(!string||!string.length){return{}}var obj={};var pairs=string.split("&");var pair,name,value;for(var i=0,len=pairs.length;i<len;i++){pair=pairs[i].split("=");name=decodeURIComponent(pair[0]);value=decodeURIComponent(pair[1]);if(overwrite!==true){if(typeof obj[name]=="undefined"){obj[name]=value}else{if(typeof obj[name]=="string"){obj[name]=[obj[name]];obj[name].push(value)}else{obj[name].push(value)}}}else{obj[name]=value}}return obj},each:function(array,fn,scope){if(typeof array.length=="undefined"||typeof array=="string"){array=[array]}for(var i=0,len=array.length;i<len;i++){if(fn.call(scope||array[i],array[i],i,array)===false){return i}}},combine:function(){var as=arguments,l=as.length,r=[];for(var i=0;i<l;i++){var a=as[i];if(Ext.isArray(a)){r=r.concat(a)}else{if(a.length!==undefined&&!a.substr){r=r.concat(Array.prototype.slice.call(a,0))}else{r.push(a)}}}return r},escapeRe:function(s){return s.replace(/([.*+?^${}()|[\]\/\\])/g,"\\$1")},callback:function(cb,scope,args,delay){if(typeof cb=="function"){if(delay){cb.defer(delay,scope,args||[])}else{cb.apply(scope,args||[])}}},
	getDom:function(el){if(!el||!document){return null;}try {var d = el.dom;}catch(e){var d = false;}return d?d:(typeof el=="string"?document.getElementById(el):el)},
	getDoc:function(){return Ext.get(document)},getBody:function(){return Ext.get(document.body||document.documentElement)},getCmp:function(id){return Ext.ComponentMgr.get(id)},num:function(v,defaultValue){if(typeof v!="number"){return defaultValue}return v},destroy:function(){for(var i=0,a=arguments,len=a.length;i<len;i++){var as=a[i];if(as){if(typeof as.destroy=="function"){as.destroy()}else{if(as.dom){as.removeAllListeners();as.remove()}}}}},removeNode:isIE?function(){var d;return function(n){if(n&&n.tagName!="BODY"){d=d||document.createElement("div");d.appendChild(n);d.innerHTML=""}}}():function(n){if(n&&n.parentNode&&n.tagName!="BODY"){n.parentNode.removeChild(n)}},type:function(o){if(o===undefined||o===null){return false}if(o.htmlElement){return"element"}var t=typeof o;if(t=="object"&&o.nodeName){switch(o.nodeType){case 1:return"element";case 3:return(/\S/).test(o.nodeValue)?"textnode":"whitespace"}}if(t=="object"||t=="function"){switch(o.constructor){case Array:return"array";case RegExp:return"regexp"}if(typeof o.length=="number"&&typeof o.item=="function"){return"nodelist"}}return t},isEmpty:function(v,allowBlank){return v===null||v===undefined||(!allowBlank?v==="":false)},value:function(v,defaultValue,allowBlank){return Ext.isEmpty(v,allowBlank)?defaultValue:v},isArray:function(v){return v&&typeof v.length=="number"&&typeof v.splice=="function"},isDate:function(v){return v&&typeof v.getFullYear=="function"},isOpera:isOpera,isSafari:isSafari,isSafari3:isSafari3,isSafari2:isSafari&&!isSafari3,isIE:isIE,isIE6:isIE&&!isIE7,isIE7:isIE7,isGecko:isGecko,isGecko2:isGecko&&!isGecko3,isGecko3:isGecko3,isBorderBox:isBorderBox,isLinux:isLinux,isWindows:isWindows,isMac:isMac,isAir:isAir,useShims:((isIE&&!isIE7)||(isMac&&isGecko&&!isGecko3))});Ext.ns=Ext.namespace})();Ext.ns("Ext","Ext.util","Ext.grid","Ext.dd","Ext.tree","Ext.data","Ext.form","Ext.menu","Ext.state","Ext.lib","Ext.layout","Ext.app","Ext.ux");Ext.apply(Function.prototype,{createCallback:function(){var A=arguments;var B=this;return function(){return B.apply(window,A)}},createDelegate:function(C,B,A){var D=this;return function(){var F=B||arguments;if(A===true){F=Array.prototype.slice.call(arguments,0);F=F.concat(B)}else{if(typeof A=="number"){F=Array.prototype.slice.call(arguments,0);var E=[A,0].concat(B);Array.prototype.splice.apply(F,E)}}return D.apply(C||window,F)}},defer:function(C,E,B,A){var D=this.createDelegate(E,B,A);if(C){return setTimeout(D,C)}D();return 0},createSequence:function(B,A){if(typeof B!="function"){return this}var C=this;return function(){var D=C.apply(this||window,arguments);B.apply(A||this||window,arguments);return D}},createInterceptor:function(B,A){if(typeof B!="function"){return this}var C=this;return function(){B.target=this;B.method=C;if(B.apply(A||this||window,arguments)===false){return }return C.apply(this||window,arguments)}}});Ext.applyIf(String,{escape:function(A){return A.replace(/('|\\)/g,"\\$1")},leftPad:function(D,B,C){var A=new String(D);if(!C){C=" "}while(A.length<B){A=C+A}return A.toString()},format:function(B){var A=Array.prototype.slice.call(arguments,1);return B.replace(/\{(\d+)\}/g,function(C,D){return A[D]})}});String.prototype.toggle=function(B,A){return this==B?A:B};String.prototype.trim=function(){var A=/^\s+|\s+$/g;return function(){return this.replace(A,"")}}();Ext.applyIf(Number.prototype,{constrain:function(B,A){return Math.min(Math.max(this,B),A)}});Ext.applyIf(Array.prototype,{indexOf:function(C){for(var B=0,A=this.length;B<A;B++){if(this[B]==C){return B}}return -1}});
(function(){var B;Ext.lib.Dom={
		getViewWidth:function(E){return E?this.getDocumentWidth():this.getViewportWidth()},
		getViewHeight:function(E){return E?this.getDocumentHeight():this.getViewportHeight()},
		getDocumentHeight:function(){var E=(document.compatMode!="CSS1Compat")?document.body.scrollHeight:document.documentElement.scrollHeight;return Math.max(E,this.getViewportHeight())},
		getDocumentWidth:function(){var E=(document.compatMode!="CSS1Compat")?document.body.scrollWidth:document.documentElement.scrollWidth;return Math.max(E,this.getViewportWidth())},
		getViewportHeight:function(){if(Ext.isIE){return Ext.isStrict?document.documentElement.clientHeight:document.body.clientHeight}else{return self.innerHeight}},
		getViewportWidth:function(){if(Ext.isIE){return Ext.isStrict?document.documentElement.clientWidth:document.body.clientWidth}else{return self.innerWidth}},
		isAncestor:function(F,G){F=Ext.getDom(F);G=Ext.getDom(G);if(!F||!G){return false}if(F.contains&&!Ext.isSafari){return F.contains(G)}else{if(F.compareDocumentPosition){try {return !!(F.compareDocumentPosition(G)&16)}catch(e){return false;}}else{var E=G.parentNode;while(E){if(E==F){return true}else{if(!E.tagName||E.tagName.toUpperCase()=="HTML"){return false}}E=E.parentNode}return false}}},
		getRegion:function(E){return Ext.lib.Region.getRegion(E)},getY:function(E){return this.getXY(E)[1]},getX:function(E){return this.getXY(E)[0]},getXY:function(G){var F,K,M,N,J=(document.body||document.documentElement);G=Ext.getDom(G);if(G==J){return[0,0]}if(G.getBoundingClientRect){M=G.getBoundingClientRect();N=C(document).getScroll();return[M.left+N.left,M.top+N.top]}var O=0,L=0;F=G;var E=C(G).getStyle("position")=="absolute";while(F){O+=F.offsetLeft;L+=F.offsetTop;if(!E&&C(F).getStyle("position")=="absolute"){E=true}if(Ext.isGecko){K=C(F);var P=parseInt(K.getStyle("borderTopWidth"),10)||0;var H=parseInt(K.getStyle("borderLeftWidth"),10)||0;O+=H;L+=P;if(F!=G&&K.getStyle("overflow")!="visible"){O+=H;L+=P}}F=F.offsetParent}if(Ext.isSafari&&E){O-=J.offsetLeft;L-=J.offsetTop}if(Ext.isGecko&&!E){var I=C(J);O+=parseInt(I.getStyle("borderLeftWidth"),10)||0;L+=parseInt(I.getStyle("borderTopWidth"),10)||0}F=G.parentNode;while(F&&F!=J){if(!Ext.isOpera||(F.tagName!="TR"&&C(F).getStyle("display")!="inline")){O-=F.scrollLeft;L-=F.scrollTop}F=F.parentNode}return[O,L]},setXY:function(E,F){E=Ext.fly(E,"_setXY");E.position();var G=E.translatePoints(F);if(F[0]!==false){E.dom.style.left=G.left+"px"}if(F[1]!==false){E.dom.style.top=G.top+"px"}},setX:function(F,E){this.setXY(F,[E,false])},setY:function(E,F){this.setXY(E,[false,F])}};
Ext.lib.Event=function(){var F=false;var G=[];var K=[];var I=0;var H=[];var E=0;var J=null;return{POLL_RETRYS:200,POLL_INTERVAL:20,EL:0,TYPE:1,FN:2,WFN:3,OBJ:3,ADJ_SCOPE:4,_interval:null,
	startInterval:function(){if(!this._interval){var L=this;var M=function(){L._tryPreloadAttach()};this._interval=setInterval(M,this.POLL_INTERVAL)}},
	onAvailable:function(N,L,O,M){H.push({id:N,fn:L,obj:O,override:M,checkReady:false});I=this.POLL_RETRYS;this.startInterval()},
	addListener:function(Q,M,P){Q=Ext.getDom(Q);if(!Q||!P){return false}if("unload"==M){K[K.length]=[Q,M,P];return true}var O=function(R){return typeof Ext!="undefined"?P(Ext.lib.Event.getEvent(R)):false};var L=[Q,M,P,O];var N=G.length;G[N]=L;this.doAdd(Q,M,O,false);return true},
	removeListener:function(S,O,R){var Q,N;S=Ext.getDom(S);if(!R){return this.purgeElement(S,false,O)}if("unload"==O){for(Q=0,N=K.length;Q<N;Q++){var M=K[Q];if(M&&M[0]==S&&M[1]==O&&M[2]==R){K.splice(Q,1);return true}}return false}var L=null;var P=arguments[3];if("undefined"==typeof P){P=this._getCacheIndex(S,O,R)}if(P>=0){L=G[P]}if(!S||!L){return false}this.doRemove(S,O,L[this.WFN],false);delete G[P][this.WFN];delete G[P][this.FN];G.splice(P,1);return true},getTarget:function(N,M){N=N.browserEvent||N;var L=N.target||N.srcElement;return this.resolveTextNode(L)},resolveTextNode:function(L){if(Ext.isSafari&&L&&3==L.nodeType){return L.parentNode}else{return L}},getPageX:function(M){M=M.browserEvent||M;var L=M.pageX;if(!L&&0!==L){L=M.clientX||0;if(Ext.isIE){L+=this.getScroll()[1]}}return L},getPageY:function(L){L=L.browserEvent||L;var M=L.pageY;if(!M&&0!==M){M=L.clientY||0;if(Ext.isIE){M+=this.getScroll()[0]}}return M},getXY:function(L){L=L.browserEvent||L;return[this.getPageX(L),this.getPageY(L)]},getRelatedTarget:function(M){M=M.browserEvent||M;var L=M.relatedTarget;if(!L){if(M.type=="mouseout"){L=M.toElement}else{if(M.type=="mouseover"){L=M.fromElement}}}return this.resolveTextNode(L)},getTime:function(N){N=N.browserEvent||N;if(!N.time){var M=new Date().getTime();try{N.time=M}catch(L){this.lastError=L;return M}}return N.time},stopEvent:function(L){this.stopPropagation(L);this.preventDefault(L)},stopPropagation:function(L){L=L.browserEvent||L;if(L.stopPropagation){L.stopPropagation()}else{L.cancelBubble=true}},preventDefault:function(L){L=L.browserEvent||L;if(L.preventDefault){L.preventDefault()}else{L.returnValue=false}},getEvent:function(M){var L=M||window.event;if(!L){var N=this.getEvent.caller;while(N){L=N.arguments[0];if(L&&Event==L.constructor){break}N=N.caller}}return L},getCharCode:function(L){L=L.browserEvent||L;return L.charCode||L.keyCode||0},_getCacheIndex:function(Q,N,P){for(var O=0,M=G.length;O<M;++O){var L=G[O];if(L&&L[this.FN]==P&&L[this.EL]==Q&&L[this.TYPE]==N){return O}}return -1},elCache:{},getEl:function(L){return document.getElementById(L)},clearCache:function(){},_load:function(M){F=true;var L=Ext.lib.Event;if(Ext.isIE){L.doRemove(window,"load",L._load)}},_tryPreloadAttach:function(){if(this.locked){return false}this.locked=true;var R=!F;if(!R){R=(I>0)}var Q=[];for(var M=0,L=H.length;M<L;++M){var P=H[M];if(P){var O=this.getEl(P.id);if(O){if(!P.checkReady||F||O.nextSibling||(document&&document.body)){var N=O;if(P.override){if(P.override===true){N=P.obj}else{N=P.override}}P.fn.call(N,P.obj);H[M]=null}}else{Q.push(P)}}}I=(Q.length===0)?0:I-1;if(R){this.startInterval()}else{clearInterval(this._interval);this._interval=null}this.locked=false;return true},purgeElement:function(P,Q,N){var R=this.getListeners(P,N);if(R){for(var O=0,L=R.length;O<L;++O){var M=R[O];this.removeListener(P,M.type,M.fn)}}if(Q&&P&&P.childNodes){for(O=0,L=P.childNodes.length;O<L;++O){this.purgeElement(P.childNodes[O],Q,N)}}},getListeners:function(M,R){var P=[],L;if(!R){L=[G,K]}else{if(R=="unload"){L=[K]}else{L=[G]}}for(var O=0;O<L.length;++O){var T=L[O];if(T&&T.length>0){for(var Q=0,S=T.length;Q<S;++Q){var N=T[Q];if(N&&N[this.EL]===M&&(!R||R===N[this.TYPE])){P.push({type:N[this.TYPE],fn:N[this.FN],obj:N[this.OBJ],adjust:N[this.ADJ_SCOPE],index:Q})}}}}return(P.length)?P:null},_unload:function(S){var R=Ext.lib.Event,P,O,M,L,N;for(P=0,L=K.length;P<L;++P){M=K[P];if(M){var Q=window;if(M[R.ADJ_SCOPE]){if(M[R.ADJ_SCOPE]===true){Q=M[R.OBJ]}else{Q=M[R.ADJ_SCOPE]}}M[R.FN].call(Q,R.getEvent(S),M[R.OBJ]);K[P]=null;M=null;Q=null}}K=null;if(G&&G.length>0){O=G.length;while(O){N=O-1;M=G[N];if(M){R.removeListener(M[R.EL],M[R.TYPE],M[R.FN],N)}O=O-1}M=null;R.clearCache()}R.doRemove(window,"unload",R._unload)},getScroll:function(){var L=document.documentElement,M=document.body;if(L&&(L.scrollTop||L.scrollLeft)){return[L.scrollTop,L.scrollLeft]}else{if(M){return[M.scrollTop,M.scrollLeft]}else{return[0,0]}}},doAdd:function(){if(window.addEventListener){return function(O,M,N,L){O.addEventListener(M,N,(L))}}else{if(window.attachEvent){return function(O,M,N,L){O.attachEvent("on"+M,N)}}else{return function(){}}}}(),doRemove:function(){if(window.removeEventListener){return function(O,M,N,L){O.removeEventListener(M,N,(L))}}else{if(window.detachEvent){return function(N,L,M){N.detachEvent("on"+L,M)}}else{return function(){}}}}()}}();var D=Ext.lib.Event;D.on=D.addListener;D.un=D.removeListener;if(document&&document.body){D._load()}else{D.doAdd(window,"load",D._load)}D.doAdd(window,"unload",D._unload);D._tryPreloadAttach();Ext.lib.Ajax={request:function(K,I,E,J,F){if(F){var G=F.headers;if(G){for(var H in G){if(G.hasOwnProperty(H)){this.initHeader(H,G[H],false)}}}if(F.xmlData){if(!G||!G["Content-Type"]){this.initHeader("Content-Type","text/xml",false)}K=(K?K:(F.method?F.method:"POST"));J=F.xmlData}else{if(F.jsonData){if(!G||!G["Content-Type"]){this.initHeader("Content-Type","application/json",false)}K=(K?K:(F.method?F.method:"POST"));J=typeof F.jsonData=="object"?Ext.encode(F.jsonData):F.jsonData}}}return this.asyncRequest(K,I,E,J)},serializeForm:function(F){if(typeof F=="string"){F=(document.getElementById(F)||document.forms[F])}var G,E,H,J,K="",M=false;for(var L=0;L<F.elements.length;L++){G=F.elements[L];J=F.elements[L].disabled;E=F.elements[L].name;H=F.elements[L].value;if(!J&&E){switch(G.type){case"select-one":case"select-multiple":for(var I=0;I<G.options.length;I++){if(G.options[I].selected){if(Ext.isIE){K+=encodeURIComponent(E)+"="+encodeURIComponent(G.options[I].attributes["value"].specified?G.options[I].value:G.options[I].text)+"&"}else{K+=encodeURIComponent(E)+"="+encodeURIComponent(G.options[I].hasAttribute("value")?G.options[I].value:G.options[I].text)+"&"}}}break;case"radio":case"checkbox":if(G.checked){K+=encodeURIComponent(E)+"="+encodeURIComponent(H)+"&"}break;case"file":case undefined:case"reset":case"button":break;case"submit":if(M==false){K+=encodeURIComponent(E)+"="+encodeURIComponent(H)+"&";M=true}break;default:K+=encodeURIComponent(E)+"="+encodeURIComponent(H)+"&";break}}}K=K.substr(0,K.length-1);return K},headers:{},hasHeaders:false,useDefaultHeader:true,defaultPostHeader:"application/x-www-form-urlencoded; charset=UTF-8",useDefaultXhrHeader:true,defaultXhrHeader:"XMLHttpRequest",hasDefaultHeaders:true,defaultHeaders:{},poll:{},timeout:{},pollInterval:50,transactionId:0,setProgId:function(E){this.activeX.unshift(E)},setDefaultPostHeader:function(E){this.useDefaultHeader=E},setDefaultXhrHeader:function(E){this.useDefaultXhrHeader=E},setPollingInterval:function(E){if(typeof E=="number"&&isFinite(E)){this.pollInterval=E}},createXhrObject:function(I){var H,E;try{E=new XMLHttpRequest();H={conn:E,tId:I}}catch(G){for(var F=0;F<this.activeX.length;++F){try{E=new ActiveXObject(this.activeX[F]);H={conn:E,tId:I};break}catch(G){}}}finally{return H}},getConnectionObject:function(){var F;var G=this.transactionId;try{F=this.createXhrObject(G);if(F){this.transactionId++}}catch(E){}finally{return F}},asyncRequest:function(I,F,H,E){var G=this.getConnectionObject();if(!G){return null}else{G.conn.open(I,F,true);if(this.useDefaultXhrHeader){if(!this.defaultHeaders["X-Requested-With"]){this.initHeader("X-Requested-With",this.defaultXhrHeader,true)}}if(E&&this.useDefaultHeader&&(!this.hasHeaders||!this.headers["Content-Type"])){this.initHeader("Content-Type",this.defaultPostHeader)}if(this.hasDefaultHeaders||this.hasHeaders){this.setHeader(G)}this.handleReadyState(G,H);G.conn.send(E||null);return G}},handleReadyState:function(F,G){var E=this;if(G&&G.timeout){this.timeout[F.tId]=window.setTimeout(function(){E.abort(F,G,true)},G.timeout)}this.poll[F.tId]=window.setInterval(function(){if(F.conn&&F.conn.readyState==4){window.clearInterval(E.poll[F.tId]);delete E.poll[F.tId];if(G&&G.timeout){window.clearTimeout(E.timeout[F.tId]);delete E.timeout[F.tId]}E.handleTransactionResponse(F,G)}},this.pollInterval)},handleTransactionResponse:function(I,J,E){if(!J){this.releaseObject(I);return }var G,F;try{if(I.conn.status!==undefined&&I.conn.status!=0){G=I.conn.status}else{G=13030}}catch(H){G=13030}if(G>=200&&G<300){F=this.createResponseObject(I,J.argument);if(J.success){if(!J.scope){J.success(F)}else{J.success.apply(J.scope,[F])}}}else{switch(G){case 12002:case 12029:case 12030:case 12031:case 12152:case 13030:F=this.createExceptionObject(I.tId,J.argument,(E?E:false));if(J.failure){if(!J.scope){J.failure(F)}else{J.failure.apply(J.scope,[F])}}break;default:F=this.createResponseObject(I,J.argument);if(J.failure){if(!J.scope){J.failure(F)}else{J.failure.apply(J.scope,[F])}}}}this.releaseObject(I);F=null},createResponseObject:function(E,K){var H={};var M={};try{var G=E.conn.getAllResponseHeaders();var J=G.split("\n");for(var I=0;I<J.length;I++){var F=J[I].indexOf(":");if(F!=-1){M[J[I].substring(0,F)]=J[I].substring(F+2)}}}catch(L){}H.tId=E.tId;H.status=E.conn.status;H.statusText=E.conn.statusText;H.getResponseHeader=M;H.getAllResponseHeaders=G;H.responseText=E.conn.responseText;H.responseXML=E.conn.responseXML;if(typeof K!==undefined){H.argument=K}return H},createExceptionObject:function(L,H,E){var J=0;var K="communication failure";var G=-1;var F="transaction aborted";var I={};I.tId=L;if(E){I.status=G;I.statusText=F}else{I.status=J;I.statusText=K}if(H){I.argument=H}return I},initHeader:function(E,H,G){var F=(G)?this.defaultHeaders:this.headers;if(F[E]===undefined){F[E]=H}else{F[E]=H+","+F[E]}if(G){this.hasDefaultHeaders=true}else{this.hasHeaders=true}},setHeader:function(E){if(this.hasDefaultHeaders){for(var F in this.defaultHeaders){if(this.defaultHeaders.hasOwnProperty(F)){E.conn.setRequestHeader(F,this.defaultHeaders[F])}}}if(this.hasHeaders){for(var F in this.headers){if(this.headers.hasOwnProperty(F)){E.conn.setRequestHeader(F,this.headers[F])}}this.headers={};this.hasHeaders=false}},resetDefaultHeaders:function(){delete this.defaultHeaders;this.defaultHeaders={};this.hasDefaultHeaders=false},abort:function(F,G,E){if(this.isCallInProgress(F)){F.conn.abort();window.clearInterval(this.poll[F.tId]);delete this.poll[F.tId];if(E){delete this.timeout[F.tId]}this.handleTransactionResponse(F,G,true);return true}else{return false}},isCallInProgress:function(E){if(E.conn){return E.conn.readyState!=4&&E.conn.readyState!=0}else{return false}},
			releaseObject:function(E){E.conn=null;E=null},activeX:["MSXML2.XMLHTTP.3.0","MSXML2.XMLHTTP","Microsoft.XMLHTTP"]};Ext.lib.Region=function(G,H,E,F){this.top=G;this[1]=G;this.right=H;this.bottom=E;this.left=F;this[0]=F};Ext.lib.Region.prototype={contains:function(E){return(E.left>=this.left&&E.right<=this.right&&E.top>=this.top&&E.bottom<=this.bottom)},getArea:function(){return((this.bottom-this.top)*(this.right-this.left))},intersect:function(I){var G=Math.max(this.top,I.top);var H=Math.min(this.right,I.right);var E=Math.min(this.bottom,I.bottom);var F=Math.max(this.left,I.left);if(E>=G&&H>=F){return new Ext.lib.Region(G,H,E,F)}else{return null}},union:function(I){var G=Math.min(this.top,I.top);var H=Math.max(this.right,I.right);var E=Math.max(this.bottom,I.bottom);var F=Math.min(this.left,I.left);return new Ext.lib.Region(G,H,E,F)},constrainTo:function(E){this.top=this.top.constrain(E.top,E.bottom);this.bottom=this.bottom.constrain(E.top,E.bottom);this.left=this.left.constrain(E.left,E.right);this.right=this.right.constrain(E.left,E.right);return this},adjust:function(G,F,E,H){this.top+=G;this.left+=F;this.right+=H;this.bottom+=E;return this}};Ext.lib.Region.getRegion=function(H){var J=Ext.lib.Dom.getXY(H);var G=J[1];var I=J[0]+H.offsetWidth;var E=J[1]+H.offsetHeight;var F=J[0];return new Ext.lib.Region(G,I,E,F)};Ext.lib.Point=function(E,F){if(Ext.isArray(E)){F=E[1];E=E[0]}this.x=this.right=this.left=this[0]=E;this.y=this.top=this.bottom=this[1]=F};Ext.lib.Point.prototype=new Ext.lib.Region();Ext.lib.Anim={scroll:function(H,F,I,J,E,G){return this.run(H,F,I,J,E,G,Ext.lib.Scroll)},motion:function(H,F,I,J,E,G){return this.run(H,F,I,J,E,G,Ext.lib.Motion)},color:function(H,F,I,J,E,G){return this.run(H,F,I,J,E,G,Ext.lib.ColorAnim)},run:function(I,F,K,L,E,H,G){G=G||Ext.lib.AnimBase;if(typeof L=="string"){L=Ext.lib.Easing[L]}var J=new G(I,F,K,L);J.animateX(function(){Ext.callback(E,H)});return J}};function C(E){if(!B){B=new Ext.Element.Flyweight()}B.dom=E;return B}if(Ext.isIE){function A(){var E=Function.prototype;delete E.createSequence;delete E.defer;delete E.createDelegate;delete E.createCallback;delete E.createInterceptor;window.detachEvent("onunload",A)}window.attachEvent("onunload",A)}Ext.lib.AnimBase=function(F,E,G,H){if(F){this.init(F,E,G,H)}};Ext.lib.AnimBase.prototype={toString:function(){var E=this.getEl();var F=E.id||E.tagName;return("Anim "+F)},patterns:{noNegatives:/width|height|opacity|padding/i,offsetAttribute:/^((width|height)|(top|left))$/,defaultUnit:/width|height|top$|bottom$|left$|right$/i,offsetUnit:/\d+(em|%|en|ex|pt|in|cm|mm|pc)$/i},doMethod:function(E,G,F){return this.method(this.currentFrame,G,F-G,this.totalFrames)},setAttribute:function(E,G,F){if(this.patterns.noNegatives.test(E)){G=(G>0)?G:0}Ext.fly(this.getEl(),"_anim").setStyle(E,G+F)},getAttribute:function(E){var G=this.getEl();var I=C(G).getStyle(E);if(I!=="auto"&&!this.patterns.offsetUnit.test(I)){return parseFloat(I)}var F=this.patterns.offsetAttribute.exec(E)||[];var J=!!(F[3]);var H=!!(F[2]);if(H||(C(G).getStyle("position")=="absolute"&&J)){I=G["offset"+F[0].charAt(0).toUpperCase()+F[0].substr(1)]}else{I=0}return I},getDefaultUnit:function(E){if(this.patterns.defaultUnit.test(E)){return"px"}return""},animateX:function(G,E){var F=function(){this.onComplete.removeListener(F);if(typeof G=="function"){G.call(E||this,this)}};this.onComplete.addListener(F,this);this.animate()},setRuntimeAttribute:function(F){var K;var G;var H=this.attributes;this.runtimeAttributes[F]={};var J=function(L){return(typeof L!=="undefined")};if(!J(H[F]["to"])&&!J(H[F]["by"])){return false}K=(J(H[F]["from"]))?H[F]["from"]:this.getAttribute(F);if(J(H[F]["to"])){G=H[F]["to"]}else{if(J(H[F]["by"])){if(K.constructor==Array){G=[];for(var I=0,E=K.length;I<E;++I){G[I]=K[I]+H[F]["by"][I]}}else{G=K+H[F]["by"]}}}this.runtimeAttributes[F].start=K;this.runtimeAttributes[F].end=G;this.runtimeAttributes[F].unit=(J(H[F].unit))?H[F]["unit"]:this.getDefaultUnit(F)},init:function(G,L,K,E){var F=false;var H=null;var J=0;G=Ext.getDom(G);this.attributes=L||{};this.duration=K||1;this.method=E||Ext.lib.Easing.easeNone;this.useSeconds=true;this.currentFrame=0;this.totalFrames=Ext.lib.AnimMgr.fps;this.getEl=function(){return G};this.isAnimated=function(){return F};this.getStartTime=function(){return H};this.runtimeAttributes={};this.animate=function(){if(this.isAnimated()){return false}this.currentFrame=0;this.totalFrames=(this.useSeconds)?Math.ceil(Ext.lib.AnimMgr.fps*this.duration):this.duration;Ext.lib.AnimMgr.registerElement(this)};this.stop=function(O){if(O){this.currentFrame=this.totalFrames;this._onTween.fire()}Ext.lib.AnimMgr.stop(this)};var N=function(){this.onStart.fire();this.runtimeAttributes={};for(var O in this.attributes){this.setRuntimeAttribute(O)}F=true;J=0;H=new Date()};var M=function(){var Q={duration:new Date()-this.getStartTime(),currentFrame:this.currentFrame};Q.toString=function(){return("duration: "+Q.duration+", currentFrame: "+Q.currentFrame)};this.onTween.fire(Q);var P=this.runtimeAttributes;for(var O in P){this.setAttribute(O,this.doMethod(O,P[O].start,P[O].end),P[O].unit)}J+=1};var I=function(){var O=(new Date()-H)/1000;var P={duration:O,frames:J,fps:J/O};P.toString=function(){return("duration: "+P.duration+", frames: "+P.frames+", fps: "+P.fps)};F=false;J=0;this.onComplete.fire(P)};this._onStart=new Ext.util.Event(this);this.onStart=new Ext.util.Event(this);this.onTween=new Ext.util.Event(this);this._onTween=new Ext.util.Event(this);this.onComplete=new Ext.util.Event(this);this._onComplete=new Ext.util.Event(this);this._onStart.addListener(N);this._onTween.addListener(M);this._onComplete.addListener(I)}};Ext.lib.AnimMgr=new function(){var G=null;var F=[];var E=0;this.fps=1000;this.delay=1;this.registerElement=function(J){F[F.length]=J;E+=1;J._onStart.fire();this.start()};this.unRegister=function(K,J){K._onComplete.fire();J=J||I(K);if(J!=-1){F.splice(J,1)}E-=1;if(E<=0){this.stop()}};this.start=function(){if(G===null){G=setInterval(this.run,this.delay)}};this.stop=function(L){if(!L){clearInterval(G);for(var K=0,J=F.length;K<J;++K){if(F[0].isAnimated()){this.unRegister(F[0],0)}}F=[];G=null;E=0}else{this.unRegister(L)}};this.run=function(){for(var L=0,J=F.length;L<J;++L){var K=F[L];if(!K||!K.isAnimated()){continue}if(K.currentFrame<K.totalFrames||K.totalFrames===null){K.currentFrame+=1;if(K.useSeconds){H(K)}K._onTween.fire()}else{Ext.lib.AnimMgr.stop(K,L)}}};var I=function(L){for(var K=0,J=F.length;K<J;++K){if(F[K]==L){return K}}return -1};var H=function(K){var N=K.totalFrames;var M=K.currentFrame;var L=(K.currentFrame*K.duration*1000/K.totalFrames);var J=(new Date()-K.getStartTime());var O=0;if(J<K.duration*1000){O=Math.round((J/L-1)*K.currentFrame)}else{O=N-(M+1)}if(O>0&&isFinite(O)){if(K.currentFrame+O>=N){O=N-(M+1)}K.currentFrame+=O}}};Ext.lib.Bezier=new function(){this.getPosition=function(I,H){var J=I.length;var G=[];for(var F=0;F<J;++F){G[F]=[I[F][0],I[F][1]]}for(var E=1;E<J;++E){for(F=0;F<J-E;++F){G[F][0]=(1-H)*G[F][0]+H*G[parseInt(F+1,10)][0];G[F][1]=(1-H)*G[F][1]+H*G[parseInt(F+1,10)][1]}}return[G[0][0],G[0][1]]}};(function(){Ext.lib.ColorAnim=function(I,H,J,K){Ext.lib.ColorAnim.superclass.constructor.call(this,I,H,J,K)};Ext.extend(Ext.lib.ColorAnim,Ext.lib.AnimBase);var F=Ext.lib;var G=F.ColorAnim.superclass;var E=F.ColorAnim.prototype;E.toString=function(){var H=this.getEl();var I=H.id||H.tagName;return("ColorAnim "+I)};E.patterns.color=/color$/i;E.patterns.rgb=/^rgb\(([0-9]+)\s*,\s*([0-9]+)\s*,\s*([0-9]+)\)$/i;E.patterns.hex=/^#?([0-9A-F]{2})([0-9A-F]{2})([0-9A-F]{2})$/i;E.patterns.hex3=/^#?([0-9A-F]{1})([0-9A-F]{1})([0-9A-F]{1})$/i;E.patterns.transparent=/^transparent|rgba\(0, 0, 0, 0\)$/;E.parseColor=function(H){if(H.length==3){return H}var I=this.patterns.hex.exec(H);if(I&&I.length==4){return[parseInt(I[1],16),parseInt(I[2],16),parseInt(I[3],16)]}I=this.patterns.rgb.exec(H);if(I&&I.length==4){return[parseInt(I[1],10),parseInt(I[2],10),parseInt(I[3],10)]}I=this.patterns.hex3.exec(H);if(I&&I.length==4){return[parseInt(I[1]+I[1],16),parseInt(I[2]+I[2],16),parseInt(I[3]+I[3],16)]}return null};E.getAttribute=function(H){var J=this.getEl();if(this.patterns.color.test(H)){var K=C(J).getStyle(H);if(this.patterns.transparent.test(K)){var I=J.parentNode;K=C(I).getStyle(H);while(I&&this.patterns.transparent.test(K)){I=I.parentNode;K=C(I).getStyle(H);if(I.tagName.toUpperCase()=="HTML"){K="#fff"}}}}else{K=G.getAttribute.call(this,H)}return K};E.doMethod=function(I,M,J){var L;if(this.patterns.color.test(I)){L=[];for(var K=0,H=M.length;K<H;++K){L[K]=G.doMethod.call(this,I,M[K],J[K])}L="rgb("+Math.floor(L[0])+","+Math.floor(L[1])+","+Math.floor(L[2])+")"}else{L=G.doMethod.call(this,I,M,J)}return L};E.setRuntimeAttribute=function(I){G.setRuntimeAttribute.call(this,I);if(this.patterns.color.test(I)){var K=this.attributes;var M=this.parseColor(this.runtimeAttributes[I].start);var J=this.parseColor(this.runtimeAttributes[I].end);if(typeof K[I]["to"]==="undefined"&&typeof K[I]["by"]!=="undefined"){J=this.parseColor(K[I].by);for(var L=0,H=M.length;L<H;++L){J[L]=M[L]+J[L]}}this.runtimeAttributes[I].start=M;this.runtimeAttributes[I].end=J}}})();Ext.lib.Easing={easeNone:function(F,E,H,G){return H*F/G+E},easeIn:function(F,E,H,G){return H*(F/=G)*F+E},easeOut:function(F,E,H,G){return -H*(F/=G)*(F-2)+E},easeBoth:function(F,E,H,G){if((F/=G/2)<1){return H/2*F*F+E}return -H/2*((--F)*(F-2)-1)+E},easeInStrong:function(F,E,H,G){return H*(F/=G)*F*F*F+E},easeOutStrong:function(F,E,H,G){return -H*((F=F/G-1)*F*F*F-1)+E},easeBothStrong:function(F,E,H,G){if((F/=G/2)<1){return H/2*F*F*F*F+E}return -H/2*((F-=2)*F*F*F-2)+E},elasticIn:function(G,E,K,J,F,I){if(G==0){return E}if((G/=J)==1){return E+K}if(!I){I=J*0.3}if(!F||F<Math.abs(K)){F=K;var H=I/4}else{var H=I/(2*Math.PI)*Math.asin(K/F)}return -(F*Math.pow(2,10*(G-=1))*Math.sin((G*J-H)*(2*Math.PI)/I))+E},elasticOut:function(G,E,K,J,F,I){if(G==0){return E}if((G/=J)==1){return E+K}if(!I){I=J*0.3}if(!F||F<Math.abs(K)){F=K;var H=I/4}else{var H=I/(2*Math.PI)*Math.asin(K/F)}return F*Math.pow(2,-10*G)*Math.sin((G*J-H)*(2*Math.PI)/I)+K+E},elasticBoth:function(G,E,K,J,F,I){if(G==0){return E}if((G/=J/2)==2){return E+K}if(!I){I=J*(0.3*1.5)}if(!F||F<Math.abs(K)){F=K;var H=I/4}else{var H=I/(2*Math.PI)*Math.asin(K/F)}if(G<1){return -0.5*(F*Math.pow(2,10*(G-=1))*Math.sin((G*J-H)*(2*Math.PI)/I))+E}return F*Math.pow(2,-10*(G-=1))*Math.sin((G*J-H)*(2*Math.PI)/I)*0.5+K+E},backIn:function(F,E,I,H,G){if(typeof G=="undefined"){G=1.70158}return I*(F/=H)*F*((G+1)*F-G)+E},backOut:function(F,E,I,H,G){if(typeof G=="undefined"){G=1.70158}return I*((F=F/H-1)*F*((G+1)*F+G)+1)+E},backBoth:function(F,E,I,H,G){if(typeof G=="undefined"){G=1.70158}if((F/=H/2)<1){return I/2*(F*F*(((G*=(1.525))+1)*F-G))+E}return I/2*((F-=2)*F*(((G*=(1.525))+1)*F+G)+2)+E},bounceIn:function(F,E,H,G){return H-Ext.lib.Easing.bounceOut(G-F,0,H,G)+E},bounceOut:function(F,E,H,G){if((F/=G)<(1/2.75)){return H*(7.5625*F*F)+E}else{if(F<(2/2.75)){return H*(7.5625*(F-=(1.5/2.75))*F+0.75)+E}else{if(F<(2.5/2.75)){return H*(7.5625*(F-=(2.25/2.75))*F+0.9375)+E}}}return H*(7.5625*(F-=(2.625/2.75))*F+0.984375)+E},bounceBoth:function(F,E,H,G){if(F<G/2){return Ext.lib.Easing.bounceIn(F*2,0,H,G)*0.5+E}return Ext.lib.Easing.bounceOut(F*2-G,0,H,G)*0.5+H*0.5+E}};(function(){Ext.lib.Motion=function(K,J,L,M){if(K){Ext.lib.Motion.superclass.constructor.call(this,K,J,L,M)}};Ext.extend(Ext.lib.Motion,Ext.lib.ColorAnim);var H=Ext.lib;var I=H.Motion.superclass;var F=H.Motion.prototype;F.toString=function(){var J=this.getEl();var K=J.id||J.tagName;return("Motion "+K)};F.patterns.points=/^points$/i;F.setAttribute=function(J,L,K){if(this.patterns.points.test(J)){K=K||"px";I.setAttribute.call(this,"left",L[0],K);I.setAttribute.call(this,"top",L[1],K)}else{I.setAttribute.call(this,J,L,K)}};F.getAttribute=function(J){if(this.patterns.points.test(J)){var K=[I.getAttribute.call(this,"left"),I.getAttribute.call(this,"top")]}else{K=I.getAttribute.call(this,J)}return K};F.doMethod=function(J,N,K){var M=null;if(this.patterns.points.test(J)){var L=this.method(this.currentFrame,0,100,this.totalFrames)/100;M=H.Bezier.getPosition(this.runtimeAttributes[J],L)}else{M=I.doMethod.call(this,J,N,K)}return M};F.setRuntimeAttribute=function(S){if(this.patterns.points.test(S)){var K=this.getEl();var M=this.attributes;var J;var O=M["points"]["control"]||[];var L;var P,R;if(O.length>0&&!Ext.isArray(O[0])){O=[O]}else{var N=[];for(P=0,R=O.length;P<R;++P){N[P]=O[P]}O=N}Ext.fly(K,"_anim").position();if(G(M["points"]["from"])){Ext.lib.Dom.setXY(K,M["points"]["from"])}else{Ext.lib.Dom.setXY(K,Ext.lib.Dom.getXY(K))}J=this.getAttribute("points");if(G(M["points"]["to"])){L=E.call(this,M["points"]["to"],J);var Q=Ext.lib.Dom.getXY(this.getEl());for(P=0,R=O.length;P<R;++P){O[P]=E.call(this,O[P],J)}}else{if(G(M["points"]["by"])){L=[J[0]+M["points"]["by"][0],J[1]+M["points"]["by"][1]];for(P=0,R=O.length;P<R;++P){O[P]=[J[0]+O[P][0],J[1]+O[P][1]]}}}this.runtimeAttributes[S]=[J];if(O.length>0){this.runtimeAttributes[S]=this.runtimeAttributes[S].concat(O)}this.runtimeAttributes[S][this.runtimeAttributes[S].length]=L}else{I.setRuntimeAttribute.call(this,S)}};var E=function(J,L){var K=Ext.lib.Dom.getXY(this.getEl());J=[J[0]-K[0]+L[0],J[1]-K[1]+L[1]];return J};var G=function(J){return(typeof J!=="undefined")}})();(function(){Ext.lib.Scroll=function(I,H,J,K){if(I){Ext.lib.Scroll.superclass.constructor.call(this,I,H,J,K)}};Ext.extend(Ext.lib.Scroll,Ext.lib.ColorAnim);var F=Ext.lib;var G=F.Scroll.superclass;var E=F.Scroll.prototype;E.toString=function(){var H=this.getEl();var I=H.id||H.tagName;return("Scroll "+I)};E.doMethod=function(H,K,I){var J=null;if(H=="scroll"){J=[this.method(this.currentFrame,K[0],I[0]-K[0],this.totalFrames),this.method(this.currentFrame,K[1],I[1]-K[1],this.totalFrames)]}else{J=G.doMethod.call(this,H,K,I)}return J};E.getAttribute=function(H){var J=null;var I=this.getEl();if(H=="scroll"){J=[I.scrollLeft,I.scrollTop]}else{J=G.getAttribute.call(this,H)}return J};E.setAttribute=function(H,K,J){var I=this.getEl();if(H=="scroll"){I.scrollLeft=K[0];I.scrollTop=K[1]}else{G.setAttribute.call(this,H,K,J)}}})()})();

Ext.DomHelper=function(){var L=null;var F=/^(?:br|frame|hr|img|input|link|meta|range|spacer|wbr|area|param|col)$/i;var B=/^table|tbody|tr|td$/i;var A=function(T){if(typeof T=="string"){return T}var O="";if(Ext.isArray(T)){for(var R=0,P=T.length;R<P;R++){O+=A(T[R])}return O}if(!T.tag){T.tag="div"}O+="<"+T.tag;for(var N in T){if(N=="tag"||N=="children"||N=="cn"||N=="html"||typeof T[N]=="function"){continue}if(N=="style"){var S=T["style"];if(typeof S=="function"){S=S.call()}if(typeof S=="string"){O+=" style=\""+S+"\""}else{if(typeof S=="object"){O+=" style=\"";for(var Q in S){if(typeof S[Q]!="function"){O+=Q+":"+S[Q]+";"}}O+="\""}}}else{if(N=="cls"){O+=" class=\""+T["cls"]+"\""}else{if(N=="htmlFor"){O+=" for=\""+T["htmlFor"]+"\""}else{O+=" "+N+"=\""+T[N]+"\""}}}}if(F.test(T.tag)){O+="/>"}else{O+=">";var U=T.children||T.cn;if(U){O+=A(U)}else{if(T.html){O+=T.html}}O+="</"+T.tag+">"}return O};var M=function(T,O){var S;if(Ext.isArray(T)){S=document.createDocumentFragment();for(var R=0,P=T.length;R<P;R++){M(T[R],S)}}else{if(typeof T=="string"){S=document.createTextNode(T)}else{S=document.createElement(T.tag||"div");var Q=!!S.setAttribute;for(var N in T){if(N=="tag"||N=="children"||N=="cn"||N=="html"||N=="style"||typeof T[N]=="function"){continue}if(N=="cls"){S.className=T["cls"]}else{if(Q){S.setAttribute(N,T[N])}else{S[N]=T[N]}}}Ext.DomHelper.applyStyles(S,T.style);var U=T.children||T.cn;if(U){M(U,S)}else{if(T.html){S.innerHTML=T.html}}}}if(O){O.appendChild(S)}return S};var I=function(S,Q,P,R){L.innerHTML=[Q,P,R].join("");var N=-1,O=L;while(++N<S){O=O.firstChild}return O};var J="<table>",E="</table>",C=J+"<tbody>",K="</tbody>"+E,H=C+"<tr>",D="</tr>"+K;var G=function(N,O,Q,P){if(!L){L=document.createElement("div")}var R;var S=null;if(N=="td"){if(O=="afterbegin"||O=="beforeend"){return }if(O=="beforebegin"){S=Q;Q=Q.parentNode}else{S=Q.nextSibling;Q=Q.parentNode}R=I(4,H,P,D)}else{if(N=="tr"){if(O=="beforebegin"){S=Q;Q=Q.parentNode;R=I(3,C,P,K)}else{if(O=="afterend"){S=Q.nextSibling;Q=Q.parentNode;R=I(3,C,P,K)}else{if(O=="afterbegin"){S=Q.firstChild}R=I(4,H,P,D)}}}else{if(N=="tbody"){if(O=="beforebegin"){S=Q;Q=Q.parentNode;R=I(2,J,P,E)}else{if(O=="afterend"){S=Q.nextSibling;Q=Q.parentNode;R=I(2,J,P,E)}else{if(O=="afterbegin"){S=Q.firstChild}R=I(3,C,P,K)}}}else{if(O=="beforebegin"||O=="afterend"){return }if(O=="afterbegin"){S=Q.firstChild}R=I(2,J,P,E)}}}Q.insertBefore(R,S);return R};return{useDom:false,markup:function(N){return A(N)},applyStyles:function(P,Q){if(Q){P=Ext.fly(P);if(typeof Q=="string"){var O=/\s?([a-z\-]*)\:\s?([^;]*);?/gi;var R;while((R=O.exec(Q))!=null){P.setStyle(R[1],R[2])}}else{if(typeof Q=="object"){for(var N in Q){P.setStyle(N,Q[N])}}else{if(typeof Q=="function"){Ext.DomHelper.applyStyles(P,Q.call())}}}}},insertHtml:function(P,R,Q){P=P.toLowerCase();if(R.insertAdjacentHTML){if(B.test(R.tagName)){var O;if(O=G(R.tagName.toLowerCase(),P,R,Q)){return O}}switch(P){case"beforebegin":R.insertAdjacentHTML("BeforeBegin",Q);return R.previousSibling;case"afterbegin":R.insertAdjacentHTML("AfterBegin",Q);return R.firstChild;case"beforeend":R.insertAdjacentHTML("BeforeEnd",Q);return R.lastChild;case"afterend":R.insertAdjacentHTML("AfterEnd",Q);return R.nextSibling}throw"Illegal insertion point -> \""+P+"\""}var N=R.ownerDocument.createRange();var S;switch(P){case"beforebegin":N.setStartBefore(R);S=N.createContextualFragment(Q);R.parentNode.insertBefore(S,R);return R.previousSibling;case"afterbegin":if(R.firstChild){N.setStartBefore(R.firstChild);S=N.createContextualFragment(Q);R.insertBefore(S,R.firstChild);return R.firstChild}else{R.innerHTML=Q;return R.firstChild}case"beforeend":if(R.lastChild){N.setStartAfter(R.lastChild);S=N.createContextualFragment(Q);R.appendChild(S);return R.lastChild}else{R.innerHTML=Q;return R.lastChild}case"afterend":N.setStartAfter(R);S=N.createContextualFragment(Q);R.parentNode.insertBefore(S,R.nextSibling);return R.nextSibling}throw"Illegal insertion point -> \""+P+"\""},insertBefore:function(N,P,O){return this.doInsert(N,P,O,"beforeBegin")},insertAfter:function(N,P,O){return this.doInsert(N,P,O,"afterEnd","nextSibling")},insertFirst:function(N,P,O){return this.doInsert(N,P,O,"afterBegin","firstChild")},doInsert:function(Q,S,R,T,P){Q=Ext.getDom(Q);var O;if(this.useDom){O=M(S,null);(P==="firstChild"?Q:Q.parentNode).insertBefore(O,P?Q[P]:Q)}else{var N=A(S);O=this.insertHtml(T,Q,N)}return R?Ext.get(O,true):O},append:function(P,R,Q){P=Ext.getDom(P);var O;if(this.useDom){O=M(R,null);P.appendChild(O)}else{var N=A(R);O=this.insertHtml("beforeEnd",P,N)}return Q?Ext.get(O,true):O},overwrite:function(N,P,O){N=Ext.getDom(N);N.innerHTML=A(P);return O?Ext.get(N.firstChild,true):N.firstChild},createTemplate:function(O){var N=A(O);return new Ext.Template(N)}}}();

Ext.Template=function(E){var B=arguments;if(Ext.isArray(E)){E=E.join("")}else{if(B.length>1){var C=[];for(var D=0,A=B.length;D<A;D++){if(typeof B[D]=="object"){Ext.apply(this,B[D])}else{C[C.length]=B[D]}}E=C.join("")}}this.html=E;if(this.compiled){this.compile()}};Ext.Template.prototype={applyTemplate:function(B){if(this.compiled){return this.compiled(B)}var A=this.disableFormats!==true;var E=Ext.util.Format,C=this;var D=function(G,I,L,H){if(L&&A){if(L.substr(0,5)=="this."){return C.call(L.substr(5),B[I],B)}else{if(H){var K=/^\s*['"](.*)["']\s*$/;H=H.split(",");for(var J=0,F=H.length;J<F;J++){H[J]=H[J].replace(K,"$1")}H=[B[I]].concat(H)}else{H=[B[I]]}return E[L].apply(E,H)}}else{return B[I]!==undefined?B[I]:""}};return this.html.replace(this.re,D)},set:function(A,B){this.html=A;this.compiled=null;if(B){this.compile()}return this},disableFormats:false,re:/\{([\w-]+)(?:\:([\w\.]*)(?:\((.*?)?\))?)?\}/g,compile:function(){var fm=Ext.util.Format;var useF=this.disableFormats!==true;var sep=Ext.isGecko?"+":",";var fn=function(m,name,format,args){if(format&&useF){args=args?","+args:"";if(format.substr(0,5)!="this."){format="fm."+format+"("}else{format="this.call(\""+format.substr(5)+"\", ";args=", values"}}else{args="";format="(values['"+name+"'] == undefined ? '' : "}return"'"+sep+format+"values['"+name+"']"+args+")"+sep+"'"};var body;if(Ext.isGecko){body="this.compiled = function(values){ return '"+this.html.replace(/\\/g,"\\\\").replace(/(\r\n|\n)/g,"\\n").replace(/'/g,"\\'").replace(this.re,fn)+"';};"}else{body=["this.compiled = function(values){ return ['"];body.push(this.html.replace(/\\/g,"\\\\").replace(/(\r\n|\n)/g,"\\n").replace(/'/g,"\\'").replace(this.re,fn));body.push("'].join('');};");body=body.join("")}eval(body);return this},call:function(C,B,A){return this[C](B,A)},insertFirst:function(B,A,C){return this.doInsert("afterBegin",B,A,C)},insertBefore:function(B,A,C){return this.doInsert("beforeBegin",B,A,C)},insertAfter:function(B,A,C){return this.doInsert("afterEnd",B,A,C)},append:function(B,A,C){return this.doInsert("beforeEnd",B,A,C)},doInsert:function(C,E,B,A){E=Ext.getDom(E);var D=Ext.DomHelper.insertHtml(C,E,this.applyTemplate(B));return A?Ext.get(D,true):D},overwrite:function(B,A,C){B=Ext.getDom(B);B.innerHTML=this.applyTemplate(A);return C?Ext.get(B.firstChild,true):B.firstChild}};Ext.Template.prototype.apply=Ext.Template.prototype.applyTemplate;Ext.DomHelper.Template=Ext.Template;Ext.Template.from=function(B,A){B=Ext.getDom(B);return new Ext.Template(B.value||B.innerHTML,A||"")};

Ext.DomQuery=function(){var cache={},simpleCache={},valueCache={};var nonSpace=/\S/;var trimRe=/^\s+|\s+$/g;var tplRe=/\{(\d+)\}/g;var modeRe=/^(\s?[\/>+~]\s?|\s|$)/;var tagTokenRe=/^(#)?([\w-\*]+)/;var nthRe=/(\d*)n\+?(\d*)/,nthRe2=/\D/;function child(p,index){var i=0;var n=p.firstChild;while(n){if(n.nodeType==1){if(++i==index){return n}}n=n.nextSibling}return null}function next(n){while((n=n.nextSibling)&&n.nodeType!=1){}return n}function prev(n){while((n=n.previousSibling)&&n.nodeType!=1){}return n}function children(d){var n=d.firstChild,ni=-1;while(n){var nx=n.nextSibling;if(n.nodeType==3&&!nonSpace.test(n.nodeValue)){d.removeChild(n)}else{n.nodeIndex=++ni}n=nx}return this}function byClassName(c,a,v){if(!v){return c}var r=[],ri=-1,cn;for(var i=0,ci;ci=c[i];i++){if((" "+ci.className+" ").indexOf(v)!=-1){r[++ri]=ci}}return r}function attrValue(n,attr){if(!n.tagName&&typeof n.length!="undefined"){n=n[0]}if(!n){return null}if(attr=="for"){return n.htmlFor}if(attr=="class"||attr=="className"){return n.className}return n.getAttribute(attr)||n[attr]}function getNodes(ns,mode,tagName){var result=[],ri=-1,cs;if(!ns){return result}tagName=tagName||"*";if(typeof ns.getElementsByTagName!="undefined"){ns=[ns]}if(!mode){for(var i=0,ni;ni=ns[i];i++){cs=ni.getElementsByTagName(tagName);for(var j=0,ci;ci=cs[j];j++){result[++ri]=ci}}}else{if(mode=="/"||mode==">"){var utag=tagName.toUpperCase();for(var i=0,ni,cn;ni=ns[i];i++){cn=ni.children||ni.childNodes;for(var j=0,cj;cj=cn[j];j++){if(cj.nodeName==utag||cj.nodeName==tagName||tagName=="*"){result[++ri]=cj}}}}else{if(mode=="+"){var utag=tagName.toUpperCase();for(var i=0,n;n=ns[i];i++){while((n=n.nextSibling)&&n.nodeType!=1){}if(n&&(n.nodeName==utag||n.nodeName==tagName||tagName=="*")){result[++ri]=n}}}else{if(mode=="~"){for(var i=0,n;n=ns[i];i++){while((n=n.nextSibling)&&(n.nodeType!=1||(tagName=="*"||n.tagName.toLowerCase()!=tagName))){}if(n){result[++ri]=n}}}}}}return result}function concat(a,b){if(b.slice){return a.concat(b)}for(var i=0,l=b.length;i<l;i++){a[a.length]=b[i]}return a}function byTag(cs,tagName){if(cs.tagName||cs==document){cs=[cs]}if(!tagName){return cs}var r=[],ri=-1;tagName=tagName.toLowerCase();for(var i=0,ci;ci=cs[i];i++){if(ci.nodeType==1&&ci.tagName.toLowerCase()==tagName){r[++ri]=ci}}return r}function byId(cs,attr,id){if(cs.tagName||cs==document){cs=[cs]}if(!id){return cs}var r=[],ri=-1;for(var i=0,ci;ci=cs[i];i++){if(ci&&ci.id==id){r[++ri]=ci;return r}}return r}function byAttribute(cs,attr,value,op,custom){var r=[],ri=-1,st=custom=="{";var f=Ext.DomQuery.operators[op];for(var i=0,ci;ci=cs[i];i++){var a;if(st){a=Ext.DomQuery.getStyle(ci,attr)}else{if(attr=="class"||attr=="className"){a=ci.className}else{if(attr=="for"){a=ci.htmlFor}else{if(attr=="href"){a=ci.getAttribute("href",2)}else{a=ci.getAttribute(attr)}}}}if((f&&f(a,value))||(!f&&a)){r[++ri]=ci}}return r}function byPseudo(cs,name,value){return Ext.DomQuery.pseudos[name](cs,value)}var isIE=window.ActiveXObject?true:false;eval("var batch = 30803;");var key=30803;function nodupIEXml(cs){var d=++key;cs[0].setAttribute("_nodup",d);var r=[cs[0]];for(var i=1,len=cs.length;i<len;i++){var c=cs[i];if(!c.getAttribute("_nodup")!=d){c.setAttribute("_nodup",d);r[r.length]=c}}for(var i=0,len=cs.length;i<len;i++){cs[i].removeAttribute("_nodup")}return r}function nodup(cs){if(!cs){return[]}var len=cs.length,c,i,r=cs,cj,ri=-1;if(!len||typeof cs.nodeType!="undefined"||len==1){return cs}if(isIE&&typeof cs[0].selectSingleNode!="undefined"){return nodupIEXml(cs)}var d=++key;cs[0]._nodup=d;for(i=1;c=cs[i];i++){if(c._nodup!=d){c._nodup=d}else{r=[];for(var j=0;j<i;j++){r[++ri]=cs[j]}for(j=i+1;cj=cs[j];j++){if(cj._nodup!=d){cj._nodup=d;r[++ri]=cj}}return r}}return r}function quickDiffIEXml(c1,c2){var d=++key;for(var i=0,len=c1.length;i<len;i++){c1[i].setAttribute("_qdiff",d)}var r=[];for(var i=0,len=c2.length;i<len;i++){if(c2[i].getAttribute("_qdiff")!=d){r[r.length]=c2[i]}}for(var i=0,len=c1.length;i<len;i++){c1[i].removeAttribute("_qdiff")}return r}function quickDiff(c1,c2){var len1=c1.length;if(!len1){return c2}if(isIE&&c1[0].selectSingleNode){return quickDiffIEXml(c1,c2)}var d=++key;for(var i=0;i<len1;i++){c1[i]._qdiff=d}var r=[];for(var i=0,len=c2.length;i<len;i++){if(c2[i]._qdiff!=d){r[r.length]=c2[i]}}return r}function quickId(ns,mode,root,id){if(ns==root){var d=root.ownerDocument||root;return d.getElementById(id)}ns=getNodes(ns,mode,"*");return byId(ns,null,id)}return{getStyle:function(el,name){return Ext.fly(el).getStyle(name)},compile:function(path,type){type=type||"select";var fn=["var f = function(root){\n var mode; ++batch; var n = root || document;\n"];var q=path,mode,lq;var tk=Ext.DomQuery.matchers;var tklen=tk.length;var mm;var lmode=q.match(modeRe);if(lmode&&lmode[1]){fn[fn.length]="mode=\""+lmode[1].replace(trimRe,"")+"\";";q=q.replace(lmode[1],"")}while(path.substr(0,1)=="/"){path=path.substr(1)}while(q&&lq!=q){lq=q;var tm=q.match(tagTokenRe);if(type=="select"){if(tm){if(tm[1]=="#"){fn[fn.length]="n = quickId(n, mode, root, \""+tm[2]+"\");"}else{fn[fn.length]="n = getNodes(n, mode, \""+tm[2]+"\");"}q=q.replace(tm[0],"")}else{if(q.substr(0,1)!="@"){fn[fn.length]="n = getNodes(n, mode, \"*\");"}}}else{if(tm){if(tm[1]=="#"){fn[fn.length]="n = byId(n, null, \""+tm[2]+"\");"}else{fn[fn.length]="n = byTag(n, \""+tm[2]+"\");"}q=q.replace(tm[0],"")}}while(!(mm=q.match(modeRe))){var matched=false;for(var j=0;j<tklen;j++){var t=tk[j];var m=q.match(t.re);if(m){fn[fn.length]=t.select.replace(tplRe,function(x,i){return m[i]});q=q.replace(m[0],"");matched=true;break}}if(!matched){throw"Error parsing selector, parsing failed at \""+q+"\""}}if(mm[1]){fn[fn.length]="mode=\""+mm[1].replace(trimRe,"")+"\";";q=q.replace(mm[1],"")}}fn[fn.length]="return nodup(n);\n}";eval(fn.join(""));return f},select:function(path,root,type){if(!root||root==document){root=document}if(typeof root=="string"){root=document.getElementById(root)}var paths=path.split(",");var results=[];for(var i=0,len=paths.length;i<len;i++){var p=paths[i].replace(trimRe,"");if(!cache[p]){cache[p]=Ext.DomQuery.compile(p);if(!cache[p]){throw p+" is not a valid selector"}}var result=cache[p](root);if(result&&result!=document){results=results.concat(result)}}if(paths.length>1){return nodup(results)}return results},selectNode:function(path,root){return Ext.DomQuery.select(path,root)[0]},selectValue:function(path,root,defaultValue){path=path.replace(trimRe,"");if(!valueCache[path]){valueCache[path]=Ext.DomQuery.compile(path,"select")}var n=valueCache[path](root);n=n[0]?n[0]:n;var v=(n&&n.firstChild?n.firstChild.nodeValue:null);return((v===null||v===undefined||v==="")?defaultValue:v)},selectNumber:function(path,root,defaultValue){var v=Ext.DomQuery.selectValue(path,root,defaultValue||0);return parseFloat(v)},is:function(el,ss){if(typeof el=="string"){el=document.getElementById(el)}var isArray=Ext.isArray(el);var result=Ext.DomQuery.filter(isArray?el:[el],ss);return isArray?(result.length==el.length):(result.length>0)},filter:function(els,ss,nonMatches){ss=ss.replace(trimRe,"");if(!simpleCache[ss]){simpleCache[ss]=Ext.DomQuery.compile(ss,"simple")}var result=simpleCache[ss](els);return nonMatches?quickDiff(result,els):result},matchers:[{re:/^\.([\w-]+)/,select:"n = byClassName(n, null, \" {1} \");"},{re:/^\:([\w-]+)(?:\(((?:[^\s>\/]*|.*?))\))?/,select:"n = byPseudo(n, \"{1}\", \"{2}\");"},{re:/^(?:([\[\{])(?:@)?([\w-]+)\s?(?:(=|.=)\s?['"]?(.*?)["']?)?[\]\}])/,select:"n = byAttribute(n, \"{2}\", \"{4}\", \"{3}\", \"{1}\");"},{re:/^#([\w-]+)/,select:"n = byId(n, null, \"{1}\");"},{re:/^@([\w-]+)/,select:"return {firstChild:{nodeValue:attrValue(n, \"{1}\")}};"}],operators:{"=":function(a,v){return a==v},"!=":function(a,v){return a!=v},"^=":function(a,v){return a&&a.substr(0,v.length)==v},"$=":function(a,v){return a&&a.substr(a.length-v.length)==v},"*=":function(a,v){return a&&a.indexOf(v)!==-1},"%=":function(a,v){return(a%v)==0},"|=":function(a,v){return a&&(a==v||a.substr(0,v.length+1)==v+"-")},"~=":function(a,v){return a&&(" "+a+" ").indexOf(" "+v+" ")!=-1}},pseudos:{"first-child":function(c){var r=[],ri=-1,n;for(var i=0,ci;ci=n=c[i];i++){while((n=n.previousSibling)&&n.nodeType!=1){}if(!n){r[++ri]=ci}}return r},"last-child":function(c){var r=[],ri=-1,n;for(var i=0,ci;ci=n=c[i];i++){while((n=n.nextSibling)&&n.nodeType!=1){}if(!n){r[++ri]=ci}}return r},"nth-child":function(c,a){var r=[],ri=-1;var m=nthRe.exec(a=="even"&&"2n"||a=="odd"&&"2n+1"||!nthRe2.test(a)&&"n+"+a||a);var f=(m[1]||1)-0,l=m[2]-0;for(var i=0,n;n=c[i];i++){var pn=n.parentNode;if(batch!=pn._batch){var j=0;for(var cn=pn.firstChild;cn;cn=cn.nextSibling){if(cn.nodeType==1){cn.nodeIndex=++j}}pn._batch=batch}if(f==1){if(l==0||n.nodeIndex==l){r[++ri]=n}}else{if((n.nodeIndex+l)%f==0){r[++ri]=n}}}return r},"only-child":function(c){var r=[],ri=-1;for(var i=0,ci;ci=c[i];i++){if(!prev(ci)&&!next(ci)){r[++ri]=ci}}return r},"empty":function(c){var r=[],ri=-1;for(var i=0,ci;ci=c[i];i++){var cns=ci.childNodes,j=0,cn,empty=true;while(cn=cns[j]){++j;if(cn.nodeType==1||cn.nodeType==3){empty=false;break}}if(empty){r[++ri]=ci}}return r},"contains":function(c,v){var r=[],ri=-1;for(var i=0,ci;ci=c[i];i++){if((ci.textContent||ci.innerText||"").indexOf(v)!=-1){r[++ri]=ci}}return r},"nodeValue":function(c,v){var r=[],ri=-1;for(var i=0,ci;ci=c[i];i++){if(ci.firstChild&&ci.firstChild.nodeValue==v){r[++ri]=ci}}return r},"checked":function(c){var r=[],ri=-1;for(var i=0,ci;ci=c[i];i++){if(ci.checked==true){r[++ri]=ci}}return r},"not":function(c,ss){return Ext.DomQuery.filter(c,ss,true)},"any":function(c,selectors){var ss=selectors.split("|");var r=[],ri=-1,s;for(var i=0,ci;ci=c[i];i++){for(var j=0;s=ss[j];j++){if(Ext.DomQuery.is(ci,s)){r[++ri]=ci;break}}}return r},"odd":function(c){return this["nth-child"](c,"odd")},"even":function(c){return this["nth-child"](c,"even")},"nth":function(c,a){return c[a-1]||[]},"first":function(c){return c[0]||[]},"last":function(c){return c[c.length-1]||[]},"has":function(c,ss){var s=Ext.DomQuery.select;var r=[],ri=-1;for(var i=0,ci;ci=c[i];i++){if(s(ss,ci).length>0){r[++ri]=ci}}return r},"next":function(c,ss){var is=Ext.DomQuery.is;var r=[],ri=-1;for(var i=0,ci;ci=c[i];i++){var n=next(ci);if(n&&is(n,ss)){r[++ri]=ci}}return r},"prev":function(c,ss){var is=Ext.DomQuery.is;var r=[],ri=-1;for(var i=0,ci;ci=c[i];i++){var n=prev(ci);if(n&&is(n,ss)){r[++ri]=ci}}return r}}}}();Ext.query=Ext.DomQuery.select;

Ext.util.Observable=function(){if(this.listeners){this.on(this.listeners);delete this.listeners}};Ext.util.Observable.prototype={fireEvent:function(){if(this.eventsSuspended!==true){var A=this.events[arguments[0].toLowerCase()];if(typeof A=="object"){return A.fire.apply(A,Array.prototype.slice.call(arguments,1))}}return true},filterOptRe:/^(?:scope|delay|buffer|single)$/,addListener:function(A,C,B,F){if(typeof A=="object"){F=A;for(var E in F){if(this.filterOptRe.test(E)){continue}if(typeof F[E]=="function"){this.addListener(E,F[E],F.scope,F)}else{this.addListener(E,F[E].fn,F[E].scope,F[E])}}return }F=(!F||typeof F=="boolean")?{}:F;A=A.toLowerCase();var D=this.events[A]||true;if(typeof D=="boolean"){D=new Ext.util.Event(this,A);this.events[A]=D}D.addListener(C,B,F)},removeListener:function(A,C,B){var D=this.events[A.toLowerCase()];if(typeof D=="object"){D.removeListener(C,B)}},purgeListeners:function(){for(var A in this.events){if(typeof this.events[A]=="object"){this.events[A].clearListeners()}}},relayEvents:function(F,D){var E=function(G){return function(){return this.fireEvent.apply(this,Ext.combine(G,Array.prototype.slice.call(arguments,0)))}};for(var C=0,A=D.length;C<A;C++){var B=D[C];if(!this.events[B]){this.events[B]=true}F.on(B,E(B),this)}},addEvents:function(D){if(!this.events){this.events={}}if(typeof D=="string"){for(var C=0,A=arguments,B;B=A[C];C++){if(!this.events[A[C]]){this.events[A[C]]=true}}}else{Ext.applyIf(this.events,D)}},hasListener:function(A){var B=this.events[A];return typeof B=="object"&&B.listeners.length>0},suspendEvents:function(){this.eventsSuspended=true},resumeEvents:function(){this.eventsSuspended=false},getMethodEvent:function(G){if(!this.methodEvents){this.methodEvents={}}var F=this.methodEvents[G];if(!F){F={};this.methodEvents[G]=F;F.originalFn=this[G];F.methodName=G;F.before=[];F.after=[];var C,B,D;var E=this;var A=function(J,I,H){if((B=J.apply(I||E,H))!==undefined){if(typeof B==="object"){if(B.returnValue!==undefined){C=B.returnValue}else{C=B}if(B.cancel===true){D=true}}else{if(B===false){D=true}else{C=B}}}};this[G]=function(){C=B=undefined;D=false;var I=Array.prototype.slice.call(arguments,0);for(var J=0,H=F.before.length;J<H;J++){A(F.before[J].fn,F.before[J].scope,I);if(D){return C}}if((B=F.originalFn.apply(E,I))!==undefined){C=B}for(var J=0,H=F.after.length;J<H;J++){A(F.after[J].fn,F.after[J].scope,I);if(D){return C}}return C}}return F},beforeMethod:function(D,B,A){var C=this.getMethodEvent(D);C.before.push({fn:B,scope:A})},afterMethod:function(D,B,A){var C=this.getMethodEvent(D);C.after.push({fn:B,scope:A})},removeMethodListener:function(F,D,C){var E=this.getMethodEvent(F);for(var B=0,A=E.before.length;B<A;B++){if(E.before[B].fn==D&&E.before[B].scope==C){E.before.splice(B,1);return }}for(var B=0,A=E.after.length;B<A;B++){if(E.after[B].fn==D&&E.after[B].scope==C){E.after.splice(B,1);return }}}};Ext.util.Observable.prototype.on=Ext.util.Observable.prototype.addListener;Ext.util.Observable.prototype.un=Ext.util.Observable.prototype.removeListener;Ext.util.Observable.capture=function(C,B,A){C.fireEvent=C.fireEvent.createInterceptor(B,A)};Ext.util.Observable.releaseCapture=function(A){A.fireEvent=Ext.util.Observable.prototype.fireEvent};(function(){var B=function(F,G,E){var D=new Ext.util.DelayedTask();return function(){D.delay(G.buffer,F,E,Array.prototype.slice.call(arguments,0))}};var C=function(F,G,E,D){return function(){G.removeListener(E,D);return F.apply(D,arguments)}};var A=function(E,F,D){return function(){var G=Array.prototype.slice.call(arguments,0);setTimeout(function(){E.apply(D,G)},F.delay||10)}};Ext.util.Event=function(E,D){this.name=D;this.obj=E;this.listeners=[]};Ext.util.Event.prototype={addListener:function(G,F,E){F=F||this.obj;if(!this.isListening(G,F)){var D=this.createListener(G,F,E);if(!this.firing){this.listeners.push(D)}else{this.listeners=this.listeners.slice(0);this.listeners.push(D)}}},createListener:function(G,F,H){H=H||{};F=F||this.obj;var D={fn:G,scope:F,options:H};var E=G;if(H.delay){E=A(E,H,F)}if(H.single){E=C(E,this,G,F)}if(H.buffer){E=B(E,H,F)}D.fireFn=E;return D},findListener:function(I,H){H=H||this.obj;var F=this.listeners;for(var G=0,D=F.length;G<D;G++){var E=F[G];if(E.fn==I&&E.scope==H){return G}}return -1},isListening:function(E,D){return this.findListener(E,D)!=-1},removeListener:function(F,E){var D;if((D=this.findListener(F,E))!=-1){if(!this.firing){this.listeners.splice(D,1)}else{this.listeners=this.listeners.slice(0);this.listeners.splice(D,1)}return true}return false},clearListeners:function(){this.listeners=[]},fire:function(){var F=this.listeners,I,D=F.length;if(D>0){this.firing=true;var G=Array.prototype.slice.call(arguments,0);for(var H=0;H<D;H++){var E=F[H];if(E.fireFn.apply(E.scope||this.obj||window,arguments)===false){this.firing=false;return false}}this.firing=false}return true}}})();

Ext.EventManager=function(){var X,Q,M=false;var N,W,H,S;var P=Ext.lib.Event;var R=Ext.lib.Dom;var A="Ex"+"t";var J={};var O=function(b,E,a,Z,Y){var d=Ext.id(b);if(!J[d]){J[d]={}}var c=J[d];if(!c[E]){c[E]=[]}var D=c[E];D.push({id:d,ename:E,fn:a,wrap:Z,scope:Y});P.on(b,E,Z);if(E=="mousewheel"&&b.addEventListener){b.addEventListener("DOMMouseScroll",Z,false);P.on(window,"unload",function(){b.removeEventListener("DOMMouseScroll",Z,false)})}if(E=="mousedown"&&b==document){Ext.EventManager.stoppedMouseDownEvent.addListener(Z)}};var I=function(Y,a,e,g){Y=Ext.getDom(Y);var D=Ext.id(Y),f=J[D],E;if(f){var c=f[a],Z;if(c){for(var b=0,d=c.length;b<d;b++){Z=c[b];if(Z.fn==e&&(!g||Z.scope==g)){E=Z.wrap;P.un(Y,a,E);c.splice(b,1);break}}}}if(a=="mousewheel"&&Y.addEventListener&&E){Y.removeEventListener("DOMMouseScroll",E,false)}if(a=="mousedown"&&Y==document&&E){Ext.EventManager.stoppedMouseDownEvent.removeListener(E)}};var F=function(a){a=Ext.getDom(a);var c=Ext.id(a),b=J[c],E;if(b){for(var Z in b){if(b.hasOwnProperty(Z)){E=b[Z];for(var Y=0,D=E.length;Y<D;Y++){P.un(a,Z,E[Y].wrap);E[Y]=null}}b[Z]=null}delete J[c]}};var C=function(){if(!M){M=Ext.isReady=true;if(Ext.isGecko||Ext.isOpera){document.removeEventListener("DOMContentLoaded",C,false)}}if(Q){clearInterval(Q);Q=null}if(X){X.fire();X.clearListeners()}};var B=function(){X=new Ext.util.Event();if(Ext.isReady){return }P.on(window,"load",C);if(Ext.isGecko||Ext.isOpera){document.addEventListener("DOMContentLoaded",C,false)}else{if(Ext.isIE){Q=setInterval(function(){try{Ext.isReady||(document.documentElement.doScroll("left"))}catch(D){return }C()},5);document.onreadystatechange=function(){if(document.readyState=="complete"){document.onreadystatechange=null;C()}}}else{if(Ext.isSafari){Q=setInterval(function(){var D=document.readyState;if(D=="complete"){C()}},10)}}}};var V=function(E,Y){var D=new Ext.util.DelayedTask(E);return function(Z){Z=new Ext.EventObjectImpl(Z);D.delay(Y.buffer,E,null,[Z])}};var T=function(a,Z,D,Y,E){return function(b){Ext.EventManager.removeListener(Z,D,Y,E);a(b)}};var G=function(D,E){return function(Y){Y=new Ext.EventObjectImpl(Y);setTimeout(function(){D(Y)},E.delay||10)}};var L=function(Y,E,D,c,b){var d=(!D||typeof D=="boolean")?{}:D;c=c||d.fn;b=b||d.scope;var a=Ext.getDom(Y);if(!a){throw"Error listening for \""+E+"\". Element \""+Y+"\" doesn't exist."}var Z=function(g){if(!window[A]){return }g=Ext.EventObject.setEvent(g);var f;if(d.delegate){f=g.getTarget(d.delegate,a);if(!f){return }}else{f=g.target}if(d.stopEvent===true){g.stopEvent()}if(d.preventDefault===true){g.preventDefault()}if(d.stopPropagation===true){g.stopPropagation()}if(d.normalized===false){g=g.browserEvent}c.call(b||a,g,f,d)};if(d.delay){Z=G(Z,d)}if(d.single){Z=T(Z,a,E,c,b)}if(d.buffer){Z=V(Z,d)}O(a,E,c,Z,b);return Z};var K=/^(?:scope|delay|buffer|single|stopEvent|preventDefault|stopPropagation|normalized|args|delegate)$/;var U={addListener:function(Y,D,a,Z,E){if(typeof D=="object"){var c=D;for(var b in c){if(K.test(b)){continue}if(typeof c[b]=="function"){L(Y,b,c,c[b],c.scope)}else{L(Y,b,c[b])}}return }return L(Y,D,E,a,Z)},removeListener:function(E,D,Z,Y){return I(E,D,Z,Y)},removeAll:function(D){return F(D)},onDocumentReady:function(Y,E,D){if(!X){B()}if(M||Ext.isReady){D||(D={});Y.defer(D.delay||0,E)}else{X.addListener(Y,E,D)}},onWindowResize:function(Y,E,D){if(!N){N=new Ext.util.Event();W=new Ext.util.DelayedTask(function(){N.fire(R.getViewWidth(),R.getViewHeight())});P.on(window,"resize",this.fireWindowResize,this)}N.addListener(Y,E,D)},fireWindowResize:function(){if(N){if((Ext.isIE||Ext.isAir)&&W){W.delay(50)}else{N.fire(R.getViewWidth(),R.getViewHeight())}}},onTextResize:function(Z,Y,D){if(!H){H=new Ext.util.Event();var E=new Ext.Element(document.createElement("div"));E.dom.className="x-text-resize";E.dom.innerHTML="X";E.appendTo(document.body);S=E.dom.offsetHeight;setInterval(function(){if(E.dom.offsetHeight!=S){H.fire(S,S=E.dom.offsetHeight)}},this.textResizeInterval)}H.addListener(Z,Y,D)},removeResizeListener:function(E,D){if(N){N.removeListener(E,D)}},fireResize:function(){if(N){N.fire(R.getViewWidth(),R.getViewHeight())}},ieDeferSrc:false,textResizeInterval:50};U.on=U.addListener;U.un=U.removeListener;U.stoppedMouseDownEvent=new Ext.util.Event();return U}();Ext.onReady=Ext.EventManager.onDocumentReady;(function(){var A=function(){var C=document.body||document.getElementsByTagName("body")[0];if(!C){return false}var B=[" ",Ext.isIE?"ext-ie "+(Ext.isIE6?"ext-ie6":"ext-ie7"):Ext.isGecko?"ext-gecko "+(Ext.isGecko2?"ext-gecko2":"ext-gecko3"):Ext.isOpera?"ext-opera":Ext.isSafari?"ext-safari":""];if(Ext.isMac){B.push("ext-mac")}if(Ext.isLinux){B.push("ext-linux")}if(Ext.isBorderBox){B.push("ext-border-box")}if(Ext.isStrict){var D=C.parentNode;if(D){D.className+=" ext-strict"}}C.className+=B.join(" ");return true};if(!A()){Ext.onReady(A)}})();Ext.EventObject=function(){var B=Ext.lib.Event;var A={3:13,63234:37,63235:39,63232:38,63233:40,63276:33,63277:34,63272:46,63273:36,63275:35};var C=Ext.isIE?{1:0,4:1,2:2}:(Ext.isSafari?{1:0,2:1,3:2}:{0:0,1:1,2:2});Ext.EventObjectImpl=function(D){if(D){this.setEvent(D.browserEvent||D)}};Ext.EventObjectImpl.prototype={browserEvent:null,button:-1,shiftKey:false,ctrlKey:false,altKey:false,BACKSPACE:8,TAB:9,NUM_CENTER:12,ENTER:13,RETURN:13,SHIFT:16,CTRL:17,CONTROL:17,ALT:18,PAUSE:19,CAPS_LOCK:20,ESC:27,SPACE:32,PAGE_UP:33,PAGEUP:33,PAGE_DOWN:34,PAGEDOWN:34,END:35,HOME:36,LEFT:37,UP:38,RIGHT:39,DOWN:40,PRINT_SCREEN:44,INSERT:45,DELETE:46,ZERO:48,ONE:49,TWO:50,THREE:51,FOUR:52,FIVE:53,SIX:54,SEVEN:55,EIGHT:56,NINE:57,A:65,B:66,C:67,D:68,E:69,F:70,G:71,H:72,I:73,J:74,K:75,L:76,M:77,N:78,O:79,P:80,Q:81,R:82,S:83,T:84,U:85,V:86,W:87,X:88,Y:89,Z:90,CONTEXT_MENU:93,NUM_ZERO:96,NUM_ONE:97,NUM_TWO:98,NUM_THREE:99,NUM_FOUR:100,NUM_FIVE:101,NUM_SIX:102,NUM_SEVEN:103,NUM_EIGHT:104,NUM_NINE:105,NUM_MULTIPLY:106,NUM_PLUS:107,NUM_MINUS:109,NUM_PERIOD:110,NUM_DIVISION:111,F1:112,F2:113,F3:114,F4:115,F5:116,F6:117,F7:118,F8:119,F9:120,F10:121,F11:122,F12:123,setEvent:function(D){if(D==this||(D&&D.browserEvent)){return D}this.browserEvent=D;if(D){this.button=D.button?C[D.button]:(D.which?D.which-1:-1);if(D.type=="click"&&this.button==-1){this.button=0}this.type=D.type;this.shiftKey=D.shiftKey;this.ctrlKey=D.ctrlKey||D.metaKey;this.altKey=D.altKey;this.keyCode=D.keyCode;this.charCode=D.charCode;this.target=B.getTarget(D);this.xy=B.getXY(D)}else{this.button=-1;this.shiftKey=false;this.ctrlKey=false;this.altKey=false;this.keyCode=0;this.charCode=0;this.target=null;this.xy=[0,0]}return this},stopEvent:function(){if(this.browserEvent){if(this.browserEvent.type=="mousedown"){Ext.EventManager.stoppedMouseDownEvent.fire(this)}B.stopEvent(this.browserEvent)}},preventDefault:function(){if(this.browserEvent){B.preventDefault(this.browserEvent)}},isNavKeyPress:function(){var D=this.keyCode;D=Ext.isSafari?(A[D]||D):D;return(D>=33&&D<=40)||D==this.RETURN||D==this.TAB||D==this.ESC},isSpecialKey:function(){var D=this.keyCode;return(this.type=="keypress"&&this.ctrlKey)||D==9||D==13||D==40||D==27||(D==16)||(D==17)||(D>=18&&D<=20)||(D>=33&&D<=35)||(D>=36&&D<=39)||(D>=44&&D<=45)},stopPropagation:function(){if(this.browserEvent){if(this.browserEvent.type=="mousedown"){Ext.EventManager.stoppedMouseDownEvent.fire(this)}B.stopPropagation(this.browserEvent)}},getCharCode:function(){return this.charCode||this.keyCode},getKey:function(){var D=this.keyCode||this.charCode;return Ext.isSafari?(A[D]||D):D},getPageX:function(){return this.xy[0]},getPageY:function(){return this.xy[1]},getTime:function(){if(this.browserEvent){return B.getTime(this.browserEvent)}return null},getXY:function(){return this.xy},getTarget:function(E,F,D){return E?Ext.fly(this.target).findParent(E,F,D):(D?Ext.get(this.target):this.target)},getRelatedTarget:function(){if(this.browserEvent){return B.getRelatedTarget(this.browserEvent)}return null},getWheelDelta:function(){var D=this.browserEvent;var E=0;if(D.wheelDelta){E=D.wheelDelta/120}else{if(D.detail){E=-D.detail/3}}return E},hasModifier:function(){return((this.ctrlKey||this.altKey)||this.shiftKey)?true:false},within:function(E,F){var D=this[F?"getRelatedTarget":"getTarget"]();return D&&Ext.fly(E).contains(D)},getPoint:function(){return new Ext.lib.Point(this.xy[0],this.xy[1])}};return new Ext.EventObjectImpl()}();

(function(){
var D=Ext.lib.Dom;var E=Ext.lib.Event;var A=Ext.lib.Anim;var propCache={};var camelRe=/(-[a-z])/gi;
var camelFn=function(m,a){return a.charAt(1).toUpperCase()};var view=document.defaultView;
Ext.Element=function(element,forceNew){var dom=typeof element=="string"?document.getElementById(element):element;if(!dom){return null}var id=dom.id;if(forceNew!==true&&id&&Ext.Element.cache[id]){return Ext.Element.cache[id]}this.dom=dom;this.id=id||Ext.id(dom)};
var El=Ext.Element;
El.prototype={originalDisplay:"",visibilityMode:1,defaultUnit:"px",setVisibilityMode:function(visMode){this.visibilityMode=visMode;return this},enableDisplayMode:function(display){this.setVisibilityMode(El.DISPLAY);if(typeof display!="undefined"){this.originalDisplay=display}return this},findParent:function(simpleSelector,maxDepth,returnEl){var p=this.dom,b=document.body,depth=0,dq=Ext.DomQuery,stopEl;maxDepth=maxDepth||50;if(typeof maxDepth!="number"){stopEl=Ext.getDom(maxDepth);maxDepth=10}while(p&&p.nodeType==1&&depth<maxDepth&&p!=b&&p!=stopEl){if(dq.is(p,simpleSelector)){return returnEl?Ext.get(p):p}depth++;p=p.parentNode}return null},findParentNode:function(simpleSelector,maxDepth,returnEl){var p=Ext.fly(this.dom.parentNode,"_internal");return p?p.findParent(simpleSelector,maxDepth,returnEl):null},up:function(simpleSelector,maxDepth){return this.findParentNode(simpleSelector,maxDepth,true)},is:function(simpleSelector){return Ext.DomQuery.is(this.dom,simpleSelector)},animate:function(args,duration,onComplete,easing,animType){this.anim(args,{duration:duration,callback:onComplete,easing:easing},animType);return this},anim:function(args,opt,animType,defaultDur,defaultEase,cb){animType=animType||"run";opt=opt||{};var anim=Ext.lib.Anim[animType](this.dom,args,(opt.duration||defaultDur)||0.35,(opt.easing||defaultEase)||"easeOut",function(){Ext.callback(cb,this);Ext.callback(opt.callback,opt.scope||this,[this,opt])},this);opt.anim=anim;return anim},preanim:function(a,i){return !a[i]?false:(typeof a[i]=="object"?a[i]:{duration:a[i+1],callback:a[i+2],easing:a[i+3]})},clean:function(forceReclean){if(this.isCleaned&&forceReclean!==true){return this}var ns=/\S/;var d=this.dom,n=d.firstChild,ni=-1;while(n){var nx=n.nextSibling;if(n.nodeType==3&&!ns.test(n.nodeValue)){d.removeChild(n)}else{n.nodeIndex=++ni}n=nx}this.isCleaned=true;return this},
scrollIntoView:function(container,hscroll){var c=Ext.getDom(container)||Ext.getBody().dom;var el=this.dom;var o=this.getOffsetsTo(c),l=o[0]+c.scrollLeft,t=o[1]+c.scrollTop,b=t+el.offsetHeight,r=l+el.offsetWidth;var ch=c.clientHeight;var ct=parseInt(c.scrollTop,10);var cl=parseInt(c.scrollLeft,10);var cb=ct+ch;var cr=cl+c.clientWidth;if(el.offsetHeight>ch||t<ct){c.scrollTop=t}else{if(b>cb){c.scrollTop=b-ch}}c.scrollTop=c.scrollTop;if(hscroll!==false){if(el.offsetWidth>c.clientWidth||l<cl){c.scrollLeft=l}else{if(r>cr){c.scrollLeft=r-c.clientWidth}}c.scrollLeft=c.scrollLeft}return this},
scrollChildIntoView:function(child,hscroll){Ext.fly(child,"_scrollChildIntoView").scrollIntoView(this,hscroll)},
autoHeight:function(animate,duration,onComplete,easing){var oldHeight=this.getHeight();this.clip();this.setHeight(1);setTimeout(function(){var height=parseInt(this.dom.scrollHeight,10);if(!animate){this.setHeight(height);this.unclip();if(typeof onComplete=="function"){onComplete()}}else{this.setHeight(oldHeight);this.setHeight(height,animate,duration,function(){this.unclip();if(typeof onComplete=="function"){onComplete()}}.createDelegate(this),easing)}}.createDelegate(this),0);return this},
contains:function(el){
	if(!el){
		return false
	}
	try {
		var dd = el.dom ? el.dom : el;
	} catch (e) {
		var dd = el;
	}
	return D.isAncestor(this.dom, dd)
},
isVisible:function(deep){var vis=!(this.getStyle("visibility")=="hidden"||this.getStyle("display")=="none");if(deep!==true||!vis){return vis}var p=this.dom.parentNode;while(p&&p.tagName.toLowerCase()!="body"){if(!Ext.fly(p,"_isVisible").isVisible()){return false}p=p.parentNode}return true},select:function(selector,unique){return El.select(selector,unique,this.dom)},query:function(selector){return Ext.DomQuery.select(selector,this.dom)},child:function(selector,returnDom){var n=Ext.DomQuery.selectNode(selector,this.dom);return returnDom?n:Ext.get(n)},down:function(selector,returnDom){var n=Ext.DomQuery.selectNode(" > "+selector,this.dom);return returnDom?n:Ext.get(n)},initDD:function(group,config,overrides){var dd=new Ext.dd.DD(Ext.id(this.dom),group,config);return Ext.apply(dd,overrides)},initDDProxy:function(group,config,overrides){var dd=new Ext.dd.DDProxy(Ext.id(this.dom),group,config);return Ext.apply(dd,overrides)},initDDTarget:function(group,config,overrides){var dd=new Ext.dd.DDTarget(Ext.id(this.dom),group,config);return Ext.apply(dd,overrides)},setVisible:function(visible,animate){if(!animate||!A){if(this.visibilityMode==El.DISPLAY){this.setDisplayed(visible)}else{this.fixDisplay();this.dom.style.visibility=visible?"visible":"hidden"}}else{var dom=this.dom;var visMode=this.visibilityMode;if(visible){this.setOpacity(0.01);this.setVisible(true)}this.anim({opacity:{to:(visible?1:0)}},this.preanim(arguments,1),null,0.35,"easeIn",function(){if(!visible){if(visMode==El.DISPLAY){dom.style.display="none"}else{dom.style.visibility="hidden"}Ext.get(dom).setOpacity(1)}})}return this},isDisplayed:function(){return this.getStyle("display")!="none"},toggle:function(animate){this.setVisible(!this.isVisible(),this.preanim(arguments,0));return this},setDisplayed:function(value){if(typeof value=="boolean"){value=value?this.originalDisplay:"none"}this.setStyle("display",value);return this},focus:function(){try{this.dom.focus()}catch(e){}return this},blur:function(){try{this.dom.blur()}catch(e){}return this},addClass:function(className){if(Ext.isArray(className)){for(var i=0,len=className.length;i<len;i++){this.addClass(className[i])}}else{if(className&&!this.hasClass(className)){this.dom.className=this.dom.className+" "+className}}return this},radioClass:function(className){var siblings=this.dom.parentNode.childNodes;for(var i=0;i<siblings.length;i++){var s=siblings[i];if(s.nodeType==1){Ext.get(s).removeClass(className)}}this.addClass(className);return this},removeClass:function(className){if(!className||!this.dom.className){return this}if(Ext.isArray(className)){for(var i=0,len=className.length;i<len;i++){this.removeClass(className[i])}}else{if(this.hasClass(className)){var re=this.classReCache[className];if(!re){re=new RegExp("(?:^|\\s+)"+className+"(?:\\s+|$)","g");this.classReCache[className]=re}this.dom.className=this.dom.className.replace(re," ")}}return this},classReCache:{},toggleClass:function(className){if(this.hasClass(className)){this.removeClass(className)}else{this.addClass(className)}return this},hasClass:function(className){return className&&(" "+this.dom.className+" ").indexOf(" "+className+" ")!=-1},replaceClass:function(oldClassName,newClassName){this.removeClass(oldClassName);this.addClass(newClassName);return this},getStyles:function(){var a=arguments,len=a.length,r={};for(var i=0;i<len;i++){r[a[i]]=this.getStyle(a[i])}return r},getStyle:function(){return view&&view.getComputedStyle?function(prop){var el=this.dom,v,cs,camel;if(prop=="float"){prop="cssFloat"}if(v=el.style[prop]){return v}if(cs=view.getComputedStyle(el,"")){if(!(camel=propCache[prop])){camel=propCache[prop]=prop.replace(camelRe,camelFn)}return cs[camel]}return null}:function(prop){var el=this.dom,v,cs,camel;if(prop=="opacity"){if(typeof el.style.filter=="string"){var m=el.style.filter.match(/alpha\(opacity=(.*)\)/i);if(m){var fv=parseFloat(m[1]);if(!isNaN(fv)){return fv?fv/100:0}}}return 1}else{if(prop=="float"){prop="styleFloat"}}if(!(camel=propCache[prop])){camel=propCache[prop]=prop.replace(camelRe,camelFn)}if(v=el.style[camel]){return v}if(cs=el.currentStyle){return cs[camel]}return null}}(),setStyle:function(prop,value){if(typeof prop=="string"){var camel;if(!(camel=propCache[prop])){camel=propCache[prop]=prop.replace(camelRe,camelFn)}if(camel=="opacity"){this.setOpacity(value)}else{this.dom.style[camel]=value}}else{for(var style in prop){if(typeof prop[style]!="function"){this.setStyle(style,prop[style])}}}return this},applyStyles:function(style){Ext.DomHelper.applyStyles(this.dom,style);return this},getX:function(){return D.getX(this.dom)},getY:function(){return D.getY(this.dom)},getXY:function(){return D.getXY(this.dom)},getOffsetsTo:function(el){var o=this.getXY();var e=Ext.fly(el,"_internal").getXY();return[o[0]-e[0],o[1]-e[1]]},setX:function(x,animate){if(!animate||!A){D.setX(this.dom,x)}else{this.setXY([x,this.getY()],this.preanim(arguments,1))}return this},setY:function(y,animate){if(!animate||!A){D.setY(this.dom,y)}else{this.setXY([this.getX(),y],this.preanim(arguments,1))}return this},setLeft:function(left){this.setStyle("left",this.addUnits(left));return this},setTop:function(top){this.setStyle("top",this.addUnits(top));return this},setRight:function(right){this.setStyle("right",this.addUnits(right));return this},setBottom:function(bottom){this.setStyle("bottom",this.addUnits(bottom));return this},setXY:function(pos,animate){if(!animate||!A){D.setXY(this.dom,pos)}else{this.anim({points:{to:pos}},this.preanim(arguments,1),"motion")}return this},setLocation:function(x,y,animate){this.setXY([x,y],this.preanim(arguments,2));return this},moveTo:function(x,y,animate){this.setXY([x,y],this.preanim(arguments,2));return this},getRegion:function(){return D.getRegion(this.dom)},getHeight:function(contentHeight){var h=this.dom.offsetHeight||0;h=contentHeight!==true?h:h-this.getBorderWidth("tb")-this.getPadding("tb");return h<0?0:h},getWidth:function(contentWidth){var w=this.dom.offsetWidth||0;w=contentWidth!==true?w:w-this.getBorderWidth("lr")-this.getPadding("lr");return w<0?0:w},getComputedHeight:function(){var h=Math.max(this.dom.offsetHeight,this.dom.clientHeight);if(!h){h=parseInt(this.getStyle("height"),10)||0;if(!this.isBorderBox()){h+=this.getFrameWidth("tb")}}return h},getComputedWidth:function(){var w=Math.max(this.dom.offsetWidth,this.dom.clientWidth);if(!w){w=parseInt(this.getStyle("width"),10)||0;if(!this.isBorderBox()){w+=this.getFrameWidth("lr")}}return w},getSize:function(contentSize){return{width:this.getWidth(contentSize),height:this.getHeight(contentSize)}},getStyleSize:function(){var w,h,d=this.dom,s=d.style;if(s.width&&s.width!="auto"){w=parseInt(s.width,10);if(Ext.isBorderBox){w-=this.getFrameWidth("lr")}}if(s.height&&s.height!="auto"){h=parseInt(s.height,10);if(Ext.isBorderBox){h-=this.getFrameWidth("tb")}}return{width:w||this.getWidth(true),height:h||this.getHeight(true)}},getViewSize:function(){var d=this.dom,doc=document,aw=0,ah=0;if(d==doc||d==doc.body){return{width:D.getViewWidth(),height:D.getViewHeight()}}else{return{width:d.clientWidth,height:d.clientHeight}}},getValue:function(asNumber){return asNumber?parseInt(this.dom.value,10):this.dom.value},
adjustWidth:function(width){if(typeof width=="number"){if(this.autoBoxAdjust&&!this.isBorderBox()){width-=(this.getBorderWidth("lr")+this.getPadding("lr"))}if(width<0){width=0}}return width},
adjustHeight:function(height){if(typeof height=="number"){if(this.autoBoxAdjust&&!this.isBorderBox()){height-=(this.getBorderWidth("tb")+this.getPadding("tb"))}if(height<0){height=0}}return height},
setWidth:function(width,animate){width=this.adjustWidth(width);if(!animate||!A){this.dom.style.width=this.addUnits(width)}else{this.anim({width:{to:width}},this.preanim(arguments,1))}return this},
setHeight:function(height,animate){height=this.adjustHeight(height);if(!animate||!A){this.dom.style.height=this.addUnits(height)}else{this.anim({height:{to:height}},this.preanim(arguments,1))}return this},
setSize:function(width,height,animate){if(typeof width=="object"){height=width.height;width=width.width}width=this.adjustWidth(width);height=this.adjustHeight(height);if(!animate||!A){this.dom.style.width=this.addUnits(width);this.dom.style.height=this.addUnits(height)}else{this.anim({width:{to:width},height:{to:height}},this.preanim(arguments,2))}return this},setBounds:function(x,y,width,height,animate){if(!animate||!A){this.setSize(width,height);this.setLocation(x,y)}else{width=this.adjustWidth(width);height=this.adjustHeight(height);this.anim({points:{to:[x,y]},width:{to:width},height:{to:height}},this.preanim(arguments,4),"motion")}return this},setRegion:function(region,animate){this.setBounds(region.left,region.top,region.right-region.left,region.bottom-region.top,this.preanim(arguments,1));return this},addListener:function(eventName,fn,scope,options){Ext.EventManager.on(this.dom,eventName,fn,scope||this,options)},removeListener:function(eventName,fn,scope){Ext.EventManager.removeListener(this.dom,eventName,fn,scope||this);return this},removeAllListeners:function(){Ext.EventManager.removeAll(this.dom);return this},relayEvent:function(eventName,observable){this.on(eventName,function(e){observable.fireEvent(eventName,e)})},setOpacity:function(opacity,animate){if(!animate||!A){var s=this.dom.style;if(Ext.isIE){s.zoom=1;s.filter=(s.filter||"").replace(/alpha\([^\)]*\)/gi,"")+(opacity==1?"":" alpha(opacity="+opacity*100+")")}else{s.opacity=opacity}}else{this.anim({opacity:{to:opacity}},this.preanim(arguments,1),null,0.35,"easeIn")}return this},getLeft:function(local){if(!local){return this.getX()}else{return parseInt(this.getStyle("left"),10)||0}},getRight:function(local){if(!local){return this.getX()+this.getWidth()}else{return(this.getLeft(true)+this.getWidth())||0}},getTop:function(local){if(!local){return this.getY()}else{return parseInt(this.getStyle("top"),10)||0}},getBottom:function(local){if(!local){return this.getY()+this.getHeight()}else{return(this.getTop(true)+this.getHeight())||0}},position:function(pos,zIndex,x,y){if(!pos){if(this.getStyle("position")=="static"){this.setStyle("position","relative")}}else{this.setStyle("position",pos)}if(zIndex){this.setStyle("z-index",zIndex)}if(x!==undefined&&y!==undefined){this.setXY([x,y])}else{if(x!==undefined){this.setX(x)}else{if(y!==undefined){this.setY(y)}}}},clearPositioning:function(value){value=value||"";this.setStyle({"left":value,"right":value,"top":value,"bottom":value,"z-index":"","position":"static"});return this},getPositioning:function(){var l=this.getStyle("left");var t=this.getStyle("top");return{"position":this.getStyle("position"),"left":l,"right":l?"":this.getStyle("right"),"top":t,"bottom":t?"":this.getStyle("bottom"),"z-index":this.getStyle("z-index")}},getBorderWidth:function(side){return this.addStyles(side,El.borders)},getPadding:function(side){return this.addStyles(side,El.paddings)},
setPositioning:function(pc){this.applyStyles(pc);if(pc.right=="auto"){this.dom.style.right=""}if(pc.bottom=="auto"){this.dom.style.bottom=""}return this},fixDisplay:function(){if(this.getStyle("display")=="none"){this.setStyle("visibility","hidden");this.setStyle("display",this.originalDisplay);if(this.getStyle("display")=="none"){this.setStyle("display","block")}}},setOverflow:function(v){if(v=="auto"&&Ext.isMac&&Ext.isGecko2){this.dom.style.overflow="hidden";(function(){this.dom.style.overflow="auto"}).defer(1,this)}else{this.dom.style.overflow=v}},setLeftTop:function(left,top){this.dom.style.left=this.addUnits(left);this.dom.style.top=this.addUnits(top);return this},move:function(direction,distance,animate){var xy=this.getXY();direction=direction.toLowerCase();switch(direction){case"l":case"left":this.moveTo(xy[0]-distance,xy[1],this.preanim(arguments,2));break;case"r":case"right":this.moveTo(xy[0]+distance,xy[1],this.preanim(arguments,2));break;case"t":case"top":case"up":this.moveTo(xy[0],xy[1]-distance,this.preanim(arguments,2));break;case"b":case"bottom":case"down":this.moveTo(xy[0],xy[1]+distance,this.preanim(arguments,2));break}return this},clip:function(){if(!this.isClipped){this.isClipped=true;this.originalClip={"o":this.getStyle("overflow"),"x":this.getStyle("overflow-x"),"y":this.getStyle("overflow-y")};this.setStyle("overflow","hidden");this.setStyle("overflow-x","hidden");this.setStyle("overflow-y","hidden")}return this},unclip:function(){if(this.isClipped){this.isClipped=false;var o=this.originalClip;if(o.o){this.setStyle("overflow",o.o)}if(o.x){this.setStyle("overflow-x",o.x)}if(o.y){this.setStyle("overflow-y",o.y)}}return this},getAnchorXY:function(anchor,local,s){var w,h,vp=false;if(!s){var d=this.dom;if(d==document.body||d==document){vp=true;w=D.getViewWidth();h=D.getViewHeight()}else{w=this.getWidth();h=this.getHeight()}}else{w=s.width;h=s.height}var x=0,y=0,r=Math.round;switch((anchor||"tl").toLowerCase()){case"c":x=r(w*0.5);y=r(h*0.5);break;case"t":x=r(w*0.5);y=0;break;case"l":x=0;y=r(h*0.5);break;case"r":x=w;y=r(h*0.5);break;case"b":x=r(w*0.5);y=h;break;case"tl":x=0;y=0;break;case"bl":x=0;y=h;break;case"br":x=w;y=h;break;case"tr":x=w;y=0;break}if(local===true){return[x,y]}if(vp){var sc=this.getScroll();return[x+sc.left,y+sc.top]}var o=this.getXY();return[x+o[0],y+o[1]]},getAlignToXY:function(el,p,o){el=Ext.get(el);if(!el||!el.dom){throw"Element.alignToXY with an element that doesn't exist"}var d=this.dom;var c=false;var p1="",p2="";o=o||[0,0];if(!p){p="tl-bl"}else{if(p=="?"){p="tl-bl?"}else{if(p.indexOf("-")==-1){p="tl-"+p}}}p=p.toLowerCase();var m=p.match(/^([a-z]+)-([a-z]+)(\?)?$/);if(!m){throw"Element.alignTo with an invalid alignment "+p}p1=m[1];p2=m[2];c=!!m[3];var a1=this.getAnchorXY(p1,true);var a2=el.getAnchorXY(p2,false);var x=a2[0]-a1[0]+o[0];var y=a2[1]-a1[1]+o[1];if(c){var w=this.getWidth(),h=this.getHeight(),r=el.getRegion();var dw=D.getViewWidth()-5,dh=D.getViewHeight()-5;var p1y=p1.charAt(0),p1x=p1.charAt(p1.length-1);var p2y=p2.charAt(0),p2x=p2.charAt(p2.length-1);var swapY=((p1y=="t"&&p2y=="b")||(p1y=="b"&&p2y=="t"));var swapX=((p1x=="r"&&p2x=="l")||(p1x=="l"&&p2x=="r"));var doc=document;var scrollX=(doc.documentElement.scrollLeft||doc.body.scrollLeft||0)+5;var scrollY=(doc.documentElement.scrollTop||doc.body.scrollTop||0)+5;if((x+w)>dw+scrollX){x=swapX?r.left-w:dw+scrollX-w}if(x<scrollX){x=swapX?r.right:scrollX}if((y+h)>dh+scrollY){y=swapY?r.top-h:dh+scrollY-h}if(y<scrollY){y=swapY?r.bottom:scrollY}}return[x,y]},getConstrainToXY:function(){var os={top:0,left:0,bottom:0,right:0};return function(el,local,offsets,proposedXY){el=Ext.get(el);offsets=offsets?Ext.applyIf(offsets,os):os;var vw,vh,vx=0,vy=0;if(el.dom==document.body||el.dom==document){vw=Ext.lib.Dom.getViewWidth();vh=Ext.lib.Dom.getViewHeight()}else{vw=el.dom.clientWidth;vh=el.dom.clientHeight;if(!local){var vxy=el.getXY();vx=vxy[0];vy=vxy[1]}}var s=el.getScroll();vx+=offsets.left+s.left;vy+=offsets.top+s.top;vw-=offsets.right;vh-=offsets.bottom;var vr=vx+vw;var vb=vy+vh;var xy=proposedXY||(!local?this.getXY():[this.getLeft(true),this.getTop(true)]);var x=xy[0],y=xy[1];var w=this.dom.offsetWidth,h=this.dom.offsetHeight;var moved=false;if((x+w)>vr){x=vr-w;moved=true}if((y+h)>vb){y=vb-h;moved=true}if(x<vx){x=vx;moved=true}if(y<vy){y=vy;moved=true}return moved?[x,y]:false}}(),adjustForConstraints:function(xy,parent,offsets){return this.getConstrainToXY(parent||document,false,offsets,xy)||xy},alignTo:function(element,position,offsets,animate){var xy=this.getAlignToXY(element,position,offsets);this.setXY(xy,this.preanim(arguments,3));return this},anchorTo:function(el,alignment,offsets,animate,monitorScroll,callback){var action=function(){this.alignTo(el,alignment,offsets,animate);Ext.callback(callback,this)};Ext.EventManager.onWindowResize(action,this);var tm=typeof monitorScroll;if(tm!="undefined"){Ext.EventManager.on(window,"scroll",action,this,{buffer:tm=="number"?monitorScroll:50})}action.call(this);return this},clearOpacity:function(){if(window.ActiveXObject){if(typeof this.dom.style.filter=="string"&&(/alpha/i).test(this.dom.style.filter)){this.dom.style.filter=""}}else{this.dom.style.opacity="";this.dom.style["-moz-opacity"]="";this.dom.style["-khtml-opacity"]=""}return this},hide:function(animate){this.setVisible(false,this.preanim(arguments,0));return this},show:function(animate){this.setVisible(true,this.preanim(arguments,0));return this},addUnits:function(size){return Ext.Element.addUnits(size,this.defaultUnit)},update:function(html,loadScripts,callback){if(typeof html=="undefined"){html=""}if(loadScripts!==true){this.dom.innerHTML=html;if(typeof callback=="function"){callback()}return this}var id=Ext.id();var dom=this.dom;html+="<span id=\""+id+"\"></span>";E.onAvailable(id,function(){var hd=document.getElementsByTagName("head")[0];var re=/(?:<script([^>]*)?>)((\n|\r|.)*?)(?:<\/script>)/ig;var srcRe=/\ssrc=([\'\"])(.*?)\1/i;var typeRe=/\stype=([\'\"])(.*?)\1/i;var match;while(match=re.exec(html)){var attrs=match[1];var srcMatch=attrs?attrs.match(srcRe):false;if(srcMatch&&srcMatch[2]){var s=document.createElement("script");s.src=srcMatch[2];var typeMatch=attrs.match(typeRe);if(typeMatch&&typeMatch[2]){s.type=typeMatch[2]}hd.appendChild(s)}else{if(match[2]&&match[2].length>0){if(window.execScript){window.execScript(match[2])}else{window.eval(match[2])}}}}var el=document.getElementById(id);if(el){Ext.removeNode(el)}if(typeof callback=="function"){callback()}});dom.innerHTML=html.replace(/(?:<script.*?>)((\n|\r|.)*?)(?:<\/script>)/ig,"");return this},load:function(){var um=this.getUpdater();um.update.apply(um,arguments);return this},getUpdater:function(){if(!this.updateManager){this.updateManager=new Ext.Updater(this)}return this.updateManager},unselectable:function(){this.dom.unselectable="on";this.swallowEvent("selectstart",true);this.applyStyles("-moz-user-select:none;-khtml-user-select:none;");this.addClass("x-unselectable");return this},getCenterXY:function(){return this.getAlignToXY(document,"c-c")},center:function(centerIn){this.alignTo(centerIn||document,"c-c");return this},isBorderBox:function(){return noBoxAdjust[this.dom.tagName.toLowerCase()]||Ext.isBorderBox},getBox:function(contentBox,local){var xy;if(!local){xy=this.getXY()}else{var left=parseInt(this.getStyle("left"),10)||0;var top=parseInt(this.getStyle("top"),10)||0;xy=[left,top]}var el=this.dom,w=el.offsetWidth,h=el.offsetHeight,bx;if(!contentBox){bx={x:xy[0],y:xy[1],0:xy[0],1:xy[1],width:w,height:h}}else{var l=this.getBorderWidth("l")+this.getPadding("l");var r=this.getBorderWidth("r")+this.getPadding("r");var t=this.getBorderWidth("t")+this.getPadding("t");var b=this.getBorderWidth("b")+this.getPadding("b");bx={x:xy[0]+l,y:xy[1]+t,0:xy[0]+l,1:xy[1]+t,width:w-(l+r),height:h-(t+b)}}bx.right=bx.x+bx.width;bx.bottom=bx.y+bx.height;return bx},getFrameWidth:function(sides,onlyContentBox){return onlyContentBox&&Ext.isBorderBox?0:(this.getPadding(sides)+this.getBorderWidth(sides))},setBox:function(box,adjust,animate){var w=box.width,h=box.height;if((adjust&&!this.autoBoxAdjust)&&!this.isBorderBox()){w-=(this.getBorderWidth("lr")+this.getPadding("lr"));h-=(this.getBorderWidth("tb")+this.getPadding("tb"))}this.setBounds(box.x,box.y,w,h,this.preanim(arguments,2));return this},repaint:function(){var dom=this.dom;this.addClass("x-repaint");setTimeout(function(){Ext.get(dom).removeClass("x-repaint")},1);return this},getMargins:function(side){if(!side){return{top:parseInt(this.getStyle("margin-top"),10)||0,left:parseInt(this.getStyle("margin-left"),10)||0,bottom:parseInt(this.getStyle("margin-bottom"),10)||0,right:parseInt(this.getStyle("margin-right"),10)||0}}else{return this.addStyles(side,El.margins)}},addStyles:function(sides,styles){var val=0,v,w;for(var i=0,len=sides.length;i<len;i++){v=this.getStyle(styles[sides.charAt(i)]);if(v){w=parseInt(v,10);if(w){val+=(w>=0?w:-1*w)}}}return val},createProxy:function(config,renderTo,matchBox){config=typeof config=="object"?config:{tag:"div",cls:config};var proxy;if(renderTo){proxy=Ext.DomHelper.append(renderTo,config,true)}else{proxy=Ext.DomHelper.insertBefore(this.dom,config,true)}if(matchBox){proxy.setBox(this.getBox())}return proxy},mask:function(msg,msgCls){if(this.getStyle("position")=="static"){this.setStyle("position","relative")}if(this._maskMsg){this._maskMsg.remove()}if(this._mask){this._mask.remove()}this._mask=Ext.DomHelper.append(this.dom,{cls:"ext-el-mask"},true);this.addClass("x-masked");this._mask.setDisplayed(true);if(typeof msg=="string"){this._maskMsg=Ext.DomHelper.append(this.dom,{cls:"ext-el-mask-msg",cn:{tag:"div"}},true);var mm=this._maskMsg;mm.dom.className=msgCls?"ext-el-mask-msg "+msgCls:"ext-el-mask-msg";mm.dom.firstChild.innerHTML=msg;mm.setDisplayed(true);mm.center(this)}if(Ext.isIE&&!(Ext.isIE7&&Ext.isStrict)&&this.getStyle("height")=="auto"){this._mask.setSize(this.dom.clientWidth,this.getHeight())}return this._mask},unmask:function(){if(this._mask){if(this._maskMsg){this._maskMsg.remove();delete this._maskMsg}this._mask.remove();delete this._mask}this.removeClass("x-masked")},isMasked:function(){return this._mask&&this._mask.isVisible()},createShim:function(){var el=document.createElement("iframe");el.frameBorder="0";el.className="ext-shim";if(Ext.isIE&&Ext.isSecure){el.src=Ext.SSL_SECURE_URL}var shim=Ext.get(this.dom.parentNode.insertBefore(el,this.dom));shim.autoBoxAdjust=false;return shim},remove:function(){Ext.removeNode(this.dom);delete El.cache[this.dom.id]},hover:function(overFn,outFn,scope){var preOverFn=function(e){if(!e.within(this,true)){overFn.apply(scope||this,arguments)}};var preOutFn=function(e){if(!e.within(this,true)){outFn.apply(scope||this,arguments)}};this.on("mouseover",preOverFn,this.dom);this.on("mouseout",preOutFn,this.dom);return this},addClassOnOver:function(className){this.hover(function(){Ext.fly(this,"_internal").addClass(className)},function(){Ext.fly(this,"_internal").removeClass(className)});return this},addClassOnFocus:function(className){this.on("focus",function(){Ext.fly(this,"_internal").addClass(className)},this.dom);this.on("blur",function(){Ext.fly(this,"_internal").removeClass(className)},this.dom);return this},addClassOnClick:function(className){var dom=this.dom;this.on("mousedown",function(){Ext.fly(dom,"_internal").addClass(className);var d=Ext.getDoc();var fn=function(){Ext.fly(dom,"_internal").removeClass(className);d.removeListener("mouseup",fn)};d.on("mouseup",fn)});return this},swallowEvent:function(eventName,preventDefault){var fn=function(e){e.stopPropagation();if(preventDefault){e.preventDefault()}};if(Ext.isArray(eventName)){for(var i=0,len=eventName.length;i<len;i++){this.on(eventName[i],fn)}return this}this.on(eventName,fn);return this},parent:function(selector,returnDom){return this.matchNode("parentNode","parentNode",selector,returnDom)},next:function(selector,returnDom){return this.matchNode("nextSibling","nextSibling",selector,returnDom)},prev:function(selector,returnDom){return this.matchNode("previousSibling","previousSibling",selector,returnDom)},first:function(selector,returnDom){return this.matchNode("nextSibling","firstChild",selector,returnDom)},last:function(selector,returnDom){return this.matchNode("previousSibling","lastChild",selector,returnDom)},matchNode:function(dir,start,selector,returnDom){var n=this.dom[start];while(n){if(n.nodeType==1&&(!selector||Ext.DomQuery.is(n,selector))){return !returnDom?Ext.get(n):n}n=n[dir]}return null},appendChild:function(el){el=Ext.get(el);el.appendTo(this);return this},createChild:function(config,insertBefore,returnDom){config=config||{tag:"div"};if(insertBefore){return Ext.DomHelper.insertBefore(insertBefore,config,returnDom!==true)}return Ext.DomHelper[!this.dom.firstChild?"overwrite":"append"](this.dom,config,returnDom!==true)},appendTo:function(el){el=Ext.getDom(el);el.appendChild(this.dom);return this},insertBefore:function(el){el=Ext.getDom(el);el.parentNode.insertBefore(this.dom,el);return this},insertAfter:function(el){el=Ext.getDom(el);el.parentNode.insertBefore(this.dom,el.nextSibling);return this},insertFirst:function(el,returnDom){el=el||{};if(typeof el=="object"&&!el.nodeType&&!el.dom){return this.createChild(el,this.dom.firstChild,returnDom)}else{el=Ext.getDom(el);this.dom.insertBefore(el,this.dom.firstChild);return !returnDom?Ext.get(el):el}},insertSibling:function(el,where,returnDom){var rt;if(Ext.isArray(el)){for(var i=0,len=el.length;i<len;i++){rt=this.insertSibling(el[i],where,returnDom)}return rt}where=where?where.toLowerCase():"before";el=el||{};var refNode=where=="before"?this.dom:this.dom.nextSibling;if(typeof el=="object"&&!el.nodeType&&!el.dom){if(where=="after"&&!this.dom.nextSibling){rt=Ext.DomHelper.append(this.dom.parentNode,el,!returnDom)}else{rt=Ext.DomHelper[where=="after"?"insertAfter":"insertBefore"](this.dom,el,!returnDom)}}else{rt=this.dom.parentNode.insertBefore(Ext.getDom(el),refNode);if(!returnDom){rt=Ext.get(rt)}}return rt},wrap:function(config,returnDom){if(!config){config={tag:"div"}}var newEl=Ext.DomHelper.insertBefore(this.dom,config,!returnDom);newEl.dom?newEl.dom.appendChild(this.dom):newEl.appendChild(this.dom);return newEl},replace:function(el){el=Ext.get(el);this.insertBefore(el);el.remove();return this},replaceWith:function(el){if(typeof el=="object"&&!el.nodeType&&!el.dom){el=this.insertSibling(el,"before")}else{el=Ext.getDom(el);this.dom.parentNode.insertBefore(el,this.dom)}El.uncache(this.id);this.dom.parentNode.removeChild(this.dom);this.dom=el;this.id=Ext.id(el);El.cache[this.id]=this;return this},insertHtml:function(where,html,returnEl){var el=Ext.DomHelper.insertHtml(where,this.dom,html);return returnEl?Ext.get(el):el},set:function(o,useSet){var el=this.dom;useSet=typeof useSet=="undefined"?(el.setAttribute?true:false):useSet;for(var attr in o){if(attr=="style"||typeof o[attr]=="function"){continue}if(attr=="cls"){el.className=o["cls"]}else{if(o.hasOwnProperty(attr)){if(useSet){el.setAttribute(attr,o[attr])}else{el[attr]=o[attr]}}}}if(o.style){Ext.DomHelper.applyStyles(el,o.style)}return this},addKeyListener:function(key,fn,scope){var config;if(typeof key!="object"||Ext.isArray(key)){config={key:key,fn:fn,scope:scope}}else{config={key:key.key,shift:key.shift,ctrl:key.ctrl,alt:key.alt,fn:fn,scope:scope}}return new Ext.KeyMap(this,config)},addKeyMap:function(config){return new Ext.KeyMap(this,config)},isScrollable:function(){var dom=this.dom;return dom.scrollHeight>dom.clientHeight||dom.scrollWidth>dom.clientWidth},scrollTo:function(side,value,animate){var prop=side.toLowerCase()=="left"?"scrollLeft":"scrollTop";if(!animate||!A){this.dom[prop]=value}else{var to=prop=="scrollLeft"?[value,this.dom.scrollTop]:[this.dom.scrollLeft,value];this.anim({scroll:{"to":to}},this.preanim(arguments,2),"scroll")}return this},scroll:function(direction,distance,animate){if(!this.isScrollable()){return }var el=this.dom;var l=el.scrollLeft,t=el.scrollTop;var w=el.scrollWidth,h=el.scrollHeight;var cw=el.clientWidth,ch=el.clientHeight;direction=direction.toLowerCase();var scrolled=false;var a=this.preanim(arguments,2);switch(direction){case"l":case"left":if(w-l>cw){var v=Math.min(l+distance,w-cw);this.scrollTo("left",v,a);scrolled=true}break;case"r":case"right":if(l>0){var v=Math.max(l-distance,0);this.scrollTo("left",v,a);scrolled=true}break;case"t":case"top":case"up":if(t>0){var v=Math.max(t-distance,0);this.scrollTo("top",v,a);scrolled=true}break;case"b":case"bottom":case"down":if(h-t>ch){var v=Math.min(t+distance,h-ch);this.scrollTo("top",v,a);scrolled=true}break}return scrolled},translatePoints:function(x,y){if(typeof x=="object"||Ext.isArray(x)){y=x[1];x=x[0]}var p=this.getStyle("position");var o=this.getXY();var l=parseInt(this.getStyle("left"),10);var t=parseInt(this.getStyle("top"),10);if(isNaN(l)){l=(p=="relative")?0:this.dom.offsetLeft}if(isNaN(t)){t=(p=="relative")?0:this.dom.offsetTop}return{left:(x-o[0]+l),top:(y-o[1]+t)}},getScroll:function(){var d=this.dom,doc=document;if(d==doc||d==doc.body){var l,t;if(Ext.isIE&&Ext.isStrict){l=doc.documentElement.scrollLeft||(doc.body.scrollLeft||0);t=doc.documentElement.scrollTop||(doc.body.scrollTop||0)}else{l=window.pageXOffset||(doc.body.scrollLeft||0);t=window.pageYOffset||(doc.body.scrollTop||0)}return{left:l,top:t}}else{return{left:d.scrollLeft,top:d.scrollTop}}},getColor:function(attr,defaultValue,prefix){var v=this.getStyle(attr);if(!v||v=="transparent"||v=="inherit"){return defaultValue}var color=typeof prefix=="undefined"?"#":prefix;if(v.substr(0,4)=="rgb("){var rvs=v.slice(4,v.length-1).split(",");for(var i=0;i<3;i++){var h=parseInt(rvs[i]);var s=h.toString(16);if(h<16){s="0"+s}color+=s}}else{if(v.substr(0,1)=="#"){if(v.length==4){for(var i=1;i<4;i++){var c=v.charAt(i);color+=c+c}}else{if(v.length==7){color+=v.substr(1)}}}}return(color.length>5?color.toLowerCase():defaultValue)},boxWrap:function(cls){cls=cls||"x-box";var el=Ext.get(this.insertHtml("beforeBegin",String.format("<div class=\"{0}\">"+El.boxMarkup+"</div>",cls)));el.child("."+cls+"-mc").dom.appendChild(this.dom);return el},getAttributeNS:Ext.isIE?function(ns,name){var d=this.dom;var type=typeof d[ns+":"+name];if(type!="undefined"&&type!="unknown"){return d[ns+":"+name]}if(d.getAttribute){return d.getAttribute(ns+":"+name)}return d[name]}:function(ns,name){var d=this.dom;return d.getAttributeNS(ns,name)||d.getAttribute(ns+":"+name)||d.getAttribute(name)||d[name]},getTextWidth:function(text,min,max){return(Ext.util.TextMetrics.measure(this.dom,Ext.value(text,this.dom.innerHTML,true)).width).constrain(min||0,max||1000000)}};var ep=El.prototype;ep.on=ep.addListener;ep.mon=ep.addListener;ep.getUpdateManager=ep.getUpdater;ep.un=ep.removeListener;ep.autoBoxAdjust=true;El.unitPattern=/\d+(px|em|%|en|ex|pt|in|cm|mm|pc)$/i;El.addUnits=function(v,defaultUnit){if(v===""||v=="auto"){return v}if(v===undefined){return""}if(typeof v=="number"||!El.unitPattern.test(v)){return v+(defaultUnit||"px")}return v};El.boxMarkup="<div class=\"{0}-tl\"><div class=\"{0}-tr\"><div class=\"{0}-tc\"></div></div></div><div class=\"{0}-ml\"><div class=\"{0}-mr\"><div class=\"{0}-mc\"></div></div></div><div class=\"{0}-bl\"><div class=\"{0}-br\"><div class=\"{0}-bc\"></div></div></div>";El.VISIBILITY=1;El.DISPLAY=2;El.borders={l:"border-left-width",r:"border-right-width",t:"border-top-width",b:"border-bottom-width"};El.paddings={l:"padding-left",r:"padding-right",t:"padding-top",b:"padding-bottom"};El.margins={l:"margin-left",r:"margin-right",t:"margin-top",b:"margin-bottom"};El.cache={};var docEl;
El.get=function(el){var ex,elm,id;if(!el){return null}if(typeof el=="string"){if(!(elm=document.getElementById(el))){return null}if(ex=El.cache[el]){ex.dom=elm}else{ex=El.cache[el]=new El(elm)}return ex}else{if(el.tagName){if(!(id=el.id)){id=Ext.id(el)}if(ex=El.cache[id]){ex.dom=el}else{ex=El.cache[id]=new El(el)}return ex}else{if(el instanceof El){if(el!=docEl){el.dom=document.getElementById(el.id)||el.dom;El.cache[el.id]=el}return el}else{if(el.isComposite){return el}else{if(Ext.isArray(el)){return El.select(el)}else{if(el==document){if(!docEl){var f=function(){};f.prototype=El.prototype;docEl=new f();docEl.dom=document}return docEl}}}}}}return null};
El.uncache=function(el){for(var i=0,a=arguments,len=a.length;i<len;i++){if(a[i]){delete El.cache[a[i].id||a[i]]}}};
El.garbageCollect=function(){if(!Ext.enableGarbageCollector){clearInterval(El.collectorThread);return }for(var eid in El.cache){var el=El.cache[eid],d=el.dom;if(!d||!d.parentNode||(!d.offsetParent&&!document.getElementById(eid))){delete El.cache[eid];if(d&&Ext.enableListenerCollection){Ext.EventManager.removeAll(d)}}}};El.collectorThreadId=setInterval(El.garbageCollect,30000);var flyFn=function(){};flyFn.prototype=El.prototype;var _cls=new flyFn();El.Flyweight=function(dom){this.dom=dom};El.Flyweight.prototype=_cls;El.Flyweight.prototype.isFlyweight=true;El._flyweights={};El.fly=function(el,named){named=named||"_global";el=Ext.getDom(el);if(!el){return null}if(!El._flyweights[named]){El._flyweights[named]=new El.Flyweight()}El._flyweights[named].dom=el;return El._flyweights[named]};Ext.get=El.get;Ext.fly=El.fly;var noBoxAdjust=Ext.isStrict?{select:1}:{input:1,select:1,textarea:1};
if(Ext.isIE||Ext.isGecko){noBoxAdjust["button"]=1}
Ext.EventManager.on(window,"unload",function(){delete El.cache;delete El._flyweights})
})();

Ext.data.Connection=function(A){Ext.apply(this,A);this.addEvents("beforerequest","requestcomplete","requestexception");Ext.data.Connection.superclass.constructor.call(this)};Ext.extend(Ext.data.Connection,Ext.util.Observable,{timeout:30000,autoAbort:false,disableCaching:true,disableCachingParam:"_dc",request:function(E){if(this.fireEvent("beforerequest",this,E)!==false){var C=E.params;if(typeof C=="function"){C=C.call(E.scope||window,E)}if(typeof C=="object"){C=Ext.urlEncode(C)}if(this.extraParams){var G=Ext.urlEncode(this.extraParams);C=C?(C+"&"+G):G}var B=E.url||this.url;if(typeof B=="function"){B=B.call(E.scope||window,E)}if(E.form){var D=Ext.getDom(E.form);B=B||D.action;var J=D.getAttribute("enctype");if(E.isUpload||(J&&J.toLowerCase()=="multipart/form-data")){return this.doFormUpload(E,C,B)}var I=Ext.lib.Ajax.serializeForm(D);C=C?(C+"&"+I):I}var K=E.headers;if(this.defaultHeaders){K=Ext.apply(K||{},this.defaultHeaders);if(!E.headers){E.headers=K}}var F={success:this.handleResponse,failure:this.handleFailure,scope:this,argument:{options:E},timeout:E.timeout||this.timeout};var A=E.method||this.method||((C||E.xmlData||E.jsonData)?"POST":"GET");if(A=="GET"&&(this.disableCaching&&E.disableCaching!==false)||E.disableCaching===true){var H=E.disableCachingParam||this.disableCachingParam;B+=(B.indexOf("?")!=-1?"&":"?")+H+"="+(new Date().getTime())}if(typeof E.autoAbort=="boolean"){if(E.autoAbort){this.abort()}}else{if(this.autoAbort!==false){this.abort()}}if((A=="GET"||E.xmlData||E.jsonData)&&C){B+=(B.indexOf("?")!=-1?"&":"?")+C;C=""}this.transId=Ext.lib.Ajax.request(A,B,F,C,E);return this.transId}else{Ext.callback(E.callback,E.scope,[E,null,null]);return null}},isLoading:function(A){if(A){return Ext.lib.Ajax.isCallInProgress(A)}else{return this.transId?true:false}},abort:function(A){if(A||this.isLoading()){Ext.lib.Ajax.abort(A||this.transId)}},handleResponse:function(A){this.transId=false;var B=A.argument.options;A.argument=B?B.argument:null;this.fireEvent("requestcomplete",this,A,B);Ext.callback(B.success,B.scope,[A,B]);Ext.callback(B.callback,B.scope,[B,true,A])},handleFailure:function(A,C){this.transId=false;var B=A.argument.options;A.argument=B?B.argument:null;this.fireEvent("requestexception",this,A,B,C);Ext.callback(B.failure,B.scope,[A,B]);Ext.callback(B.callback,B.scope,[B,false,A])},doFormUpload:function(E,A,B){var C=Ext.id();var F=document.createElement("iframe");F.id=C;F.name=C;F.className="x-hidden";if(Ext.isIE){F.src=Ext.SSL_SECURE_URL}document.body.appendChild(F);if(Ext.isIE){document.frames[C].name=C}var D=Ext.getDom(E.form);D.target=C;D.method="POST";D.enctype=D.encoding="multipart/form-data";if(B){D.action=B}var L,J;if(A){L=[];A=Ext.urlDecode(A,false);for(var H in A){if(A.hasOwnProperty(H)){J=document.createElement("input");J.type="hidden";J.name=H;J.value=A[H];D.appendChild(J);L.push(J)}}}function G(){var M={responseText:"",responseXML:null};M.argument=E?E.argument:null;try{var O;if(Ext.isIE){O=F.contentWindow.document}else{O=(F.contentDocument||window.frames[C].document)}if(O&&O.body){M.responseText=O.body.innerHTML}if(O&&O.XMLDocument){M.responseXML=O.XMLDocument}else{M.responseXML=O}}catch(N){}Ext.EventManager.removeListener(F,"load",G,this);this.fireEvent("requestcomplete",this,M,E);Ext.callback(E.success,E.scope,[M,E]);Ext.callback(E.callback,E.scope,[E,true,M]);setTimeout(function(){Ext.removeNode(F)},100)}Ext.EventManager.on(F,"load",G,this);D.submit();if(L){for(var I=0,K=L.length;I<K;I++){Ext.removeNode(L[I])}}}});Ext.Ajax=new Ext.data.Connection({autoAbort:false,serializeForm:function(A){return Ext.lib.Ajax.serializeForm(A)}});

Ext.util.MixedCollection=function(B,A){this.items=[];this.map={};this.keys=[];this.length=0;this.addEvents("clear","add","replace","remove","sort");this.allowFunctions=B===true;if(A){this.getKey=A}Ext.util.MixedCollection.superclass.constructor.call(this)};Ext.extend(Ext.util.MixedCollection,Ext.util.Observable,{allowFunctions:false,add:function(B,C){if(arguments.length==1){C=arguments[0];B=this.getKey(C)}if(typeof B=="undefined"||B===null){this.length++;this.items.push(C);this.keys.push(null)}else{var A=this.map[B];if(A){return this.replace(B,C)}this.length++;this.items.push(C);this.map[B]=C;this.keys.push(B)}this.fireEvent("add",this.length-1,C,B);return C},getKey:function(A){return A.id},replace:function(C,D){if(arguments.length==1){D=arguments[0];C=this.getKey(D)}var A=this.item(C);if(typeof C=="undefined"||C===null||typeof A=="undefined"){return this.add(C,D)}var B=this.indexOfKey(C);this.items[B]=D;this.map[C]=D;this.fireEvent("replace",C,A,D);return D},addAll:function(E){if(arguments.length>1||Ext.isArray(E)){var B=arguments.length>1?arguments:E;for(var D=0,A=B.length;D<A;D++){this.add(B[D])}}else{for(var C in E){if(this.allowFunctions||typeof E[C]!="function"){this.add(C,E[C])}}}},each:function(E,D){var B=[].concat(this.items);for(var C=0,A=B.length;C<A;C++){if(E.call(D||B[C],B[C],C,A)===false){break}}},eachKey:function(D,C){for(var B=0,A=this.keys.length;B<A;B++){D.call(C||window,this.keys[B],this.items[B],B,A)}},find:function(D,C){for(var B=0,A=this.items.length;B<A;B++){if(D.call(C||window,this.items[B],this.keys[B])){return this.items[B]}}return null},insert:function(A,B,C){if(arguments.length==2){C=arguments[1];B=this.getKey(C)}if(A>=this.length){return this.add(B,C)}this.length++;this.items.splice(A,0,C);if(typeof B!="undefined"&&B!=null){this.map[B]=C}this.keys.splice(A,0,B);this.fireEvent("add",A,C,B);return C},remove:function(A){return this.removeAt(this.indexOf(A))},removeAt:function(A){if(A<this.length&&A>=0){this.length--;var C=this.items[A];this.items.splice(A,1);var B=this.keys[A];if(typeof B!="undefined"){delete this.map[B]}this.keys.splice(A,1);this.fireEvent("remove",C,B);return C}return false},removeKey:function(A){return this.removeAt(this.indexOfKey(A))},getCount:function(){return this.length},indexOf:function(A){return this.items.indexOf(A)},indexOfKey:function(A){return this.keys.indexOf(A)},item:function(A){var B=typeof this.map[A]!="undefined"?this.map[A]:this.items[A];return typeof B!="function"||this.allowFunctions?B:null},itemAt:function(A){return this.items[A]},key:function(A){return this.map[A]},contains:function(A){return this.indexOf(A)!=-1},containsKey:function(A){return typeof this.map[A]!="undefined"},clear:function(){this.length=0;this.items=[];this.keys=[];this.map={};this.fireEvent("clear")},first:function(){return this.items[0]},last:function(){return this.items[this.length-1]},_sort:function(I,A,H){var C=String(A).toUpperCase()=="DESC"?-1:1;H=H||function(K,J){return K-J};var G=[],B=this.keys,F=this.items;for(var D=0,E=F.length;D<E;D++){G[G.length]={key:B[D],value:F[D],index:D}}G.sort(function(K,J){var L=H(K[I],J[I])*C;if(L==0){L=(K.index<J.index?-1:1)}return L});for(var D=0,E=G.length;D<E;D++){F[D]=G[D].value;B[D]=G[D].key}this.fireEvent("sort",this)},sort:function(A,B){this._sort("value",A,B)},keySort:function(A,B){this._sort("key",A,B||function(D,C){return String(D).toUpperCase()-String(C).toUpperCase()})},getRange:function(E,A){var B=this.items;if(B.length<1){return[]}E=E||0;A=Math.min(typeof A=="undefined"?this.length-1:A,this.length-1);var D=[];if(E<=A){for(var C=E;C<=A;C++){D[D.length]=B[C]}}else{for(var C=E;C>=A;C--){D[D.length]=B[C]}}return D},filter:function(C,B,D,A){if(Ext.isEmpty(B,false)){return this.clone()}B=this.createValueMatcher(B,D,A);return this.filterBy(function(E){return E&&B.test(E[C])})},filterBy:function(F,E){var G=new Ext.util.MixedCollection();G.getKey=this.getKey;var B=this.keys,D=this.items;for(var C=0,A=D.length;C<A;C++){if(F.call(E||this,D[C],B[C])){G.add(B[C],D[C])}}return G},findIndex:function(C,B,E,D,A){if(Ext.isEmpty(B,false)){return -1}B=this.createValueMatcher(B,D,A);return this.findIndexBy(function(F){return F&&B.test(F[C])},null,E)},findIndexBy:function(F,E,G){var B=this.keys,D=this.items;for(var C=(G||0),A=D.length;C<A;C++){if(F.call(E||this,D[C],B[C])){return C}}if(typeof G=="number"&&G>0){for(var C=0;C<G;C++){if(F.call(E||this,D[C],B[C])){return C}}}return -1},createValueMatcher:function(B,C,A){if(!B.exec){B=String(B);B=new RegExp((C===true?"":"^")+Ext.escapeRe(B),A?"":"i")}return B},clone:function(){var E=new Ext.util.MixedCollection();var B=this.keys,D=this.items;for(var C=0,A=D.length;C<A;C++){E.add(B[C],D[C])}E.getKey=this.getKey;return E}});Ext.util.MixedCollection.prototype.get=Ext.util.MixedCollection.prototype.item;

Ext.util.JSON=new (function(){var useHasOwn=!!{}.hasOwnProperty;var pad=function(n){return n<10?"0"+n:n};var m={"\b":"\\b","\t":"\\t","\n":"\\n","\f":"\\f","\r":"\\r","\"":"\\\"","\\":"\\\\"};var encodeString=function(s){if(/["\\\x00-\x1f]/.test(s)){return"\""+s.replace(/([\x00-\x1f\\"])/g,function(a,b){var c=m[b];if(c){return c}c=b.charCodeAt();return"\\u00"+Math.floor(c/16).toString(16)+(c%16).toString(16)})+"\""}return"\""+s+"\""};var encodeArray=function(o){var a=["["],b,i,l=o.length,v;for(i=0;i<l;i+=1){v=o[i];switch(typeof v){case"undefined":case"function":case"unknown":break;default:if(b){a.push(",")}a.push(v===null?"null":Ext.util.JSON.encode(v));b=true}}a.push("]");return a.join("")};this.encodeDate=function(o){return"\""+o.getFullYear()+"-"+pad(o.getMonth()+1)+"-"+pad(o.getDate())+"T"+pad(o.getHours())+":"+pad(o.getMinutes())+":"+pad(o.getSeconds())+"\""};this.encode=function(o){if(typeof o=="undefined"||o===null){return"null"}else{if(Ext.isArray(o)){return encodeArray(o)}else{if(Ext.isDate(o)){return Ext.util.JSON.encodeDate(o)}else{if(typeof o=="string"){return encodeString(o)}else{if(typeof o=="number"){return isFinite(o)?String(o):"null"}else{if(typeof o=="boolean"){return String(o)}else{var a=["{"],b,i,v;for(i in o){if(!useHasOwn||o.hasOwnProperty(i)){v=o[i];switch(typeof v){case"undefined":case"function":case"unknown":break;default:if(b){a.push(",")}a.push(this.encode(i),":",v===null?"null":this.encode(v));b=true}}}a.push("}");return a.join("")}}}}}}};this.decode=function(json){return eval("("+json+")")}})();Ext.encode=Ext.util.JSON.encode;Ext.decode=Ext.util.JSON.decode;

Ext.data.Record=function(A,B){this.id=(B||B===0)?B:++Ext.data.Record.AUTO_ID;this.data=A};Ext.data.Record.create=function(E){var C=Ext.extend(Ext.data.Record,{});var D=C.prototype;D.fields=new Ext.util.MixedCollection(false,function(F){return F.name});for(var B=0,A=E.length;B<A;B++){D.fields.add(new Ext.data.Field(E[B]))}C.getField=function(F){return D.fields.get(F)};return C};Ext.data.Record.AUTO_ID=1000;Ext.data.Record.EDIT="edit";Ext.data.Record.REJECT="reject";Ext.data.Record.COMMIT="commit";Ext.data.Record.prototype={dirty:false,editing:false,error:null,modified:null,join:function(A){this.store=A},set:function(A,B){if(String(this.data[A])==String(B)){return }this.dirty=true;if(!this.modified){this.modified={}}if(typeof this.modified[A]=="undefined"){this.modified[A]=this.data[A]}this.data[A]=B;if(!this.editing&&this.store){this.store.afterEdit(this)}},get:function(A){return this.data[A]},beginEdit:function(){this.editing=true;this.modified={}},cancelEdit:function(){this.editing=false;delete this.modified},endEdit:function(){this.editing=false;if(this.dirty&&this.store){this.store.afterEdit(this)}},reject:function(B){var A=this.modified;for(var C in A){if(typeof A[C]!="function"){this.data[C]=A[C]}}this.dirty=false;delete this.modified;this.editing=false;if(this.store&&B!==true){this.store.afterReject(this)}},commit:function(A){this.dirty=false;delete this.modified;this.editing=false;if(this.store&&A!==true){this.store.afterCommit(this)}},getChanges:function(){var A=this.modified,B={};for(var C in A){if(A.hasOwnProperty(C)){B[C]=this.data[C]}}return B},hasError:function(){return this.error!=null},clearError:function(){this.error=null},copy:function(A){return new this.constructor(Ext.apply({},this.data),A||this.id)},isModified:function(A){return !!(this.modified&&this.modified.hasOwnProperty(A))}};

Ext.data.Store=function(A){this.data=new Ext.util.MixedCollection(false);this.data.getKey=function(B){return B.id};this.baseParams={};this.paramNames={"start":"start","limit":"limit","sort":"sort","dir":"dir"};if(A&&A.data){this.inlineData=A.data;delete A.data}Ext.apply(this,A);if(this.url&&!this.proxy){this.proxy=new Ext.data.HttpProxy({url:this.url})}if(this.reader){if(!this.recordType){this.recordType=this.reader.recordType}if(this.reader.onMetaChange){this.reader.onMetaChange=this.onMetaChange.createDelegate(this)}}if(this.recordType){this.fields=this.recordType.prototype.fields}this.modified=[];this.addEvents("datachanged","metachange","add","remove","update","clear","beforeload","load","loadexception");if(this.proxy){this.relayEvents(this.proxy,["loadexception"])}this.sortToggle={};if(this.sortInfo){this.setDefaultSort(this.sortInfo.field,this.sortInfo.direction)}Ext.data.Store.superclass.constructor.call(this);if(this.storeId||this.id){Ext.StoreMgr.register(this)}if(this.inlineData){this.loadData(this.inlineData);delete this.inlineData}else{if(this.autoLoad){this.load.defer(10,this,[typeof this.autoLoad=="object"?this.autoLoad:undefined])}}};Ext.extend(Ext.data.Store,Ext.util.Observable,{remoteSort:false,pruneModifiedRecords:false,lastOptions:null,destroy:function(){if(this.id){Ext.StoreMgr.unregister(this)}this.data=null;this.purgeListeners()},add:function(B){B=[].concat(B);if(B.length<1){return }for(var D=0,A=B.length;D<A;D++){B[D].join(this)}var C=this.data.length;this.data.addAll(B);if(this.snapshot){this.snapshot.addAll(B)}this.fireEvent("add",this,B,C)},addSorted:function(A){var B=this.findInsertIndex(A);this.insert(B,A)},remove:function(A){var B=this.data.indexOf(A);this.data.removeAt(B);if(this.pruneModifiedRecords){this.modified.remove(A)}if(this.snapshot){this.snapshot.remove(A)}this.fireEvent("remove",this,A,B)},removeAll:function(){this.data.clear();if(this.snapshot){this.snapshot.clear()}if(this.pruneModifiedRecords){this.modified=[]}this.fireEvent("clear",this)},insert:function(C,B){B=[].concat(B);for(var D=0,A=B.length;D<A;D++){this.data.insert(C,B[D]);B[D].join(this)}this.fireEvent("add",this,B,C)},indexOf:function(A){return this.data.indexOf(A)},indexOfId:function(A){return this.data.indexOfKey(A)},getById:function(A){return this.data.key(A)},getAt:function(A){return this.data.itemAt(A)},getRange:function(B,A){return this.data.getRange(B,A)},storeOptions:function(A){A=Ext.apply({},A);delete A.callback;delete A.scope;this.lastOptions=A},load:function(B){B=B||{};if(this.fireEvent("beforeload",this,B)!==false){this.storeOptions(B);var C=Ext.apply(B.params||{},this.baseParams);if(this.sortInfo&&this.remoteSort){var A=this.paramNames;C[A["sort"]]=this.sortInfo.field;C[A["dir"]]=this.sortInfo.direction}this.proxy.load(C,this.reader,this.loadRecords,this,B);return true}else{return false}},reload:function(A){this.load(Ext.applyIf(A||{},this.lastOptions))},loadRecords:function(G,B,F){if(!G||F===false){if(F!==false){this.fireEvent("load",this,[],B)}if(B.callback){B.callback.call(B.scope||this,[],B,false)}return }var E=G.records,D=G.totalRecords||E.length;if(!B||B.add!==true){if(this.pruneModifiedRecords){this.modified=[]}for(var C=0,A=E.length;C<A;C++){E[C].join(this)}if(this.snapshot){this.data=this.snapshot;delete this.snapshot}this.data.clear();this.data.addAll(E);this.totalLength=D;this.applySort();this.fireEvent("datachanged",this)}else{this.totalLength=Math.max(D,this.data.length+E.length);this.add(E)}this.fireEvent("load",this,E,B);if(B.callback){B.callback.call(B.scope||this,E,B,true)}},loadData:function(C,A){var B=this.reader.readRecords(C);this.loadRecords(B,{add:A},true)},getCount:function(){return this.data.length||0},getTotalCount:function(){return this.totalLength||0},getSortState:function(){return this.sortInfo},applySort:function(){if(this.sortInfo&&!this.remoteSort){var A=this.sortInfo,B=A.field;this.sortData(B,A.direction)}},sortData:function(C,D){D=D||"ASC";var A=this.fields.get(C).sortType;var B=function(F,E){var H=A(F.data[C]),G=A(E.data[C]);return H>G?1:(H<G?-1:0)};this.data.sort(D,B);if(this.snapshot&&this.snapshot!=this.data){this.snapshot.sort(D,B)}},setDefaultSort:function(B,A){A=A?A.toUpperCase():"ASC";this.sortInfo={field:B,direction:A};this.sortToggle[B]=A},sort:function(E,C){var D=this.fields.get(E);if(!D){return false}if(!C){if(this.sortInfo&&this.sortInfo.field==D.name){C=(this.sortToggle[D.name]||"ASC").toggle("ASC","DESC")}else{C=D.sortDir}}var B=(this.sortToggle)?this.sortToggle[D.name]:null;var A=(this.sortInfo)?this.sortInfo:null;this.sortToggle[D.name]=C;this.sortInfo={field:D.name,direction:C};if(!this.remoteSort){this.applySort();this.fireEvent("datachanged",this)}else{if(!this.load(this.lastOptions)){if(B){this.sortToggle[D.name]=B}if(A){this.sortInfo=A}}}},each:function(B,A){this.data.each(B,A)},getModifiedRecords:function(){return this.modified},createFilterFn:function(C,B,D,A){if(Ext.isEmpty(B,false)){return false}B=this.data.createValueMatcher(B,D,A);return function(E){return B.test(E.data[C])}},sum:function(E,F,A){var C=this.data.items,B=0;F=F||0;A=(A||A===0)?A:C.length-1;for(var D=F;D<=A;D++){B+=(C[D].data[E]||0)}return B},filter:function(D,C,E,A){var B=this.createFilterFn(D,C,E,A);return B?this.filterBy(B):this.clearFilter()},filterBy:function(B,A){this.snapshot=this.snapshot||this.data;this.data=this.queryBy(B,A||this);this.fireEvent("datachanged",this)},query:function(D,C,E,A){var B=this.createFilterFn(D,C,E,A);return B?this.queryBy(B):this.data.clone()},queryBy:function(B,A){var C=this.snapshot||this.data;return C.filterBy(B,A||this)},find:function(D,C,F,E,A){var B=this.createFilterFn(D,C,E,A);return B?this.data.findIndexBy(B,null,F):-1},findBy:function(B,A,C){return this.data.findIndexBy(B,A,C)},collect:function(G,H,B){var F=(B===true&&this.snapshot)?this.snapshot.items:this.data.items;var I,J,A=[],C={};for(var D=0,E=F.length;D<E;D++){I=F[D].data[G];J=String(I);if((H||!Ext.isEmpty(I))&&!C[J]){C[J]=true;A[A.length]=I}}return A},clearFilter:function(A){if(this.isFiltered()){this.data=this.snapshot;delete this.snapshot;if(A!==true){this.fireEvent("datachanged",this)}}},isFiltered:function(){return this.snapshot&&this.snapshot!=this.data},afterEdit:function(A){if(this.modified.indexOf(A)==-1){this.modified.push(A)}this.fireEvent("update",this,A,Ext.data.Record.EDIT)},afterReject:function(A){this.modified.remove(A);this.fireEvent("update",this,A,Ext.data.Record.REJECT)},afterCommit:function(A){this.modified.remove(A);this.fireEvent("update",this,A,Ext.data.Record.COMMIT)},commitChanges:function(){var B=this.modified.slice(0);this.modified=[];for(var C=0,A=B.length;C<A;C++){B[C].commit()}},rejectChanges:function(){var B=this.modified.slice(0);this.modified=[];for(var C=0,A=B.length;C<A;C++){B[C].reject()}},onMetaChange:function(B,A,C){this.recordType=A;this.fields=A.prototype.fields;delete this.snapshot;this.sortInfo=B.sortInfo;this.modified=[];this.fireEvent("metachange",this,this.reader.meta)},findInsertIndex:function(A){this.suspendEvents();var C=this.data.clone();this.data.add(A);this.applySort();var B=this.data.indexOf(A);this.data=C;this.resumeEvents();return B}});

Ext.data.DataReader=function(A,B){this.meta=A;this.recordType=Ext.isArray(B)?Ext.data.Record.create(B):B};Ext.data.DataReader.prototype={};

Ext.data.DataProxy=function(){this.addEvents("beforeload","load");Ext.data.DataProxy.superclass.constructor.call(this)};Ext.extend(Ext.data.DataProxy,Ext.util.Observable);

Ext.data.Tree=function(A){this.nodeHash={};this.root=null;if(A){this.setRootNode(A)}this.addEvents("append","remove","move","insert","beforeappend","beforeremove","beforemove","beforeinsert");Ext.data.Tree.superclass.constructor.call(this)};Ext.extend(Ext.data.Tree,Ext.util.Observable,{pathSeparator:"/",proxyNodeEvent:function(){return this.fireEvent.apply(this,arguments)},getRootNode:function(){return this.root},setRootNode:function(A){this.root=A;A.ownerTree=this;A.isRoot=true;this.registerNode(A);return A},getNodeById:function(A){return this.nodeHash[A]},registerNode:function(A){this.nodeHash[A.id]=A},unregisterNode:function(A){delete this.nodeHash[A.id]},toString:function(){return"[Tree"+(this.id?" "+this.id:"")+"]"}});Ext.data.Node=function(A){this.attributes=A||{};this.leaf=this.attributes.leaf;this.id=this.attributes.id;if(!this.id){this.id=Ext.id(null,"ynode-");this.attributes.id=this.id}this.childNodes=[];if(!this.childNodes.indexOf){this.childNodes.indexOf=function(D){for(var C=0,B=this.length;C<B;C++){if(this[C]==D){return C}}return -1}}this.parentNode=null;this.firstChild=null;this.lastChild=null;this.previousSibling=null;this.nextSibling=null;this.addEvents({"append":true,"remove":true,"move":true,"insert":true,"beforeappend":true,"beforeremove":true,"beforemove":true,"beforeinsert":true});this.listeners=this.attributes.listeners;Ext.data.Node.superclass.constructor.call(this)};Ext.extend(Ext.data.Node,Ext.util.Observable,{fireEvent:function(B){if(Ext.data.Node.superclass.fireEvent.apply(this,arguments)===false){return false}var A=this.getOwnerTree();if(A){if(A.proxyNodeEvent.apply(A,arguments)===false){return false}}return true},isLeaf:function(){return this.leaf===true},setFirstChild:function(A){this.firstChild=A},setLastChild:function(A){this.lastChild=A},isLast:function(){return(!this.parentNode?true:this.parentNode.lastChild==this)},isFirst:function(){return(!this.parentNode?true:this.parentNode.firstChild==this)},hasChildNodes:function(){return !this.isLeaf()&&this.childNodes.length>0},isExpandable:function(){return this.attributes.expandable||this.hasChildNodes()},appendChild:function(E){var F=false;if(Ext.isArray(E)){F=E}else{if(arguments.length>1){F=arguments}}if(F){for(var D=0,A=F.length;D<A;D++){this.appendChild(F[D])}}else{if(this.fireEvent("beforeappend",this.ownerTree,this,E)===false){return false}var B=this.childNodes.length;var C=E.parentNode;if(C){if(E.fireEvent("beforemove",E.getOwnerTree(),E,C,this,B)===false){return false}C.removeChild(E)}B=this.childNodes.length;if(B==0){this.setFirstChild(E)}this.childNodes.push(E);E.parentNode=this;var G=this.childNodes[B-1];if(G){E.previousSibling=G;G.nextSibling=E}else{E.previousSibling=null}E.nextSibling=null;this.setLastChild(E);E.setOwnerTree(this.getOwnerTree());this.fireEvent("append",this.ownerTree,this,E,B);if(C){E.fireEvent("move",this.ownerTree,E,C,this,B)}return E}},removeChild:function(B){var A=this.childNodes.indexOf(B);if(A==-1){return false}if(this.fireEvent("beforeremove",this.ownerTree,this,B)===false){return false}this.childNodes.splice(A,1);if(B.previousSibling){B.previousSibling.nextSibling=B.nextSibling}if(B.nextSibling){B.nextSibling.previousSibling=B.previousSibling}if(this.firstChild==B){this.setFirstChild(B.nextSibling)}if(this.lastChild==B){this.setLastChild(B.previousSibling)}B.setOwnerTree(null);B.parentNode=null;B.previousSibling=null;B.nextSibling=null;this.fireEvent("remove",this.ownerTree,this,B);return B},insertBefore:function(D,A){if(!A){return this.appendChild(D)}if(D==A){return false}if(this.fireEvent("beforeinsert",this.ownerTree,this,D,A)===false){return false}var B=this.childNodes.indexOf(A);var C=D.parentNode;var E=B;if(C==this&&this.childNodes.indexOf(D)<B){E--}if(C){if(D.fireEvent("beforemove",D.getOwnerTree(),D,C,this,B,A)===false){return false}C.removeChild(D)}if(E==0){this.setFirstChild(D)}this.childNodes.splice(E,0,D);D.parentNode=this;var F=this.childNodes[E-1];if(F){D.previousSibling=F;F.nextSibling=D}else{D.previousSibling=null}D.nextSibling=A;A.previousSibling=D;D.setOwnerTree(this.getOwnerTree());this.fireEvent("insert",this.ownerTree,this,D,A);if(C){D.fireEvent("move",this.ownerTree,D,C,this,E,A)}return D},remove:function(){this.parentNode.removeChild(this);return this},item:function(A){return this.childNodes[A]},replaceChild:function(A,B){this.insertBefore(A,B);this.removeChild(B);return B},indexOf:function(A){return this.childNodes.indexOf(A)},getOwnerTree:function(){if(!this.ownerTree){var A=this;while(A){if(A.ownerTree){this.ownerTree=A.ownerTree;break}A=A.parentNode}}return this.ownerTree},getDepth:function(){var B=0;var A=this;while(A.parentNode){++B;A=A.parentNode}return B},setOwnerTree:function(B){if(B!=this.ownerTree){if(this.ownerTree){this.ownerTree.unregisterNode(this)}this.ownerTree=B;var D=this.childNodes;for(var C=0,A=D.length;C<A;C++){D[C].setOwnerTree(B)}if(B){B.registerNode(this)}}},getPath:function(B){B=B||"id";var D=this.parentNode;var A=[this.attributes[B]];while(D){A.unshift(D.attributes[B]);D=D.parentNode}var C=this.getOwnerTree().pathSeparator;return C+A.join(C)},bubble:function(C,B,A){var D=this;while(D){if(C.apply(B||D,A||[D])===false){break}D=D.parentNode}},cascade:function(F,E,B){if(F.apply(E||this,B||[this])!==false){var D=this.childNodes;for(var C=0,A=D.length;C<A;C++){D[C].cascade(F,E,B)}}},eachChild:function(F,E,B){var D=this.childNodes;for(var C=0,A=D.length;C<A;C++){if(F.apply(E||this,B||[D[C]])===false){break}}},findChild:function(D,E){var C=this.childNodes;for(var B=0,A=C.length;B<A;B++){if(C[B].attributes[D]==E){return C[B]}}return null},findChildBy:function(E,D){var C=this.childNodes;for(var B=0,A=C.length;B<A;B++){if(E.call(D||C[B],C[B])===true){return C[B]}}return null},sort:function(E,D){var C=this.childNodes;var A=C.length;if(A>0){var F=D?function(){E.apply(D,arguments)}:E;C.sort(F);for(var B=0;B<A;B++){var G=C[B];G.previousSibling=C[B-1];G.nextSibling=C[B+1];if(B==0){this.setFirstChild(G)}if(B==A-1){this.setLastChild(G)}}}},contains:function(A){return A.isAncestor(this)},isAncestor:function(A){var B=this.parentNode;while(B){if(B==A){return true}B=B.parentNode}return false},toString:function(){return"[Node"+(this.id?" "+this.id:"")+"]"}});

Ext.ComponentMgr=function(){var B=new Ext.util.MixedCollection();var A={};return{register:function(C){B.add(C)},unregister:function(C){B.remove(C)},get:function(C){return B.get(C)},onAvailable:function(E,D,C){B.on("add",function(F,G){if(G.id==E){D.call(C||G,G);B.un("add",D,C)}})},all:B,registerType:function(D,C){A[D]=C;C.xtype=D},create:function(C,D){return new A[C.xtype||D](C)}}}();Ext.reg=Ext.ComponentMgr.registerType;

Ext.Component=function(B){B=B||{};if(B.initialConfig){if(B.isAction){this.baseAction=B}B=B.initialConfig}else{if(B.tagName||B.dom||typeof B=="string"){B={applyTo:B,id:B.id||B}}}this.initialConfig=B;Ext.apply(this,B);this.addEvents("disable","enable","beforeshow","show","beforehide","hide","beforerender","render","beforedestroy","destroy","beforestaterestore","staterestore","beforestatesave","statesave");this.getId();Ext.ComponentMgr.register(this);Ext.Component.superclass.constructor.call(this);if(this.baseAction){this.baseAction.addComponent(this)}this.initComponent();if(this.plugins){if(Ext.isArray(this.plugins)){for(var C=0,A=this.plugins.length;C<A;C++){this.plugins[C]=this.initPlugin(this.plugins[C])}}else{this.plugins=this.initPlugin(this.plugins)}}if(this.stateful!==false){this.initState(B)}if(this.applyTo){this.applyToMarkup(this.applyTo);delete this.applyTo}else{if(this.renderTo){this.render(this.renderTo);delete this.renderTo}}};Ext.Component.AUTO_ID=1000;Ext.extend(Ext.Component,Ext.util.Observable,{disabledClass:"x-item-disabled",allowDomMove:true,autoShow:false,hideMode:"display",hideParent:false,hidden:false,disabled:false,rendered:false,ctype:"Ext.Component",actionMode:"el",getActionEl:function(){return this[this.actionMode]},initPlugin:function(A){A.init(this);return A},initComponent:Ext.emptyFn,render:function(B,A){if(!this.rendered&&this.fireEvent("beforerender",this)!==false){if(!B&&this.el){this.el=Ext.get(this.el);B=this.el.dom.parentNode;this.allowDomMove=false}this.container=Ext.get(B);if(this.ctCls){this.container.addClass(this.ctCls)}this.rendered=true;if(A!==undefined){if(typeof A=="number"){A=this.container.dom.childNodes[A]}else{A=Ext.getDom(A)}}this.onRender(this.container,A||null);if(this.autoShow){this.el.removeClass(["x-hidden","x-hide-"+this.hideMode])}if(this.cls){this.el.addClass(this.cls);delete this.cls}if(this.style){this.el.applyStyles(this.style);delete this.style}this.fireEvent("render",this);this.afterRender(this.container);if(this.hidden){this.hide()}if(this.disabled){this.disable()}if(this.stateful!==false){this.initStateEvents()}}return this},initState:function(A){if(Ext.state.Manager){var B=Ext.state.Manager.get(this.stateId||this.id);if(B){if(this.fireEvent("beforestaterestore",this,B)!==false){this.applyState(B);this.fireEvent("staterestore",this,B)}}}},initStateEvents:function(){if(this.stateEvents){for(var A=0,B;B=this.stateEvents[A];A++){this.on(B,this.saveState,this,{delay:100})}}},applyState:function(B,A){if(B){Ext.apply(this,B)}},getState:function(){return null},saveState:function(){if(Ext.state.Manager){var A=this.getState();if(this.fireEvent("beforestatesave",this,A)!==false){Ext.state.Manager.set(this.stateId||this.id,A);this.fireEvent("statesave",this,A)}}},applyToMarkup:function(A){this.allowDomMove=false;this.el=Ext.get(A);this.render(this.el.dom.parentNode)},addClass:function(A){if(this.el){this.el.addClass(A)}else{this.cls=this.cls?this.cls+" "+A:A}},removeClass:function(A){if(this.el){this.el.removeClass(A)}else{if(this.cls){this.cls=this.cls.split(" ").remove(A).join(" ")}}},onRender:function(B,A){if(this.autoEl){if(typeof this.autoEl=="string"){this.el=document.createElement(this.autoEl)}else{var C=document.createElement("div");Ext.DomHelper.overwrite(C,this.autoEl);this.el=C.firstChild}if(!this.el.id){this.el.id=this.getId()}}if(this.el){this.el=Ext.get(this.el);if(this.allowDomMove!==false){B.dom.insertBefore(this.el.dom,A)}if(this.overCls){this.el.addClassOnOver(this.overCls)}}},getAutoCreate:function(){var A=typeof this.autoCreate=="object"?this.autoCreate:Ext.apply({},this.defaultAutoCreate);if(this.id&&!A.id){A.id=this.id}return A},afterRender:Ext.emptyFn,destroy:function(){if(this.fireEvent("beforedestroy",this)!==false){this.beforeDestroy();if(this.rendered){this.el.removeAllListeners();this.el.remove();if(this.actionMode=="container"){this.container.remove()}}this.onDestroy();Ext.ComponentMgr.unregister(this);this.fireEvent("destroy",this);this.purgeListeners()}},beforeDestroy:Ext.emptyFn,onDestroy:Ext.emptyFn,getEl:function(){return this.el},getId:function(){return this.id||(this.id="ext-comp-"+(++Ext.Component.AUTO_ID))},getItemId:function(){return this.itemId||this.getId()},focus:function(B,A){if(A){this.focus.defer(typeof A=="number"?A:10,this,[B,false]);return }if(this.rendered){this.el.focus();if(B===true){this.el.dom.select()}}return this},blur:function(){if(this.rendered){this.el.blur()}return this},disable:function(){if(this.rendered){this.onDisable()}this.disabled=true;this.fireEvent("disable",this);return this},onDisable:function(){this.getActionEl().addClass(this.disabledClass);this.el.dom.disabled=true},enable:function(){if(this.rendered){this.onEnable()}this.disabled=false;this.fireEvent("enable",this);return this},onEnable:function(){this.getActionEl().removeClass(this.disabledClass);this.el.dom.disabled=false},setDisabled:function(A){this[A?"disable":"enable"]()},show:function(){if(this.fireEvent("beforeshow",this)!==false){this.hidden=false;if(this.autoRender){this.render(typeof this.autoRender=="boolean"?Ext.getBody():this.autoRender)}if(this.rendered){this.onShow()}this.fireEvent("show",this)}return this},onShow:function(){if(this.hideParent){this.container.removeClass("x-hide-"+this.hideMode)}else{this.getActionEl().removeClass("x-hide-"+this.hideMode)}},hide:function(){if(this.fireEvent("beforehide",this)!==false){this.hidden=true;if(this.rendered){this.onHide()}this.fireEvent("hide",this)}return this},onHide:function(){if(this.hideParent){this.container.addClass("x-hide-"+this.hideMode)}else{this.getActionEl().addClass("x-hide-"+this.hideMode)}},setVisible:function(A){if(A){this.show()}else{this.hide()}return this},isVisible:function(){return this.rendered&&this.getActionEl().isVisible()},cloneConfig:function(B){B=B||{};var C=B.id||Ext.id();var A=Ext.applyIf(B,this.initialConfig);A.id=C;return new this.constructor(A)},getXType:function(){return this.constructor.xtype},isXType:function(B,A){return !A?("/"+this.getXTypes()+"/").indexOf("/"+B+"/")!=-1:this.constructor.xtype==B},getXTypes:function(){var A=this.constructor;if(!A.xtypes){var C=[],B=this;while(B&&B.constructor.xtype){C.unshift(B.constructor.xtype);B=B.constructor.superclass}A.xtypeChain=C;A.xtypes=C.join("/")}return A.xtypes},findParentBy:function(A){for(var B=this.ownerCt;(B!=null)&&!A(B,this);B=B.ownerCt){}return B||null},findParentByType:function(A){return typeof A=="function"?this.findParentBy(function(B){return B.constructor===A}):this.findParentBy(function(B){return B.constructor.xtype===A})},mon:function(E,B,D,C,A){if(!this.mons){this.mons=[];this.on("beforedestroy",function(){for(var H=0,G=this.mons.length;H<G;H++){var F=this.mons[H];F.item.un(F.ename,F.fn,F.scope)}},this)}this.mons.push({item:E,ename:B,fn:D,scope:C});E.on(B,D,C,A)}});Ext.reg("component",Ext.Component);

Ext.BoxComponent=Ext.extend(Ext.Component,{initComponent:function(){Ext.BoxComponent.superclass.initComponent.call(this);this.addEvents("resize","move")},boxReady:false,deferHeight:false,setSize:function(B,D){if(typeof B=="object"){D=B.height;B=B.width}if(!this.boxReady){this.width=B;this.height=D;return this}if(this.lastSize&&this.lastSize.width==B&&this.lastSize.height==D){return this}this.lastSize={width:B,height:D};var C=this.adjustSize(B,D);var F=C.width,A=C.height;if(F!==undefined||A!==undefined){var E=this.getResizeEl();if(!this.deferHeight&&F!==undefined&&A!==undefined){E.setSize(F,A)}else{if(!this.deferHeight&&A!==undefined){E.setHeight(A)}else{if(F!==undefined){E.setWidth(F)}}}this.onResize(F,A,B,D);this.fireEvent("resize",this,F,A,B,D)}return this},setWidth:function(A){return this.setSize(A)},setHeight:function(A){return this.setSize(undefined,A)},getSize:function(){return this.el.getSize()},getPosition:function(A){if(A===true){return[this.el.getLeft(true),this.el.getTop(true)]}return this.xy||this.el.getXY()},getBox:function(A){var B=this.el.getSize();if(A===true){B.x=this.el.getLeft(true);B.y=this.el.getTop(true)}else{var C=this.xy||this.el.getXY();B.x=C[0];B.y=C[1]}return B},updateBox:function(A){this.setSize(A.width,A.height);this.setPagePosition(A.x,A.y);return this},getResizeEl:function(){return this.resizeEl||this.el},getPositionEl:function(){return this.positionEl||this.el},setPosition:function(A,F){if(A&&typeof A[1]=="number"){F=A[1];A=A[0]}this.x=A;this.y=F;if(!this.boxReady){return this}var B=this.adjustPosition(A,F);var E=B.x,D=B.y;var C=this.getPositionEl();if(E!==undefined||D!==undefined){if(E!==undefined&&D!==undefined){C.setLeftTop(E,D)}else{if(E!==undefined){C.setLeft(E)}else{if(D!==undefined){C.setTop(D)}}}this.onPosition(E,D);this.fireEvent("move",this,E,D)}return this},setPagePosition:function(A,C){if(A&&typeof A[1]=="number"){C=A[1];A=A[0]}this.pageX=A;this.pageY=C;if(!this.boxReady){return }if(A===undefined||C===undefined){return }var B=this.el.translatePoints(A,C);this.setPosition(B.left,B.top);return this},onRender:function(B,A){Ext.BoxComponent.superclass.onRender.call(this,B,A);if(this.resizeEl){this.resizeEl=Ext.get(this.resizeEl)}if(this.positionEl){this.positionEl=Ext.get(this.positionEl)}},afterRender:function(){Ext.BoxComponent.superclass.afterRender.call(this);this.boxReady=true;this.setSize(this.width,this.height);if(this.x||this.y){this.setPosition(this.x,this.y)}else{if(this.pageX||this.pageY){this.setPagePosition(this.pageX,this.pageY)}}},syncSize:function(){delete this.lastSize;this.setSize(this.autoWidth?undefined:this.el.getWidth(),this.autoHeight?undefined:this.el.getHeight());return this},onResize:function(D,B,A,C){},onPosition:function(A,B){},adjustSize:function(A,B){if(this.autoWidth){A="auto"}if(this.autoHeight){B="auto"}return{width:A,height:B}},adjustPosition:function(A,B){return{x:A,y:B}}});Ext.reg("box",Ext.BoxComponent);

Ext.Container=Ext.extend(Ext.BoxComponent,{autoDestroy:true,defaultType:"panel",initComponent:function(){Ext.Container.superclass.initComponent.call(this);this.addEvents("afterlayout","beforeadd","beforeremove","add","remove");var A=this.items;if(A){delete this.items;if(Ext.isArray(A)){this.add.apply(this,A)}else{this.add(A)}}},initItems:function(){if(!this.items){this.items=new Ext.util.MixedCollection(false,this.getComponentId);this.getLayout()}},setLayout:function(A){if(this.layout&&this.layout!=A){this.layout.setContainer(null)}this.initItems();this.layout=A;A.setContainer(this)},render:function(){Ext.Container.superclass.render.apply(this,arguments);if(this.layout){if(typeof this.layout=="string"){this.layout=new Ext.Container.LAYOUTS[this.layout.toLowerCase()](this.layoutConfig)}this.setLayout(this.layout);if(this.activeItem!==undefined){var A=this.activeItem;delete this.activeItem;this.layout.setActiveItem(A);return }}if(!this.ownerCt){this.doLayout()}if(this.monitorResize===true){Ext.EventManager.onWindowResize(this.doLayout,this,[false])}},getLayoutTarget:function(){return this.el},getComponentId:function(A){return A.itemId||A.id},add:function(C){if(!this.items){this.initItems()}var B=arguments,A=B.length;if(A>1){for(var D=0;D<A;D++){this.add(B[D])}return }var F=this.lookupComponent(this.applyDefaults(C));var E=this.items.length;if(this.fireEvent("beforeadd",this,F,E)!==false&&this.onBeforeAdd(F)!==false){this.items.add(F);F.ownerCt=this;this.fireEvent("add",this,F,E)}return F},insert:function(D,C){if(!this.items){this.initItems()}var B=arguments,A=B.length;if(A>2){for(var E=A-1;E>=1;--E){this.insert(D,B[E])}return }var F=this.lookupComponent(this.applyDefaults(C));if(F.ownerCt==this&&this.items.indexOf(F)<D){--D}if(this.fireEvent("beforeadd",this,F,D)!==false&&this.onBeforeAdd(F)!==false){this.items.insert(D,F);F.ownerCt=this;this.fireEvent("add",this,F,D)}return F},applyDefaults:function(A){if(this.defaults){if(typeof A=="string"){A=Ext.ComponentMgr.get(A);Ext.apply(A,this.defaults)}else{if(!A.events){Ext.applyIf(A,this.defaults)}else{Ext.apply(A,this.defaults)}}}return A},onBeforeAdd:function(A){if(A.ownerCt){A.ownerCt.remove(A,false)}if(this.hideBorders===true){A.border=(A.border===true)}},remove:function(A,B){var C=this.getComponent(A);if(C&&this.fireEvent("beforeremove",this,C)!==false){this.items.remove(C);delete C.ownerCt;if(B===true||(B!==false&&this.autoDestroy)){C.destroy()}if(this.layout&&this.layout.activeItem==C){delete this.layout.activeItem}this.fireEvent("remove",this,C)}return C},getComponent:function(A){if(typeof A=="object"){return A}return this.items.get(A)},lookupComponent:function(A){if(typeof A=="string"){return Ext.ComponentMgr.get(A)}else{if(!A.events){return this.createComponent(A)}}return A},createComponent:function(A){return Ext.ComponentMgr.create(A,this.defaultType)},doLayout:function(D){if(this.rendered&&this.layout){this.layout.layout()}if(D!==false&&this.items){var C=this.items.items;for(var B=0,A=C.length;B<A;B++){var E=C[B];if(E.doLayout){E.doLayout()}}}},getLayout:function(){if(!this.layout){var A=new Ext.layout.ContainerLayout(this.layoutConfig);this.setLayout(A)}return this.layout},beforeDestroy:function(){if(this.items){Ext.destroy.apply(Ext,this.items.items)}if(this.monitorResize){Ext.EventManager.removeResizeListener(this.doLayout,this)}if(this.layout&&this.layout.destroy){this.layout.destroy()}Ext.Container.superclass.beforeDestroy.call(this)},bubble:function(C,B,A){var D=this;while(D){if(C.apply(B||D,A||[D])===false){break}D=D.ownerCt}},cascade:function(F,E,B){if(F.apply(E||this,B||[this])!==false){if(this.items){var D=this.items.items;for(var C=0,A=D.length;C<A;C++){if(D[C].cascade){D[C].cascade(F,E,B)}else{F.apply(E||D[C],B||[D[C]])}}}}},findById:function(C){var A,B=this;this.cascade(function(D){if(B!=D&&D.id===C){A=D;return false}});return A||null},findByType:function(A){return typeof A=="function"?this.findBy(function(B){return B.constructor===A}):this.findBy(function(B){return B.constructor.xtype===A})},find:function(B,A){return this.findBy(function(C){return C[B]===A})},findBy:function(D,C){var A=[],B=this;this.cascade(function(E){if(B!=E&&D.call(C||E,E,B)===true){A.push(E)}});return A}});Ext.Container.LAYOUTS={};Ext.reg("container",Ext.Container);

Ext.Panel=Ext.extend(Ext.Container,{baseCls:"x-panel",collapsedCls:"x-panel-collapsed",maskDisabled:true,animCollapse:Ext.enableFx,headerAsText:true,buttonAlign:"right",collapsed:false,collapseFirst:true,minButtonWidth:75,elements:"body",toolTarget:"header",collapseEl:"bwrap",slideAnchor:"t",disabledClass:"",deferHeight:true,expandDefaults:{duration:0.25},collapseDefaults:{duration:0.25},initComponent:function(){Ext.Panel.superclass.initComponent.call(this);this.addEvents("bodyresize","titlechange","collapse","expand","beforecollapse","beforeexpand","beforeclose","close","activate","deactivate");if(this.tbar){this.elements+=",tbar";if(typeof this.tbar=="object"){this.topToolbar=this.tbar}delete this.tbar}if(this.bbar){this.elements+=",bbar";if(typeof this.bbar=="object"){this.bottomToolbar=this.bbar}delete this.bbar}if(this.header===true){this.elements+=",header";delete this.header}else{if(this.title&&this.header!==false){this.elements+=",header"}}if(this.footer===true){this.elements+=",footer";delete this.footer}if(this.buttons){var C=this.buttons;this.buttons=[];for(var B=0,A=C.length;B<A;B++){if(C[B].render){C[B].ownerCt=this;this.buttons.push(C[B])}else{this.addButton(C[B])}}}if(this.autoLoad){this.on("render",this.doAutoLoad,this,{delay:10})}},createElement:function(A,C){if(this[A]){C.appendChild(this[A].dom);return }if(A==="bwrap"||this.elements.indexOf(A)!=-1){if(this[A+"Cfg"]){this[A]=Ext.fly(C).createChild(this[A+"Cfg"])}else{var B=document.createElement("div");B.className=this[A+"Cls"];this[A]=Ext.get(C.appendChild(B))}}},onRender:function(H,G){Ext.Panel.superclass.onRender.call(this,H,G);this.createClasses();if(this.el){this.el.addClass(this.baseCls);this.header=this.el.down("."+this.headerCls);this.bwrap=this.el.down("."+this.bwrapCls);var M=this.bwrap?this.bwrap:this.el;this.tbar=M.down("."+this.tbarCls);this.body=M.down("."+this.bodyCls);this.bbar=M.down("."+this.bbarCls);this.footer=M.down("."+this.footerCls);this.fromMarkup=true}else{this.el=H.createChild({id:this.id,cls:this.baseCls},G)}var A=this.el,K=A.dom;if(this.cls){this.el.addClass(this.cls)}if(this.buttons){this.elements+=",footer"}if(this.frame){A.insertHtml("afterBegin",String.format(Ext.Element.boxMarkup,this.baseCls));this.createElement("header",K.firstChild.firstChild.firstChild);this.createElement("bwrap",K);var O=this.bwrap.dom;var E=K.childNodes[1],B=K.childNodes[2];O.appendChild(E);O.appendChild(B);var P=O.firstChild.firstChild.firstChild;this.createElement("tbar",P);this.createElement("body",P);this.createElement("bbar",P);this.createElement("footer",O.lastChild.firstChild.firstChild);if(!this.footer){this.bwrap.dom.lastChild.className+=" x-panel-nofooter"}}else{this.createElement("header",K);this.createElement("bwrap",K);var O=this.bwrap.dom;this.createElement("tbar",O);this.createElement("body",O);this.createElement("bbar",O);this.createElement("footer",O);if(!this.header){this.body.addClass(this.bodyCls+"-noheader");if(this.tbar){this.tbar.addClass(this.tbarCls+"-noheader")}}}if(this.border===false){this.el.addClass(this.baseCls+"-noborder");this.body.addClass(this.bodyCls+"-noborder");if(this.header){this.header.addClass(this.headerCls+"-noborder")}if(this.footer){this.footer.addClass(this.footerCls+"-noborder")}if(this.tbar){this.tbar.addClass(this.tbarCls+"-noborder")}if(this.bbar){this.bbar.addClass(this.bbarCls+"-noborder")}}if(this.bodyBorder===false){this.body.addClass(this.bodyCls+"-noborder")}if(this.bodyStyle){this.body.applyStyles(this.bodyStyle)}this.bwrap.enableDisplayMode("block");if(this.header){this.header.unselectable();if(this.headerAsText){this.header.dom.innerHTML="<span class=\""+this.headerTextCls+"\">"+this.header.dom.innerHTML+"</span>";if(this.iconCls){this.setIconClass(this.iconCls)}}}if(this.floating){this.makeFloating(this.floating)}if(this.collapsible){this.tools=this.tools?this.tools.slice(0):[];if(!this.hideCollapseTool){this.tools[this.collapseFirst?"unshift":"push"]({id:"toggle",handler:this.toggleCollapse,scope:this})}if(this.titleCollapse&&this.header){this.header.on("click",this.toggleCollapse,this);this.header.setStyle("cursor","pointer")}}if(this.tools){var J=this.tools;this.tools={};this.addTool.apply(this,J)}else{this.tools={}}if(this.buttons&&this.buttons.length>0){var D=this.footer.createChild({cls:"x-panel-btns-ct",cn:{cls:"x-panel-btns x-panel-btns-"+this.buttonAlign,html:"<table cellspacing=\"0\"><tbody><tr></tr></tbody></table><div class=\"x-clear\"></div>"}},null,true);var L=D.getElementsByTagName("tr")[0];for(var F=0,I=this.buttons.length;F<I;F++){var N=this.buttons[F];var C=document.createElement("td");C.className="x-panel-btn-td";N.render(L.appendChild(C))}}if(this.tbar&&this.topToolbar){if(Ext.isArray(this.topToolbar)){this.topToolbar=new Ext.Toolbar(this.topToolbar)}this.topToolbar.render(this.tbar);this.topToolbar.ownerCt=this}if(this.bbar&&this.bottomToolbar){if(Ext.isArray(this.bottomToolbar)){this.bottomToolbar=new Ext.Toolbar(this.bottomToolbar)}this.bottomToolbar.render(this.bbar);this.bottomToolbar.ownerCt=this}},setIconClass:function(B){var A=this.iconCls;this.iconCls=B;if(this.rendered&&this.header){if(this.frame){this.header.addClass("x-panel-icon");this.header.replaceClass(A,this.iconCls)}else{var D=this.header.dom;var C=D.firstChild&&String(D.firstChild.tagName).toLowerCase()=="img"?D.firstChild:null;if(C){Ext.fly(C).replaceClass(A,this.iconCls)}else{Ext.DomHelper.insertBefore(D.firstChild,{tag:"img",src:Ext.BLANK_IMAGE_URL,cls:"x-panel-inline-icon "+this.iconCls})}}}},makeFloating:function(A){this.floating=true;this.el=new Ext.Layer(typeof A=="object"?A:{shadow:this.shadow!==undefined?this.shadow:"sides",shadowOffset:this.shadowOffset,constrain:false,shim:this.shim===false?false:undefined},this.el)},getTopToolbar:function(){return this.topToolbar},getBottomToolbar:function(){return this.bottomToolbar},addButton:function(A,D,C){var E={handler:D,scope:C,minWidth:this.minButtonWidth,hideParent:true};if(typeof A=="string"){E.text=A}else{Ext.apply(E,A)}var B=new Ext.Button(E);B.ownerCt=this;if(!this.buttons){this.buttons=[]}this.buttons.push(B);return B},addTool:function(){if(!this[this.toolTarget]){return } for(var E=0,C=arguments,B=C.length;E<B;E++){var A=C[E],G="x-tool-"+A.id+"-over";var D=this.toolTemplate.insertFirst((A.align!=="left")?this[this.toolTarget]:this[this.toolTarget].child("span"),A,true);this.tools[A.id]=D;D.enableDisplayMode("block");D.on("click",this.createToolHandler(D,A,G,this));if(A.on){D.on(A.on)}if(A.hidden){D.hide()}if(A.qtip){if(typeof A.qtip=="object"){Ext.QuickTips.register(Ext.apply({target:D.id},A.qtip))}else{D.dom.qtip=A.qtip}}D.addClassOnOver(G)}},onShow:function(){if(this.floating){return this.el.show()}Ext.Panel.superclass.onShow.call(this)},onHide:function(){if(this.floating){return this.el.hide()}Ext.Panel.superclass.onHide.call(this)},createToolHandler:function(C,A,D,B){return function(E){C.removeClass(D);E.stopEvent();if(A.handler){A.handler.call(A.scope||C,E,C,B)}}},afterRender:function(){if(this.fromMarkup&&this.height===undefined&&!this.autoHeight){this.height=this.el.getHeight()}if(this.floating&&!this.hidden&&!this.initHidden){this.el.show()}if(this.title){this.setTitle(this.title)}this.setAutoScroll();if(this.html){this.body.update(typeof this.html=="object"?Ext.DomHelper.markup(this.html):this.html);delete this.html}if(this.contentEl){var A=Ext.getDom(this.contentEl);Ext.fly(A).removeClass(["x-hidden","x-hide-display"]);this.body.dom.appendChild(A)}if(this.collapsed){this.collapsed=false;this.collapse(false)}Ext.Panel.superclass.afterRender.call(this);this.initEvents()},setAutoScroll:function(){if(this.rendered&&this.autoScroll){var A=this.body||this.el;if(A){A.setOverflow("auto")}}},getKeyMap:function(){if(!this.keyMap){this.keyMap=new Ext.KeyMap(this.el,this.keys)}return this.keyMap},initEvents:function(){if(this.keys){this.getKeyMap()}if(this.draggable){this.initDraggable()}},initDraggable:function(){this.dd=new Ext.Panel.DD(this,typeof this.draggable=="boolean"?null:this.draggable)},beforeEffect:function(){if(this.floating){this.el.beforeAction()}this.el.addClass("x-panel-animated")},afterEffect:function(){this.syncShadow();this.el.removeClass("x-panel-animated")},createEffect:function(B,A,C){var D={scope:C,block:true};if(B===true){D.callback=A;return D}else{if(!B.callback){D.callback=A}else{D.callback=function(){A.call(C);Ext.callback(B.callback,B.scope)}}}return Ext.applyIf(D,B)},collapse:function(B){if(this.collapsed||this.el.hasFxBlock()||this.fireEvent("beforecollapse",this,B)===false){return }var A=B===true||(B!==false&&this.animCollapse);this.beforeEffect();this.onCollapse(A,B);return this},onCollapse:function(A,B){if(A){this[this.collapseEl].slideOut(this.slideAnchor,Ext.apply(this.createEffect(B||true,this.afterCollapse,this),this.collapseDefaults))}else{this[this.collapseEl].hide();this.afterCollapse()}},afterCollapse:function(){this.collapsed=true;this.el.addClass(this.collapsedCls);this.afterEffect();this.fireEvent("collapse",this)},expand:function(B){if(!this.collapsed||this.el.hasFxBlock()||this.fireEvent("beforeexpand",this,B)===false){return }var A=B===true||(B!==false&&this.animCollapse);this.el.removeClass(this.collapsedCls);this.beforeEffect();this.onExpand(A,B);return this},onExpand:function(A,B){if(A){this[this.collapseEl].slideIn(this.slideAnchor,Ext.apply(this.createEffect(B||true,this.afterExpand,this),this.expandDefaults))}else{this[this.collapseEl].show();this.afterExpand()}},afterExpand:function(){this.collapsed=false;this.afterEffect();this.fireEvent("expand",this)},toggleCollapse:function(A){this[this.collapsed?"expand":"collapse"](A);return this},onDisable:function(){if(this.rendered&&this.maskDisabled){this.el.mask()}Ext.Panel.superclass.onDisable.call(this)},onEnable:function(){if(this.rendered&&this.maskDisabled){this.el.unmask()}Ext.Panel.superclass.onEnable.call(this)},onResize:function(A,B){if(A!==undefined||B!==undefined){if(!this.collapsed){if(typeof A=="number"){this.body.setWidth(this.adjustBodyWidth(A-this.getFrameWidth()))}else{if(A=="auto"){this.body.setWidth(A)}}if(typeof B=="number"){this.body.setHeight(this.adjustBodyHeight(B-this.getFrameHeight()))}else{if(B=="auto"){this.body.setHeight(B)}}if(this.disabled&&this.el._mask){this.el._mask.setSize(this.el.dom.clientWidth,this.el.getHeight())}}else{this.queuedBodySize={width:A,height:B};if(!this.queuedExpand&&this.allowQueuedExpand!==false){this.queuedExpand=true;this.on("expand",function(){delete this.queuedExpand;this.onResize(this.queuedBodySize.width,this.queuedBodySize.height);this.doLayout()},this,{single:true})}}this.fireEvent("bodyresize",this,A,B)}this.syncShadow()},adjustBodyHeight:function(A){return A},adjustBodyWidth:function(A){return A},onPosition:function(){this.syncShadow()},getFrameWidth:function(){var B=this.el.getFrameWidth("lr");if(this.frame){var A=this.bwrap.dom.firstChild;B+=(Ext.fly(A).getFrameWidth("l")+Ext.fly(A.firstChild).getFrameWidth("r"));var C=this.bwrap.dom.firstChild.firstChild.firstChild;B+=Ext.fly(C).getFrameWidth("lr")}return B},getFrameHeight:function(){var A=this.el.getFrameWidth("tb");A+=(this.tbar?this.tbar.getHeight():0)+(this.bbar?this.bbar.getHeight():0);if(this.frame){var C=this.el.dom.firstChild;var D=this.bwrap.dom.lastChild;A+=(C.offsetHeight+D.offsetHeight);var B=this.bwrap.dom.firstChild.firstChild.firstChild;A+=Ext.fly(B).getFrameWidth("tb")}else{A+=(this.header?this.header.getHeight():0)+(this.footer?this.footer.getHeight():0)}return A},getInnerWidth:function(){return this.getSize().width-this.getFrameWidth()},getInnerHeight:function(){return this.getSize().height-this.getFrameHeight()},syncShadow:function(){if(this.floating){this.el.sync(true)}},getLayoutTarget:function(){return this.body},setTitle:function(B,A){this.title=B;if(this.header&&this.headerAsText){this.header.child("span").update(B)}if(A){this.setIconClass(A)}this.fireEvent("titlechange",this,B);return this},getUpdater:function(){return this.body.getUpdater()},load:function(){var A=this.body.getUpdater();A.update.apply(A,arguments);return this},beforeDestroy:function(){Ext.Element.uncache(this.header,this.tbar,this.bbar,this.footer,this.body);if(this.tools){for(var B in this.tools){Ext.destroy(this.tools[B])}}if(this.buttons){for(var A in this.buttons){Ext.destroy(this.buttons[A])}}Ext.destroy(this.topToolbar,this.bottomToolbar);Ext.Panel.superclass.beforeDestroy.call(this)},createClasses:function(){this.headerCls=this.baseCls+"-header";this.headerTextCls=this.baseCls+"-header-text";this.bwrapCls=this.baseCls+"-bwrap";this.tbarCls=this.baseCls+"-tbar";this.bodyCls=this.baseCls+"-body";this.bbarCls=this.baseCls+"-bbar";this.footerCls=this.baseCls+"-footer"},createGhost:function(A,E,B){var D=document.createElement("div");D.className="x-panel-ghost "+(A?A:"");if(this.header){D.appendChild(this.el.dom.firstChild.cloneNode(true))}Ext.fly(D.appendChild(document.createElement("ul"))).setHeight(this.bwrap.getHeight());D.style.width=this.el.dom.offsetWidth+"px";if(!B){this.container.dom.appendChild(D)}else{Ext.getDom(B).appendChild(D)}if(E!==false&&this.el.useShim!==false){var C=new Ext.Layer({shadow:false,useDisplay:true,constrain:false},D);C.show();return C}else{return new Ext.Element(D)}},doAutoLoad:function(){this.body.load(typeof this.autoLoad=="object"?this.autoLoad:{url:this.autoLoad})}});Ext.reg("panel",Ext.Panel);

Ext.tree.TreePanel=Ext.extend(Ext.Panel,{rootVisible:true,lines:true,enableDD:false,pathSeparator:"/",initComponent:function(){if(!this.eventModel){this.eventModel=new Ext.tree.TreeEventModel(this)}var A=this.loader;if(!A){A=new Ext.tree.TreeLoader({dataUrl:this.dataUrl})}else{if(typeof A=="object"&&!A.load){A=new Ext.tree.TreeLoader(A)}}this.loader=A;this.nodeHash={};if(this.root){this.setRootNode(this.root)}this.addEvents("append","remove","movenode","insert","beforeappend","beforeremove","beforemovenode","beforeinsert","beforeload","load","textchange","beforeexpandnode","beforecollapsenode","expandnode","disabledchange","collapsenode","beforeclick","click","checkchange","dblclick","contextmenu","beforechildrenrendered","nodedrop");if(this.singleExpand){this.on("beforeexpandnode",this.restrictExpand,this)}},proxyNodeEvent:function(C,B,A,G,F,E,D){if(C=="collapse"||C=="expand"||C=="beforecollapse"||C=="beforeexpand"||C=="move"||C=="beforemove"){C=C+"node"}return this.fireEvent(C,B,A,G,F,E,D)},getRootNode:function(){return this.root},setRootNode:function(B){if(!B.render){B=this.loader.createNode(B)}this.root=B;B.ownerTree=this;B.isRoot=true;this.registerNode(B);if(!this.rootVisible){var A=B.attributes.uiProvider;B.ui=A?new A(B):new Ext.tree.RootTreeNodeUI(B)}return B},getNodeById:function(A){return this.nodeHash[A]},registerNode:function(A){this.nodeHash[A.id]=A},unregisterNode:function(A){delete this.nodeHash[A.id]},toString:function(){return"[Tree"+(this.id?" "+this.id:"")+"]"},restrictExpand:function(A){var B=A.parentNode;if(B){if(B.expandedChild&&B.expandedChild.parentNode==B){B.expandedChild.collapse()}B.expandedChild=A}},getChecked:function(A,B){B=B||this.root;var C=[];var D=function(){if(this.attributes.checked){C.push(!A?this:(A=="id"?this.id:this.attributes[A]))}};B.cascade(D);return C},getEl:function(){return this.el},getLoader:function(){return this.loader},expandAll:function(){this.root.expand(true)},collapseAll:function(){this.root.collapse(true)},getSelectionModel:function(){if(!this.selModel){this.selModel=new Ext.tree.DefaultSelectionModel()}return this.selModel},expandPath:function(F,A,G){A=A||"id";var D=F.split(this.pathSeparator);var C=this.root;if(C.attributes[A]!=D[1]){if(G){G(false,null)}return }var B=1;var E=function(){if(++B==D.length){if(G){G(true,C)}return }var H=C.findChild(A,D[B]);if(!H){if(G){G(false,C)}return }C=H;H.expand(false,false,E)};C.expand(false,false,E)},selectPath:function(E,A,F){A=A||"id";var C=E.split(this.pathSeparator);var B=C.pop();if(C.length>0){var D=function(H,G){if(H&&G){var I=G.findChild(A,B);if(I){I.select();if(F){F(true,I)}}else{if(F){F(false,I)}}}else{if(F){F(false,I)}}};this.expandPath(C.join(this.pathSeparator),A,D)}else{this.root.select();if(F){F(true,this.root)}}},getTreeEl:function(){return this.body},onRender:function(B,A){Ext.tree.TreePanel.superclass.onRender.call(this,B,A);this.el.addClass("x-tree");this.innerCt=this.body.createChild({tag:"ul",cls:"x-tree-root-ct "+(this.useArrows?"x-tree-arrows":this.lines?"x-tree-lines":"x-tree-no-lines")})},initEvents:function(){Ext.tree.TreePanel.superclass.initEvents.call(this);if(this.containerScroll){Ext.dd.ScrollManager.register(this.body)}if((this.enableDD||this.enableDrop)&&!this.dropZone){this.dropZone=new Ext.tree.TreeDropZone(this,this.dropConfig||{ddGroup:this.ddGroup||"TreeDD",appendOnly:this.ddAppendOnly===true})}if((this.enableDD||this.enableDrag)&&!this.dragZone){this.dragZone=new Ext.tree.TreeDragZone(this,this.dragConfig||{ddGroup:this.ddGroup||"TreeDD",scroll:this.ddScroll})}this.getSelectionModel().init(this)},afterRender:function(){Ext.tree.TreePanel.superclass.afterRender.call(this);this.root.render();if(!this.rootVisible){this.root.renderChildren()}},onDestroy:function(){if(this.rendered){this.body.removeAllListeners();Ext.dd.ScrollManager.unregister(this.body);if(this.dropZone){this.dropZone.unreg()}if(this.dragZone){this.dragZone.unreg()}}this.root.destroy();this.nodeHash=null;Ext.tree.TreePanel.superclass.onDestroy.call(this)}});Ext.tree.TreePanel.nodeTypes={};

Ext.tree.TreeEventModel=function(A){this.tree=A;this.tree.on("render",this.initEvents,this)};Ext.tree.TreeEventModel.prototype={initEvents:function(){var A=this.tree.getTreeEl();A.on("click",this.delegateClick,this);if(this.tree.trackMouseOver!==false){A.on("mouseover",this.delegateOver,this);A.on("mouseout",this.delegateOut,this)}A.on("dblclick",this.delegateDblClick,this);A.on("contextmenu",this.delegateContextMenu,this)},getNode:function(B){var A;if(A=B.getTarget(".x-tree-node-el",10)){var C=Ext.fly(A,"_treeEvents").getAttributeNS("ext","tree-node-id");if(C){return this.tree.getNodeById(C)}}return null},getNodeTarget:function(B){var A=B.getTarget(".x-tree-node-icon",1);if(!A){A=B.getTarget(".x-tree-node-el",6)}return A},delegateOut:function(B,A){if(!this.beforeEvent(B)){return }if(B.getTarget(".x-tree-ec-icon",1)){var C=this.getNode(B);this.onIconOut(B,C);if(C==this.lastEcOver){delete this.lastEcOver}}if((A=this.getNodeTarget(B))&&!B.within(A,true)){this.onNodeOut(B,this.getNode(B))}},delegateOver:function(B,A){if(!this.beforeEvent(B)){return }if(this.lastEcOver){this.onIconOut(B,this.lastEcOver);delete this.lastEcOver}if(B.getTarget(".x-tree-ec-icon",1)){this.lastEcOver=this.getNode(B);this.onIconOver(B,this.lastEcOver)}if(A=this.getNodeTarget(B)){this.onNodeOver(B,this.getNode(B))}},delegateClick:function(B,A){if(!this.beforeEvent(B)){return }if(B.getTarget("input[type=checkbox]",1)){this.onCheckboxClick(B,this.getNode(B))}else{if(B.getTarget(".x-tree-ec-icon",1)){this.onIconClick(B,this.getNode(B))}else{if(this.getNodeTarget(B)){this.onNodeClick(B,this.getNode(B))}}}},delegateDblClick:function(B,A){if(this.beforeEvent(B)&&this.getNodeTarget(B)){this.onNodeDblClick(B,this.getNode(B))}},delegateContextMenu:function(B,A){if(this.beforeEvent(B)&&this.getNodeTarget(B)){this.onNodeContextMenu(B,this.getNode(B))}},onNodeClick:function(B,A){A.ui.onClick(B)},onNodeOver:function(B,A){A.ui.onOver(B)},onNodeOut:function(B,A){A.ui.onOut(B)},onIconOver:function(B,A){A.ui.addClass("x-tree-ec-over")},onIconOut:function(B,A){A.ui.removeClass("x-tree-ec-over")},onIconClick:function(B,A){A.ui.ecClick(B)},onCheckboxClick:function(B,A){A.ui.onCheckChange(B)},onNodeDblClick:function(B,A){A.ui.onDblClick(B)},onNodeContextMenu:function(B,A){A.ui.onContextMenu(B)},beforeEvent:function(A){if(this.disabled){A.stopEvent();return false}return true},disable:function(){this.disabled=true},enable:function(){this.disabled=false}};

Ext.tree.DefaultSelectionModel=function(A){this.selNode=null;this.addEvents("selectionchange","beforeselect");Ext.apply(this,A);Ext.tree.DefaultSelectionModel.superclass.constructor.call(this)};Ext.extend(Ext.tree.DefaultSelectionModel,Ext.util.Observable,{init:function(A){this.tree=A;A.getTreeEl().on("keydown",this.onKeyDown,this);A.on("click",this.onNodeClick,this)},onNodeClick:function(A,B){this.select(A)},select:function(B){var A=this.selNode;if(A!=B&&this.fireEvent("beforeselect",this,B,A)!==false){if(A){A.ui.onSelectedChange(false)}this.selNode=B;B.ui.onSelectedChange(true);this.fireEvent("selectionchange",this,B,A)}return B},unselect:function(A){if(this.selNode==A){this.clearSelections()}},clearSelections:function(){var A=this.selNode;if(A){A.ui.onSelectedChange(false);this.selNode=null;this.fireEvent("selectionchange",this,null)}return A},getSelectedNode:function(){return this.selNode},isSelected:function(A){return this.selNode==A},selectPrevious:function(){var A=this.selNode||this.lastSelNode;if(!A){return null}var C=A.previousSibling;if(C){if(!C.isExpanded()||C.childNodes.length<1){return this.select(C)}else{var B=C.lastChild;while(B&&B.isExpanded()&&B.childNodes.length>0){B=B.lastChild}return this.select(B)}}else{if(A.parentNode&&(this.tree.rootVisible||!A.parentNode.isRoot)){return this.select(A.parentNode)}}return null},selectNext:function(){var B=this.selNode||this.lastSelNode;if(!B){return null}if(B.firstChild&&B.isExpanded()){return this.select(B.firstChild)}else{if(B.nextSibling){return this.select(B.nextSibling)}else{if(B.parentNode){var A=null;B.parentNode.bubble(function(){if(this.nextSibling){A=this.getOwnerTree().selModel.select(this.nextSibling);return false}});return A}}}return null},onKeyDown:function(C){var B=this.selNode||this.lastSelNode;var D=this;if(!B){return }var A=C.getKey();switch(A){case C.DOWN:C.stopEvent();this.selectNext();break;case C.UP:C.stopEvent();this.selectPrevious();break;case C.RIGHT:C.preventDefault();if(B.hasChildNodes()){if(!B.isExpanded()){B.expand()}else{if(B.firstChild){this.select(B.firstChild,C)}}}break;case C.LEFT:C.preventDefault();if(B.hasChildNodes()&&B.isExpanded()){B.collapse()}else{if(B.parentNode&&(this.tree.rootVisible||B.parentNode!=this.tree.getRootNode())){this.select(B.parentNode,C)}}break}}});Ext.tree.MultiSelectionModel=function(A){this.selNodes=[];this.selMap={};this.addEvents("selectionchange");Ext.apply(this,A);Ext.tree.MultiSelectionModel.superclass.constructor.call(this)};Ext.extend(Ext.tree.MultiSelectionModel,Ext.util.Observable,{init:function(A){this.tree=A;A.getTreeEl().on("keydown",this.onKeyDown,this);A.on("click",this.onNodeClick,this)},onNodeClick:function(A,B){this.select(A,B,B.ctrlKey)},select:function(A,C,B){if(B!==true){this.clearSelections(true)}if(this.isSelected(A)){this.lastSelNode=A;return A}this.selNodes.push(A);this.selMap[A.id]=A;this.lastSelNode=A;A.ui.onSelectedChange(true);this.fireEvent("selectionchange",this,this.selNodes);return A},unselect:function(B){if(this.selMap[B.id]){B.ui.onSelectedChange(false);var C=this.selNodes;var A=C.indexOf(B);if(A!=-1){this.selNodes.splice(A,1)}delete this.selMap[B.id];this.fireEvent("selectionchange",this,this.selNodes)}},clearSelections:function(B){var D=this.selNodes;if(D.length>0){for(var C=0,A=D.length;C<A;C++){D[C].ui.onSelectedChange(false)}this.selNodes=[];this.selMap={};if(B!==true){this.fireEvent("selectionchange",this,this.selNodes)}}},isSelected:function(A){return this.selMap[A.id]?true:false},getSelectedNodes:function(){return this.selNodes},onKeyDown:Ext.tree.DefaultSelectionModel.prototype.onKeyDown,selectNext:Ext.tree.DefaultSelectionModel.prototype.selectNext,selectPrevious:Ext.tree.DefaultSelectionModel.prototype.selectPrevious});

Ext.tree.TreeNode=function(A){A=A||{};if(typeof A=="string"){A={text:A}}this.childrenRendered=false;this.rendered=false;Ext.tree.TreeNode.superclass.constructor.call(this,A);this.expanded=A.expanded===true;this.isTarget=A.isTarget!==false;this.draggable=A.draggable!==false&&A.allowDrag!==false;this.allowChildren=A.allowChildren!==false&&A.allowDrop!==false;this.text=A.text;this.disabled=A.disabled===true;this.addEvents("textchange","beforeexpand","beforecollapse","expand","disabledchange","collapse","beforeclick","click","checkchange","dblclick","contextmenu","beforechildrenrendered");var B=this.attributes.uiProvider||this.defaultUI||Ext.tree.TreeNodeUI;this.ui=new B(this)};Ext.extend(Ext.tree.TreeNode,Ext.data.Node,{preventHScroll:true,isExpanded:function(){return this.expanded},getUI:function(){return this.ui},getLoader:function(){var A;return this.loader||((A=this.getOwnerTree())&&A.loader?A.loader:new Ext.tree.TreeLoader())},setFirstChild:function(A){var B=this.firstChild;Ext.tree.TreeNode.superclass.setFirstChild.call(this,A);if(this.childrenRendered&&B&&A!=B){B.renderIndent(true,true)}if(this.rendered){this.renderIndent(true,true)}},setLastChild:function(B){var A=this.lastChild;Ext.tree.TreeNode.superclass.setLastChild.call(this,B);if(this.childrenRendered&&A&&B!=A){A.renderIndent(true,true)}if(this.rendered){this.renderIndent(true,true)}},appendChild:function(B){if(!B.render&&!Ext.isArray(B)){B=this.getLoader().createNode(B)}var A=Ext.tree.TreeNode.superclass.appendChild.call(this,B);if(A&&this.childrenRendered){A.render()}this.ui.updateExpandIcon();return A},removeChild:function(A){this.ownerTree.getSelectionModel().unselect(A);Ext.tree.TreeNode.superclass.removeChild.apply(this,arguments);if(this.childrenRendered){A.ui.remove()}if(this.childNodes.length<1){this.collapse(false,false)}else{this.ui.updateExpandIcon()}if(!this.firstChild&&!this.isHiddenRoot()){this.childrenRendered=false}return A},insertBefore:function(C,A){if(!C.render){C=this.getLoader().createNode(C)}var B=Ext.tree.TreeNode.superclass.insertBefore.apply(this,arguments);if(B&&A&&this.childrenRendered){C.render()}this.ui.updateExpandIcon();return B},setText:function(B){var A=this.text;this.text=B;this.attributes.text=B;if(this.rendered){this.ui.onTextChange(this,B,A)}this.fireEvent("textchange",this,B,A)},select:function(){this.getOwnerTree().getSelectionModel().select(this)},unselect:function(){this.getOwnerTree().getSelectionModel().unselect(this)},isSelected:function(){return this.getOwnerTree().getSelectionModel().isSelected(this)},expand:function(A,B,C){if(!this.expanded){if(this.fireEvent("beforeexpand",this,A,B)===false){return }if(!this.childrenRendered){this.renderChildren()}this.expanded=true;if(!this.isHiddenRoot()&&(this.getOwnerTree().animate&&B!==false)||B){this.ui.animExpand(function(){this.fireEvent("expand",this);if(typeof C=="function"){C(this)}if(A===true){this.expandChildNodes(true)}}.createDelegate(this));return }else{this.ui.expand();this.fireEvent("expand",this);if(typeof C=="function"){C(this)}}}else{if(typeof C=="function"){C(this)}}if(A===true){this.expandChildNodes(true)}},isHiddenRoot:function(){return this.isRoot&&!this.getOwnerTree().rootVisible},collapse:function(B,E){if(this.expanded&&!this.isHiddenRoot()){if(this.fireEvent("beforecollapse",this,B,E)===false){return }this.expanded=false;if((this.getOwnerTree().animate&&E!==false)||E){this.ui.animCollapse(function(){this.fireEvent("collapse",this);if(B===true){this.collapseChildNodes(true)}}.createDelegate(this));return }else{this.ui.collapse();this.fireEvent("collapse",this)}}if(B===true){var D=this.childNodes;for(var C=0,A=D.length;C<A;C++){D[C].collapse(true,false)}}},delayedExpand:function(A){if(!this.expandProcId){this.expandProcId=this.expand.defer(A,this)}},cancelExpand:function(){if(this.expandProcId){clearTimeout(this.expandProcId)}this.expandProcId=false},toggle:function(){if(this.expanded){this.collapse()}else{this.expand()}},ensureVisible:function(B){var A=this.getOwnerTree();A.expandPath(this.parentNode.getPath(),false,function(){var C=A.getNodeById(this.id);A.getTreeEl().scrollChildIntoView(C.ui.anchor);Ext.callback(B)}.createDelegate(this))},expandChildNodes:function(B){var D=this.childNodes;for(var C=0,A=D.length;C<A;C++){D[C].expand(B)}},collapseChildNodes:function(B){var D=this.childNodes;for(var C=0,A=D.length;C<A;C++){D[C].collapse(B)}},disable:function(){this.disabled=true;this.unselect();if(this.rendered&&this.ui.onDisableChange){this.ui.onDisableChange(this,true)}this.fireEvent("disabledchange",this,true)},enable:function(){this.disabled=false;if(this.rendered&&this.ui.onDisableChange){this.ui.onDisableChange(this,false)}this.fireEvent("disabledchange",this,false)},renderChildren:function(B){if(B!==false){this.fireEvent("beforechildrenrendered",this)}var D=this.childNodes;for(var C=0,A=D.length;C<A;C++){D[C].render(true)}this.childrenRendered=true},sort:function(E,D){Ext.tree.TreeNode.superclass.sort.apply(this,arguments);if(this.childrenRendered){var C=this.childNodes;for(var B=0,A=C.length;B<A;B++){C[B].render(true)}}},render:function(A){this.ui.render(A);if(!this.rendered){this.getOwnerTree().registerNode(this);this.rendered=true;if(this.expanded){this.expanded=false;this.expand(false,false)}}},renderIndent:function(B,E){if(E){this.ui.childIndent=null}this.ui.renderIndent();if(B===true&&this.childrenRendered){var D=this.childNodes;for(var C=0,A=D.length;C<A;C++){D[C].renderIndent(true,E)}}},beginUpdate:function(){this.childrenRendered=false},endUpdate:function(){if(this.expanded&&this.rendered){this.renderChildren()}},destroy:function(){if(this.childNodes){for(var B=0,A=this.childNodes.length;B<A;B++){this.childNodes[B].destroy()}this.childNodes=null}if(this.ui.destroy){this.ui.destroy()}}});Ext.tree.TreePanel.nodeTypes.node=Ext.tree.TreeNode;

Ext.tree.TreeNodeUI=function(A){this.node=A;this.rendered=false;this.animating=false;this.wasLeaf=true;this.ecc="x-tree-ec-icon x-tree-elbow";this.emptyIcon=Ext.BLANK_IMAGE_URL};Ext.tree.TreeNodeUI.prototype={removeChild:function(A){if(this.rendered){this.ctNode.removeChild(A.ui.getEl())}},beforeLoad:function(){this.addClass("x-tree-node-loading")},afterLoad:function(){this.removeClass("x-tree-node-loading")},onTextChange:function(B,C,A){if(this.rendered){this.textNode.innerHTML=C}},onDisableChange:function(A,B){this.disabled=B;if(this.checkbox){this.checkbox.disabled=B}if(B){this.addClass("x-tree-node-disabled")}else{this.removeClass("x-tree-node-disabled")}},onSelectedChange:function(A){if(A){this.focus();this.addClass("x-tree-selected")}else{this.removeClass("x-tree-selected")}},onMove:function(A,G,E,F,D,B){this.childIndent=null;if(this.rendered){var H=F.ui.getContainer();if(!H){this.holder=document.createElement("div");this.holder.appendChild(this.wrap);return }var C=B?B.ui.getEl():null;if(C){H.insertBefore(this.wrap,C)}else{H.appendChild(this.wrap)}this.node.renderIndent(true)}},addClass:function(A){if(this.elNode){Ext.fly(this.elNode).addClass(A)}},removeClass:function(A){if(this.elNode){Ext.fly(this.elNode).removeClass(A)}},remove:function(){if(this.rendered){this.holder=document.createElement("div");this.holder.appendChild(this.wrap)}},fireEvent:function(){return this.node.fireEvent.apply(this.node,arguments)},initEvents:function(){this.node.on("move",this.onMove,this);if(this.node.disabled){this.addClass("x-tree-node-disabled");if(this.checkbox){this.checkbox.disabled=true}}if(this.node.hidden){this.hide()}var B=this.node.getOwnerTree();var A=B.enableDD||B.enableDrag||B.enableDrop;if(A&&(!this.node.isRoot||B.rootVisible)){Ext.dd.Registry.register(this.elNode,{node:this.node,handles:this.getDDHandles(),isHandle:false})}},getDDHandles:function(){return[this.iconNode,this.textNode,this.elNode]},hide:function(){this.node.hidden=true;if(this.wrap){this.wrap.style.display="none"}},show:function(){this.node.hidden=false;if(this.wrap){this.wrap.style.display=""}},onContextMenu:function(A){if(this.node.hasListener("contextmenu")||this.node.getOwnerTree().hasListener("contextmenu")){A.preventDefault();this.focus();this.fireEvent("contextmenu",this.node,A)}},onClick:function(B){if(this.dropping){B.stopEvent();return }if(this.fireEvent("beforeclick",this.node,B)!==false){var A=B.getTarget("a");if(!this.disabled&&this.node.attributes.href&&A){this.fireEvent("click",this.node,B);return }else{if(A&&B.ctrlKey){B.stopEvent()}}B.preventDefault();if(this.disabled){return }if(this.node.attributes.singleClickExpand&&!this.animating&&this.node.isExpandable()){this.node.toggle()}this.fireEvent("click",this.node,B)}else{B.stopEvent()}},onDblClick:function(A){A.preventDefault();if(this.disabled){return }if(this.checkbox){this.toggleCheck()}if(!this.animating&&this.node.isExpandable()){this.node.toggle()}this.fireEvent("dblclick",this.node,A)},onOver:function(A){this.addClass("x-tree-node-over")},onOut:function(A){this.removeClass("x-tree-node-over")},onCheckChange:function(){var A=this.checkbox.checked;this.checkbox.defaultChecked=A;this.node.attributes.checked=A;this.fireEvent("checkchange",this.node,A)},ecClick:function(A){if(!this.animating&&this.node.isExpandable()){this.node.toggle()}},startDrop:function(){this.dropping=true},endDrop:function(){setTimeout(function(){this.dropping=false}.createDelegate(this),50)},expand:function(){this.updateExpandIcon();this.ctNode.style.display=""},focus:function(){if(!this.node.preventHScroll){try{this.anchor.focus()}catch(C){}}else{if(!Ext.isIE){try{var B=this.node.getOwnerTree().getTreeEl().dom;var A=B.scrollLeft;this.anchor.focus();B.scrollLeft=A}catch(C){}}}},toggleCheck:function(B){var A=this.checkbox;if(A){A.checked=(B===undefined?!A.checked:B);this.onCheckChange()}},blur:function(){try{this.anchor.blur()}catch(A){}},animExpand:function(B){var A=Ext.get(this.ctNode);A.stopFx();if(!this.node.isExpandable()){this.updateExpandIcon();this.ctNode.style.display="";Ext.callback(B);return }this.animating=true;this.updateExpandIcon();A.slideIn("t",{callback:function(){this.animating=false;Ext.callback(B)},scope:this,duration:this.node.ownerTree.duration||0.25})},highlight:function(){var A=this.node.getOwnerTree();Ext.fly(this.wrap).highlight(A.hlColor||"C3DAF9",{endColor:A.hlBaseColor})},collapse:function(){this.updateExpandIcon();this.ctNode.style.display="none"},animCollapse:function(B){var A=Ext.get(this.ctNode);A.enableDisplayMode("block");A.stopFx();this.animating=true;this.updateExpandIcon();A.slideOut("t",{callback:function(){this.animating=false;Ext.callback(B)},scope:this,duration:this.node.ownerTree.duration||0.25})},getContainer:function(){return this.ctNode},getEl:function(){return this.wrap},appendDDGhost:function(A){A.appendChild(this.elNode.cloneNode(true))},getDDRepairXY:function(){return Ext.lib.Dom.getXY(this.iconNode)},onRender:function(){this.render()},render:function(B){var D=this.node,A=D.attributes;var C=D.parentNode?D.parentNode.ui.getContainer():D.ownerTree.innerCt.dom;if(!this.rendered){this.rendered=true;this.renderElements(D,A,C,B);if(A.qtip){if(this.textNode.setAttributeNS){this.textNode.setAttributeNS("ext","qtip",A.qtip);if(A.qtipTitle){this.textNode.setAttributeNS("ext","qtitle",A.qtipTitle)}}else{this.textNode.setAttribute("ext:qtip",A.qtip);if(A.qtipTitle){this.textNode.setAttribute("ext:qtitle",A.qtipTitle)}}}else{if(A.qtipCfg){A.qtipCfg.target=Ext.id(this.textNode);Ext.QuickTips.register(A.qtipCfg)}}this.initEvents();if(!this.node.expanded){this.updateExpandIcon(true)}}else{if(B===true){C.appendChild(this.wrap)}}},renderElements:function(D,I,H,J){this.indentMarkup=D.parentNode?D.parentNode.ui.getChildIndent():"";var E=typeof I.checked=="boolean";var B=I.href?I.href:Ext.isGecko?"":"#";var C=["<li class=\"x-tree-node\"><div ext:tree-node-id=\"",D.id,"\" class=\"x-tree-node-el x-tree-node-leaf x-unselectable ",I.cls,"\" unselectable=\"on\">","<span class=\"x-tree-node-indent\">",this.indentMarkup,"</span>","<img src=\"",this.emptyIcon,"\" class=\"x-tree-ec-icon x-tree-elbow\" />","<img src=\"",I.icon||this.emptyIcon,"\" class=\"x-tree-node-icon",(I.icon?" x-tree-node-inline-icon":""),(I.iconCls?" "+I.iconCls:""),"\" unselectable=\"on\" />",E?("<input class=\"x-tree-node-cb\" type=\"checkbox\" "+(I.checked?"checked=\"checked\" />":"/>")):"","<a hidefocus=\"on\" class=\"x-tree-node-anchor\" href=\"",B,"\" tabIndex=\"1\" ",I.hrefTarget?" target=\""+I.hrefTarget+"\"":"","><span unselectable=\"on\">",D.text,"</span></a></div>","<ul class=\"x-tree-node-ct\" style=\"display:none;\"></ul>","</li>"].join("");var A;if(J!==true&&D.nextSibling&&(A=D.nextSibling.ui.getEl())){this.wrap=Ext.DomHelper.insertHtml("beforeBegin",A,C)}else{this.wrap=Ext.DomHelper.insertHtml("beforeEnd",H,C)}this.elNode=this.wrap.childNodes[0];this.ctNode=this.wrap.childNodes[1];var G=this.elNode.childNodes;this.indentNode=G[0];this.ecNode=G[1];this.iconNode=G[2];var F=3;if(E){this.checkbox=G[3];this.checkbox.defaultChecked=this.checkbox.checked;F++}this.anchor=G[F];this.textNode=G[F].firstChild},getAnchor:function(){return this.anchor},getTextEl:function(){return this.textNode},getIconEl:function(){return this.iconNode},isChecked:function(){return this.checkbox?this.checkbox.checked:false},updateExpandIcon:function(){if(this.rendered){var E=this.node,D,C;var A=E.isLast()?"x-tree-elbow-end":"x-tree-elbow";if(E.isExpandable()){if(E.expanded){A+="-minus";D="x-tree-node-collapsed";C="x-tree-node-expanded"}else{A+="-plus";D="x-tree-node-expanded";C="x-tree-node-collapsed"}if(this.wasLeaf){this.removeClass("x-tree-node-leaf");this.wasLeaf=false}if(this.c1!=D||this.c2!=C){Ext.fly(this.elNode).replaceClass(D,C);this.c1=D;this.c2=C}}else{if(!this.wasLeaf){Ext.fly(this.elNode).replaceClass("x-tree-node-expanded","x-tree-node-leaf");delete this.c1;delete this.c2;this.wasLeaf=true}}var B="x-tree-ec-icon "+A;if(this.ecc!=B){this.ecNode.className=B;this.ecc=B}}},getChildIndent:function(){if(!this.childIndent){var A=[];var B=this.node;while(B){if(!B.isRoot||(B.isRoot&&B.ownerTree.rootVisible)){if(!B.isLast()){A.unshift("<img src=\""+this.emptyIcon+"\" class=\"x-tree-elbow-line\" />")}else{A.unshift("<img src=\""+this.emptyIcon+"\" class=\"x-tree-icon\" />")}}B=B.parentNode}this.childIndent=A.join("")}return this.childIndent},renderIndent:function(){if(this.rendered){var A="";var B=this.node.parentNode;if(B){A=B.ui.getChildIndent()}if(this.indentMarkup!=A){this.indentNode.innerHTML=A;this.indentMarkup=A}this.updateExpandIcon()}},destroy:function(){if(this.elNode){Ext.dd.Registry.unregister(this.elNode.id)}delete this.elNode;delete this.ctNode;delete this.indentNode;delete this.ecNode;delete this.iconNode;delete this.checkbox;delete this.anchor;delete this.textNode;Ext.removeNode(this.ctNode)}};Ext.tree.RootTreeNodeUI=Ext.extend(Ext.tree.TreeNodeUI,{render:function(){if(!this.rendered){var A=this.node.ownerTree.innerCt.dom;this.node.expanded=true;A.innerHTML="<div class=\"x-tree-root-node\"></div>";this.wrap=this.ctNode=A.firstChild}},collapse:Ext.emptyFn,expand:Ext.emptyFn});

Ext.tree.TreeLoader=function(A){this.baseParams={};Ext.apply(this,A);this.addEvents("beforeload","load","loadexception");Ext.tree.TreeLoader.superclass.constructor.call(this)};Ext.extend(Ext.tree.TreeLoader,Ext.util.Observable,{uiProviders:{},clearOnLoad:true,load:function(A,B){if(this.clearOnLoad){while(A.firstChild){A.removeChild(A.firstChild)}}if(this.doPreload(A)){if(typeof B=="function"){B()}}else{if(this.dataUrl||this.url){this.requestData(A,B)}}},doPreload:function(D){if(D.attributes.children){if(D.childNodes.length<1){var C=D.attributes.children;D.beginUpdate();for(var B=0,A=C.length;B<A;B++){var E=D.appendChild(this.createNode(C[B]));if(this.preloadChildren){this.doPreload(E)}}D.endUpdate()}return true}else{return false}},getParams:function(D){var A=[],C=this.baseParams;for(var B in C){if(typeof C[B]!="function"){A.push(encodeURIComponent(B),"=",encodeURIComponent(C[B]),"&")}}A.push("node=",encodeURIComponent(D.id));return A.join("")},requestData:function(A,B){if(this.fireEvent("beforeload",this,A,B)!==false){this.transId=Ext.Ajax.request({method:this.requestMethod,url:this.dataUrl||this.url,success:this.handleResponse,failure:this.handleFailure,scope:this,argument:{callback:B,node:A},params:this.getParams(A)})}else{if(typeof B=="function"){B()}}},isLoading:function(){return !!this.transId},abort:function(){if(this.isLoading()){Ext.Ajax.abort(this.transId)}},createNode:function(attr){if(this.baseAttrs){Ext.applyIf(attr,this.baseAttrs)}if(this.applyLoader!==false){attr.loader=this}if(typeof attr.uiProvider=="string"){attr.uiProvider=this.uiProviders[attr.uiProvider]||eval(attr.uiProvider)}if(attr.nodeType){return new Ext.tree.TreePanel.nodeTypes[attr.nodeType](attr)}else{return attr.leaf?new Ext.tree.TreeNode(attr):new Ext.tree.AsyncTreeNode(attr)}},processResponse:function(response,node,callback){var json=response.responseText;try{var o=eval("("+json+")");node.beginUpdate();for(var i=0,len=o.length;i<len;i++){var n=this.createNode(o[i]);if(n){node.appendChild(n)}}node.endUpdate();if(typeof callback=="function"){callback(this,node)}}catch(e){this.handleFailure(response)}},handleResponse:function(B){this.transId=false;var A=B.argument;this.processResponse(B,A.node,A.callback);this.fireEvent("load",this,A.node,B)},handleFailure:function(B){this.transId=false;var A=B.argument;this.fireEvent("loadexception",this,A.node,B);if(typeof A.callback=="function"){A.callback(this,A.node)}}});

/*
 * Ext JS Library 2.0.1
 * Copyright(c) 2006-2007, Ext JS, LLC.
 * licensing@extjs.com
 * 
 * http://extjs.com/license
 */

Ext.Resizable=function(D,E){this.el=Ext.get(D);if(E&&E.wrap){E.resizeChild=this.el;this.el=this.el.wrap(typeof E.wrap=="object"?E.wrap:{cls:"xresizable-wrap"});this.el.id=this.el.dom.id=E.resizeChild.id+"-rzwrap";this.el.setStyle("overflow","hidden");this.el.setPositioning(E.resizeChild.getPositioning());E.resizeChild.clearPositioning();if(!E.width||!E.height){var F=E.resizeChild.getSize();this.el.setSize(F.width,F.height)}if(E.pinned&&!E.adjustments){E.adjustments="auto"}}this.proxy=this.el.createProxy({tag:"div",cls:"x-resizable-proxy",id:this.el.id+"-rzproxy"});this.proxy.unselectable();this.proxy.enableDisplayMode("block");Ext.apply(this,E);if(this.pinned){this.disableTrackOver=true;this.el.addClass("x-resizable-pinned")}var I=this.el.getStyle("position");if(I!="absolute"&&I!="fixed"){this.el.setStyle("position","relative")}if(!this.handles){this.handles="s,e,se";if(this.multiDirectional){this.handles+=",n,w"}}if(this.handles=="all"){this.handles="n s e w ne nw se sw"}var M=this.handles.split(/\s*?[,;]\s*?| /);var C=Ext.Resizable.positions;for(var H=0,J=M.length;H<J;H++){if(M[H]&&C[M[H]]){var L=C[M[H]];this[L]=new Ext.Resizable.Handle(this,L,this.disableTrackOver,this.transparent)}}this.corner=this.southeast;if(this.handles.indexOf("n")!=-1||this.handles.indexOf("w")!=-1){this.updateBox=true}this.activeHandle=null;if(this.resizeChild){if(typeof this.resizeChild=="boolean"){this.resizeChild=Ext.get(this.el.dom.firstChild,true)}else{this.resizeChild=Ext.get(this.resizeChild,true)}}if(this.adjustments=="auto"){var B=this.resizeChild;var K=this.west,G=this.east,A=this.north,M=this.south;if(B&&(K||A)){B.position("relative");B.setLeft(K?K.el.getWidth():0);B.setTop(A?A.el.getHeight():0)}this.adjustments=[(G?-G.el.getWidth():0)+(K?-K.el.getWidth():0),(A?-A.el.getHeight():0)+(M?-M.el.getHeight():0)-1]}if(this.draggable){this.dd=this.dynamic?this.el.initDD(null):this.el.initDDProxy(null,{dragElId:this.proxy.id});this.dd.setHandleElId(this.resizeChild?this.resizeChild.id:this.el.id)}this.addEvents("beforeresize","resize");if(this.width!==null&&this.height!==null){this.resizeTo(this.width,this.height)}else{this.updateChildSize()}if(Ext.isIE){this.el.dom.style.zoom=1}Ext.Resizable.superclass.constructor.call(this)};Ext.extend(Ext.Resizable,Ext.util.Observable,{resizeChild:false,adjustments:[0,0],minWidth:5,minHeight:5,maxWidth:10000,maxHeight:10000,enabled:true,animate:false,duration:0.35,dynamic:false,handles:false,multiDirectional:false,disableTrackOver:false,easing:"easeOutStrong",widthIncrement:0,heightIncrement:0,pinned:false,width:null,height:null,preserveRatio:false,transparent:false,minX:0,minY:0,draggable:false,resizeTo:function(B,A){this.el.setSize(B,A);this.updateChildSize();this.fireEvent("resize",this,B,A,null)},startSizing:function(C,B){this.fireEvent("beforeresize",this,C);if(this.enabled){if(!this.overlay){this.overlay=this.el.createProxy({tag:"div",cls:"x-resizable-overlay",html:"&#160;"},Ext.getBody());this.overlay.unselectable();this.overlay.enableDisplayMode("block");this.overlay.on("mousemove",this.onMouseMove,this);this.overlay.on("mouseup",this.onMouseUp,this)}this.overlay.setStyle("cursor",B.el.getStyle("cursor"));this.resizing=true;this.startBox=this.el.getBox();this.startPoint=C.getXY();this.offsets=[(this.startBox.x+this.startBox.width)-this.startPoint[0],(this.startBox.y+this.startBox.height)-this.startPoint[1]];this.overlay.setSize(Ext.lib.Dom.getViewWidth(true),Ext.lib.Dom.getViewHeight(true));this.overlay.show();if(this.constrainTo){var A=Ext.get(this.constrainTo);this.resizeRegion=A.getRegion().adjust(A.getFrameWidth("t"),A.getFrameWidth("l"),-A.getFrameWidth("b"),-A.getFrameWidth("r"))}this.proxy.setStyle("visibility","hidden");this.proxy.show();this.proxy.setBox(this.startBox);if(!this.dynamic){this.proxy.setStyle("visibility","visible")}}},onMouseDown:function(A,B){if(this.enabled){B.stopEvent();this.activeHandle=A;this.startSizing(B,A)}},onMouseUp:function(B){var A=this.resizeElement();this.resizing=false;this.handleOut();this.overlay.hide();this.proxy.hide();this.fireEvent("resize",this,A.width,A.height,B)},updateChildSize:function(){if(this.resizeChild){var C=this.el;var D=this.resizeChild;var B=this.adjustments;if(C.dom.offsetWidth){var A=C.getSize(true);D.setSize(A.width+B[0],A.height+B[1])}if(Ext.isIE){setTimeout(function(){if(C.dom.offsetWidth){var E=C.getSize(true);D.setSize(E.width+B[0],E.height+B[1])}},10)}}},snap:function(C,E,B){if(!E||!C){return C}var D=C;var A=C%E;if(A>0){if(A>(E/2)){D=C+(E-A)}else{D=C-A}}return Math.max(B,D)},resizeElement:function(){var A=this.proxy.getBox();if(this.updateBox){this.el.setBox(A,false,this.animate,this.duration,null,this.easing)}else{this.el.setSize(A.width,A.height,this.animate,this.duration,null,this.easing)}this.updateChildSize();if(!this.dynamic){this.proxy.hide()}return A},constrain:function(B,C,A,D){if(B-C<A){C=B-A}else{if(B-C>D){C=D-B}}return C},onMouseMove:function(S){if(this.enabled){try{if(this.resizeRegion&&!this.resizeRegion.contains(S.getPoint())){return }var Q=this.curSize||this.startBox;var I=this.startBox.x,H=this.startBox.y;var C=I,B=H;var J=Q.width,R=Q.height;var D=J,L=R;var K=this.minWidth,T=this.minHeight;var P=this.maxWidth,W=this.maxHeight;var F=this.widthIncrement;var A=this.heightIncrement;var U=S.getXY();var O=-(this.startPoint[0]-Math.max(this.minX,U[0]));var M=-(this.startPoint[1]-Math.max(this.minY,U[1]));var G=this.activeHandle.position;switch(G){case"east":J+=O;J=Math.min(Math.max(K,J),P);break;case"south":R+=M;R=Math.min(Math.max(T,R),W);break;case"southeast":J+=O;R+=M;J=Math.min(Math.max(K,J),P);R=Math.min(Math.max(T,R),W);break;case"north":M=this.constrain(R,M,T,W);H+=M;R-=M;break;case"west":O=this.constrain(J,O,K,P);I+=O;J-=O;break;case"northeast":J+=O;J=Math.min(Math.max(K,J),P);M=this.constrain(R,M,T,W);H+=M;R-=M;break;case"northwest":O=this.constrain(J,O,K,P);M=this.constrain(R,M,T,W);H+=M;R-=M;I+=O;J-=O;break;case"southwest":O=this.constrain(J,O,K,P);R+=M;R=Math.min(Math.max(T,R),W);I+=O;J-=O;break}var N=this.snap(J,F,K);var V=this.snap(R,A,T);if(N!=J||V!=R){switch(G){case"northeast":H-=V-R;break;case"north":H-=V-R;break;case"southwest":I-=N-J;break;case"west":I-=N-J;break;case"northwest":I-=N-J;H-=V-R;break}J=N;R=V}if(this.preserveRatio){switch(G){case"southeast":case"east":R=L*(J/D);R=Math.min(Math.max(T,R),W);J=D*(R/L);break;case"south":J=D*(R/L);J=Math.min(Math.max(K,J),P);R=L*(J/D);break;case"northeast":J=D*(R/L);J=Math.min(Math.max(K,J),P);R=L*(J/D);break;case"north":var X=J;J=D*(R/L);J=Math.min(Math.max(K,J),P);R=L*(J/D);I+=(X-J)/2;break;case"southwest":R=L*(J/D);R=Math.min(Math.max(T,R),W);var X=J;J=D*(R/L);I+=X-J;break;case"west":var E=R;R=L*(J/D);R=Math.min(Math.max(T,R),W);H+=(E-R)/2;var X=J;J=D*(R/L);I+=X-J;break;case"northwest":var X=J;var E=R;R=L*(J/D);R=Math.min(Math.max(T,R),W);J=D*(R/L);H+=E-R;I+=X-J;break}}this.proxy.setBounds(I,H,J,R);if(this.dynamic){this.resizeElement()}}catch(S){}}},handleOver:function(){if(this.enabled){this.el.addClass("x-resizable-over")}},handleOut:function(){if(!this.resizing){this.el.removeClass("x-resizable-over")}},getEl:function(){return this.el},getResizeChild:function(){return this.resizeChild},destroy:function(C){this.proxy.remove();if(this.overlay){this.overlay.removeAllListeners();this.overlay.remove()}var D=Ext.Resizable.positions;for(var A in D){if(typeof D[A]!="function"&&this[D[A]]){var B=this[D[A]];B.el.removeAllListeners();B.el.remove()}}if(C){this.el.update("");this.el.remove()}},syncHandleHeight:function(){var A=this.el.getHeight(true);if(this.west){this.west.el.setHeight(A)}if(this.east){this.east.el.setHeight(A)}}});Ext.Resizable.positions={n:"north",s:"south",e:"east",w:"west",se:"southeast",sw:"southwest",nw:"northwest",ne:"northeast"};Ext.Resizable.Handle=function(C,E,B,D){if(!this.tpl){var A=Ext.DomHelper.createTemplate({tag:"div",cls:"x-resizable-handle x-resizable-handle-{0}"});A.compile();Ext.Resizable.Handle.prototype.tpl=A}this.position=E;this.rz=C;this.el=this.tpl.append(C.el.dom,[this.position],true);this.el.unselectable();if(D){this.el.setOpacity(0)}this.el.on("mousedown",this.onMouseDown,this);if(!B){this.el.on("mouseover",this.onMouseOver,this);this.el.on("mouseout",this.onMouseOut,this)}};Ext.Resizable.Handle.prototype={afterResize:function(A){},onMouseDown:function(A){this.rz.onMouseDown(this,A)},onMouseOver:function(A){this.rz.handleOver(this,A)},onMouseOut:function(A){this.rz.handleOut(this,A)}};
WbsObservable = newClass(Ext.util.Observable, {});

WbsApplication = newClass(null, {
	contructor: function() {
	},
		
	startLoading: function() {
		if (window.parent && window.parent.showHideLoading)
  		window.parent.showHideLoading(true);
	},
		
	finishLoading: function() {
		if (window.parent && window.parent.showHideLoading)
  		window.parent.showHideLoading(false);
	},
	
	openSubframe: function(url, oldUrl) {
  	this.closeSubframe();
  	
  	if (oldUrl)
  		url = this.getOldUrl(url);
  	
  	var iframe = createElem("iframe", "subframe");
  	iframe.style.width = "100%";
  	iframe.style.height = "100%";
  	iframe.frameBorder = "no";
  	iframe.setAttribute("SCROLLING", "NO");
  	this.startLoading();
  	addHandler(iframe, "load", this.finishLoading, this);
  	//iframe.onload = function() {alert("HELLO"); }
  	
  	var contentBlock = document.getElementById("screen-content-block");
  	contentBlock.insertBefore (iframe, contentBlock.firstChild);
  	
  	if (Ext.isOpera) {
  		iframe.location.href = url;
  	} else {
  		iframe.src = url;
  	}
  	this.subFrame = iframe;
  },
  
  closeSubframe: function() {
  	if (this.subFrame) {
  			jQuery(this.subFrame).remove();
  	}  
	jQuery("#main-container").show();
  }  
});


function getAbsolutePos(el)
{
	var r = { x: el.offsetLeft, y: el.offsetTop };
	if (el.parentNode && el.parentNode.scrollTop)
		r.y -= el.parentNode.scrollTop;
	if (el.offsetParent)
		{
		var tmp = getAbsolutePos(el.offsetParent);
		r.x += tmp.x;
		r.y += tmp.y;
		}
	return r;
}

function mousePageXY(e)
{
  var x = 0, y = 0;

  if (!e) e = window.event;

  if (e.pageX || e.pageY) {
    x = e.pageX;
    y = e.pageY;
  } else if (e.clientX || e.clientY) {
    x = e.clientX + (document.documentElement.scrollLeft || document.body.scrollLeft) - document.documentElement.clientLeft;
    y = e.clientY + (document.documentElement.scrollTop || document.body.scrollTop) - document.documentElement.clientTop;
  }

  return {"x":x, "y":y};
}


var WbsPopwindow = newClass (WbsObservable, {
	
	constructor: function (config) {
		if (!config)
			config = {};
		this.config = config;
		
		if (!this.config.hideMode)
			this.config.hideMode = "close";
		
		if (!document.wbsPopmenuClickLinked) {
			addHandler(document,'click',wbsPopmenuOnDocumentClick,false);
			document.wbsPopmenuClickLinked = true;
		}
		
		var elem = document.createElement("div");
		elem.style.position = "absolute";
		addClass(elem, this.getWindowCls());
		
		if (config.cls)
			addClass(elem, config.cls);
		
		if (config.width)
			elem.style.width = config.width + "px"
		else if (!config.cls)
			elem.style.width = "auto";
		
		if (config.height)
			elem.style.height = config.height + "px"

		this.elem = elem;
	},
		
	getWindowCls: function() {
		return "wbs-popwindow";
	},
			
	render: function() {
	},
			
		
	show: function (e) {
		if(document.wbsPopmenuCurrent != null)
			document.wbsPopmenuCurrent.close();
		this.render();
		//document.wbsPopmenuShowProcess = true;
		
		if(e.stopPropagation) e.stopPropagation();
		else e.cancelBubble = true;
			
		var target=e.target||e.srcElement;
		var cursorPos = mousePageXY(e);
		//var cursorPos = getAbsolutePos(target);
		if (target)
			var targetPos = getAbsolutePos(target);
		
		var left = targetPos.x;
		var top = targetPos.y;
		
		
		//elem.style.top = cursorPos.y;
		var elem = this.elem;
		elem.style.top = top + target.offsetHeight + "px";
		elem.style.left = left + "px";
		
		document.body.appendChild(elem);
		elem.style.visibility = "visible";
		
		document.wbsPopmenuCurrent = this;
		
		if (left + elem.offsetWidth > getDocumentSize().width) {
			elem.style.left = (getDocumentSize().width - elem.offsetWidth-20) + "px";
		}
		if (top + elem.offsetHeight > getDocumentSize().height) {
			var newTop = top - elem.offsetHeight;
			if (newTop > 0)
				elem.style.top = newTop + "px";
		}
		
		
		if (this.onAfterShow)
			this.onAfterShow(e);
	},
		
	hide: function() {
		throw "Not implement hide method";		
	},
	
	close: function() {
		if (this.onClose)
			this.onClose();
		
		var elem = this.elem;
		elem.style.visibility = "hidden";
		document.wbsPopmenuCurrent = null;
		elem.parentNode.removeChild(elem);
		delete elem;
		//delete this;
	},
	
	getElem: function () {
		return this.elem;
	},
		
	getInnerElem: function() {
		if (this.innerElem)
			return this.innerElem;
		
		this.innerElem = createDiv("wbs-popwindow-inner");
		this.getElem().appendChild(this.innerElem);
		return this.innerElem;
	}
});

function getAbsolutePos(el)
{
	var r = { x: el.offsetLeft, y: el.offsetTop };
	if (el.parentNode && el.parentNode.scrollTop)
		r.y -= el.parentNode.scrollTop;
	if (el.offsetParent)
		{
		var tmp = getAbsolutePos(el.offsetParent);
		r.x += tmp.x;
		r.y += tmp.y;
		}
	return r;
}

function mousePageXY(e)
{
  var x = 0, y = 0;

  if (!e) e = window.event;

  if (e.pageX || e.pageY) {
    x = e.pageX;
    y = e.pageY;
  } else if (e.clientX || e.clientY) {
    x = e.clientX + (document.documentElement.scrollLeft || document.body.scrollLeft) - document.documentElement.clientLeft;
    y = e.clientY + (document.documentElement.scrollTop || document.body.scrollTop) - document.documentElement.clientTop;
  }

  return {"x":x, "y":y};
}



function wbsPopmenuOnDocumentClick(e){
	if (!document.wbsPopmenuCurrent)
		return;
	/*if (document.wbsPopmenuShowProcess) {
		document.wbsPopmenuShowProcess = false;
		return;
	}*/
	e=e||event;
  var target=e.target||e.srcElement;
  var menuElem = document.wbsPopmenuCurrent.getElem();
  if(menuElem){
    var parent=target;
    while(parent.parentNode&&parent!=menuElem)
    	parent=parent.parentNode;
    if(!parent || parent != menuElem)
      document.wbsPopmenuCurrent.close();
  }
}

WbsPopmenu = newClass(WbsPopwindow, {
	constructor: function (config) {
		this.items = new Array ();
		this.superclass().constructor.call(this, config);
	},
		
	render: function() {
		
		var ul = document.createElement("ul");
		for (var i = 0; i < this.config.items.length; i++) {
			var item = this.config.items[i];
			
			var li = this.createItem(item);
			if (item.id) 
				this.items[item.id] = li;
			else
				this.items[this.items.length] = li;
			
			ul.appendChild(li);
		}
		this.elem.appendChild(ul);
	},
		
	getWindowCls: function() {
		if (this.config.withImages)
			return "wbs-popmenu wbs-popmenu-images";
		else
			return "wbs-popmenu";
	},
	
	getItem: function(id) {
		return this.items[id];
	},
	
	setItems: function(items) {
		this.config.items = items;
	},
	
	refreshItem: function (li, item) {
		var newLi = this.createItem(item);
		if (item.id)
			this.items[item.id] = li;
		li.parentNode.replaceChild(newLi, li);
	},
	
	hideItem: function (id) {
		addClass(this.items[id], "hidden");
	},
	
	showItem: function (id) {
		removeClass(this.items[id], "hidden");
	},
	
	createItem: function(item) {
		var li = document.createElement("li");
		if (item.cls)
			addClass(li, item.cls);
		
		if (item.iconCls) {
			addClass(li, "with-image");
			addClass(li,item.iconCls);
		}
		
		if (item == "-") {
			li.className = "separator";
			li.innerHTML = "<div></div>";
		} else if (item.html) {
			li.innerHTML = item.html;
		} else {
			var anchor = document.createElement("a");
			anchor.href = "javascript:void(0)";
			var text = document.createTextNode(item.label);
			anchor.appendChild(text);
			li.appendChild(anchor);
		}

		if (item.onClick && !item.disabled) {
			li.onclick = function(item) { 
				return function() {
					var scope = item.scope ? item.scope : this;
					var val = item.onClick.bind(scope)();
					if (!item.onClickNoHide)
						this.close();
					return val;
				}; 			
			} (item).bind(this);
		}
		
		li.onmouseover = function() {
			if (!this.disabled)
				addClass(this,"highlight");
		}
		li.onmouseout = function() {
			if (!this.disabled)
				removeClass(this, "highlight");
		}
		
		if(item.hidden) {
			addClass(li, "hidden");
		}
		if(item.disabled) {
			addClass(li, "disabled");
			li.disabled = true;
		}
		li.setText = function(text) {this.innerHTML = text;}
		return li;
	}
});

var WbsButton = newClass (null, {
	constructor: function(config) {
		this.config = config;
		this.disabled = false;
		if (!this.cls)
			this.cls = "wbs-btn";
		this.render();
	},
	
	build: function(mainElem, advElem) {
		this.btnElem.appendChild(advElem);
		this.btnElem.appendChild(mainElem);
	},
		
	setDisplayed: function (value) {
		this.btnElem.style.display = (value != false) ? "" : "none";
	},
	
	setTitle: function(title) {
			this.btnElem.firstChild.innerHTML = title;
	},
	
	render: function() {
		var contentElem = this.getContentElem();
		
		var btnElem = createDiv(this.cls);
		this.btnElem = btnElem;
		
		var advElem = createDiv("wbs-btn-adv");
		this.advElem = advElem;
		var mainElem = createElem("a", "wbs-btn-content");
		mainElem.setAttribute("href", this.config.href ? this.config.href : "javascript:void(0)");
		
		if (this.config.iconUrl) {
			mainElem.style.backgroundImage = "URL(" + this.config.iconUrl + ")";
			addClass(mainElem, "wbs-btn-withicon");
		}
		
		if (this.config.advIconUrl) {
			advElem.style.backgroundImage = "URL(" + this.config.advIconUrl + ")";
			addClass(advElem, "wbs-btn-left-icon");
		}
		
		var label = this.config.label;
		if (!label && contentElem.value)
			label = contentElem.value;
		if (!label)
			label = "";
		mainElem.innerHTML = label;
		this.build(mainElem, advElem);
		
		if(this.config.onClick)
			addHandler(btnElem, "click", this.onClick, this);
		
		contentElem.parentNode.replaceChild(btnElem, contentElem);
	},
	
	getContentElem: function() {
		var contentElem = document.getElementById(this.config.el);
		return contentElem;		
	},
		
	getElem: function() {
		return this.btnElem;
	},
		
	onClick: function(e) {
		if (this.disabled)
			return false;
		if (this.config.onClick)
			this.config.onClick(e);
	},
		
	setDisabled: function(value) {
		this.disabled = value;
		if (value)
			addClass(this.btnElem, "wbs-btn-disabled");
		else
			removeClass(this.btnElem, "wbs-btn-disabled");
	},
		
	disable: function() {
		this.setDisabled(true);
	}, 
		
	enable: function() {
		this.setDisabled(false);
	}
});

var WbsLinkButton = newClass(WbsButton, {
	constructor: function (config) {
		this.cls = "wbs-link-btn";
		this.superclass().constructor.call(this,config);	
	},
	
	build: function(mainElem, advElem) {
		this.btnElem.appendChild(mainElem);
	}	
});

var WbsMenuButton = newClass(WbsButton, {
	constructor: function (config) {
		if (!document.getElementById(config.el)) {
			return false;
		}
		this.cls = "wbs-menu-btn";
		this.noAdvElem = config.advElem | false;
		this.superclass().constructor.call(this,config);	
		var event = config.eventType || 'click';
		if (this.config.getMenu)
			addHandler(this.btnElem, event, function(e) {
				if (this.config.url) {
					var t = e.target || e.srcElement;
					if (t.className != 'wbs-btn-adv') {
						document.app.openSubframe(this.config.url, 1);
						return false;
					}
				}
				
				var getMenu = (this.config.scope) ? this.config.getMenu.bind(this.config.scope) : this.config.getMenu;
				var menu = getMenu(e);
				if (menu) {
					menu.show(e);
				}
			}, this);
	},
	
	build: function(mainElem, advElem) {
		this.btnElem.appendChild(mainElem);
		if (!this.config.noAdvElem) { 
			this.btnElem.appendChild(advElem);
		}
	}
});


var WbsDataStore = newClass(WbsObservable, {
	constructor: function (config) {
		this.records = new Array ();
		this.recordClass = config.recordClass ? config.recordClass : WbsRecord;
		this.offset = config.offset | 0;
		this.config = config;
		this.params = {};
		if (this.config.reader) {
			this.reader = this.config.reader;
			this.reader.addListener("success", this.onRecordsLoaded, this);
		}	
		this.idProperty = this.config.idProperty;
		
		this.addEvents ({
			"dataChanged" : true,
			"recordChanged" : true,
			"startLoading" : true,
			"finishLoading" : true
		});
	},

	add: function (record) {
		record.addListener("modified", this.recordModified, this);
		this.records.push(record);
	},
	
	unshift: function (record) {
		this.records.unshift(record);
	},
		
	clear: function () {
		this.records = new Array ();
	},
		
	getLength: function () {
		return this.records.length;		
	},
		
	hasRecords: function () {
		return this.records.length > 0;
	},
		
	getRecordByIndex: function(index) {
		return this.records[index];
	},
		
	setSorting: function (column, direction) {
		this.reader.setSorting(column, direction);
	},
		
	setParams: function(params) {
		this.params = params;
	},
		
	setOffset: function (offset, limit) {
		this.offset = offset;
		this.reader.addBaseParams({offset: offset, limit: limit});
	},
		
	recordModified: function(record) {
		this.fireEvent("recordModified", record);
	},
		
	getOffset: function() {
		return this.offset;
	},
	
	getTotal: function() {
		return this.total;
	},
		
	getTotalAdvanced: function() {
		return this.total_advanced;
	},	
	
	onRecordsLoaded: function(responseData, records, data) {
		this.fireEvent("finishLoading");
		
		if (responseData.errorStr) {
			WbsCommon.showError(responseData);
			return false;
		}
		if (responseData)
			this.responseData = responseData;
		
		this.clear();	
		
		if (data.total)
			this.total = data.total;
		if (responseData.total_advanced) {
			this.total_advanced = responseData.total_advanced;
		} else {
			this.total_advanced = 0;
		}
		for (var i = 0; i < records.length; i++) {
			records[i].id = records[i][this.idProperty];
			this.add(new this.recordClass(records[i]));
		}
		this.fireEvent("dataChanged", this);
	},
		
	load: function(params) {
		this.fireEvent("startLoading");
		if (!params)
			params = {};
		jQuery.extend(params, this.params);
		this.reader.read(params);
	}
});

var WbsEditable = newClass(WbsObservable, {
	value: null, 
	mode: null,
		
	constructor: function (config) {
		this.config = config;
		this.mode = WbsEditable.VIEW_MODE;
		
		// read config
		this.elem = config.elem;
		
		this.superclass().constructor.call(this);
		
		this.addEvents({
			"changeMode": true
		});
	},
		
	setEditMode: function() {
		this.mode = WbsEditable.EDIT_MODE;
		this.render();
		this.editElem.select();
		this.fireEvent("changeMode");
	},
		
	setViewMode: function() {
		this.mode = WbsEditable.VIEW_MODE;
		this.render();
		this.fireEvent("changeMode");
	},
		
	setValue: function(value) {
		this.value = value;
		this.render();
	},
		
	render: function() {
		if (this.mode == WbsEditable.EDIT_MODE) {
			var editElem = this.createEditElem();
			
			clearNode(this.elem);
			
			editElem.setValue(this.value);
			this.elem.appendChild(editElem);
			this.editElem = editElem;
			
			var saveBtn = createElem("input",null, {type: "button", value:"Save"});
			addHandler (saveBtn, "click", function() {this.save()}, this);
			
			var cancelBtn = createElem("input",null, {type: "button", value:"Cancel"});
			addHandler (cancelBtn, "click", function(e) {this.cancel();}, this);
			
			var linksBlock = createDiv("wbs-editable-links-block");
			linksBlock.appendChild(saveBtn);
			linksBlock.appendChild(cancelBtn);
			
			this.elem.appendChild(linksBlock);
		} else {
			clearNode(this.elem);
			var textValue = (!this.value || this.value.length == 0 && this.config.emptyText) ? this.config.emptyText : this.value;
			
			var valueSpan = createElem('div');
			if (!this.config.clickToEdit) {
				jQuery(this.elem).addClass('noedit');
			}
			valueSpan.innerHTML = (textValue) ? textValue.htmlSpecialChars() : "";		
			valueSpan.onclick = function(){if (this.config.clickToEdit) this.setEditMode()}.bind(this);
			
			this.elem.appendChild(valueSpan);
		}
	},
	
	setEditable: function (edit) {
		this.config.clickToEdit = edit;
		if (this.config.clickToEdit) {
			jQuery(this.elem).removeClass('noedit');
		} else {
			jQuery(this.elem).addClass('noedit');
		}
	},
		
	save: function() {
		if (!this.saveHandler)
			throw "No save handler for editable";
		
		var newValue = this.editElem.getValue();
		this.saveHandler(newValue, this.saveSuccess.bind(this), this.saveFailed.bind(this));
	},
		
	saveSuccess: function() {
		this.value = this.editElem.getValue();
		this.setViewMode();
	},
	saveFailed: function(err) {
		if (!$(this.elem).find(".error").length) {
			$(this.elem).find(".wbs-editable-links-block").prepend('<div class="error" style="color:red; font-weight: normal; font-size: 12px; float: none"></div>');
		}
		$(this.elem).find(".error").html(err).show();
	},
	
		
	cancel: function() {
		this.setViewMode();
	}
});
WbsEditable.VIEW_MODE = "view";
WbsEditable.EDIT_MODE = "edit";


var WbsEditableText = newClass(WbsEditable, {
	constructor: function(config) {
		this.superclass().constructor.call(this, config);
	},
		
	createEditElem: function() {
		var elem = createDiv("wbs-editable-text");
		var textarea = createElem("textarea");
		textarea.value = this.value;
		elem.appendChild(textarea);
		
		if(this.config.adjustSize && this.elem.offsetHeight > 40)
			textarea.style.height = this.elem.offsetHeight - 20 + "px";
		if(this.config.adjustSize)
			textarea.style.width = this.elem.offsetWidth + "px";
			
		
		elem.setValue = function(value) {textarea.value = value;}		
		elem.getValue = function() { return textarea.value; }
		elem.select = function() {textarea.select(); textarea.focus(); }
		
		return elem;
	}	
});

var WbsEditableLabel = newClass(WbsEditableText, {
	
	createEditElem: function() {
		var elem = createDiv("wbs-editable-label");
		var input = createElem("input");
		input.value = this.value;
		elem.appendChild(input);
		
		if(this.config.adjustSize)
			input.style.width = this.elem.offsetWidth + "px";
		
		elem.setValue = function(value) {input.value = value;}
		elem.getValue = function() { return input.value; }
		elem.select = function() {input.select(); input.focus(); }
		
		return elem;
	}
});

var WbsFlexContainer = newClass (WbsObservable, {
	constructor: function (config) {
		this.config = config;
		
		this.contentElem = config.contentElem;
		this.elem = config.elem;
		if (!this.contentElem)
			throw "No exists content elem for WbsFlexContainer";
		addClass(this.elem, "wbs-flexcontainer");
		this.childElems = new Array ();
		
		this.buildPage();
		WbsFlexContainer.addContainer(this);
		
		this.superclass().constructor.call(this);
		
		this.addEvents({
			"resize" : true
		});
	},
	
	addChildElem: function(childElem) {
		this.childElems[this.childElems.length] = childElem;
	},
	
	buildPage: function () {
		if (this.config.headerElem) {
			addClass(this.config.headerElem, "wbs-flexcontainer-header");
			this.addChildElem(this.config.headerElem);
		}		
		
		addClass(this.contentElem, "wbs-flexcontainer-content");
		this.addChildElem(this.contentElem);
		
		if (this.config.footerElem) {
			addClass(this.config.footerElem, "wbs-flexcontainer-footer");
			this.addChildElem(this.config.footerElem);
		}
	},
	
	resize: function () {
		var minusHeight = 0;
		for (var i = 0; i < this.childElems.length; i++) {
			var childElem = this.childElems[i];
			if (childElem == this.contentElem)
				continue;
			minusHeight += childElem.offsetHeight;
		}
		if (this.elem.offsetHeight > 21 && minusHeight == 0) minusHeight = 21;
		this.contentElem.style.height = (this.elem.offsetHeight - minusHeight) + "px";
		this.fireEvent("resize");
	},
		
	parentResized: function() {
		this.resize();
	}
});

WbsFlexContainer.containers = new Array ();
WbsFlexContainer.addContainer = function(container) {
	var parentFinded = false;
	for (var i = 0; i < WbsFlexContainer.containers.length; i++) {
		var otherContainer = WbsFlexContainer.containers[i];
		if (otherContainer == container)
			continue;
		if (nodeIsParentOf(container.elem, otherContainer.elem)) {
			parentFinded = true;
			otherContainer.addListener("resize", container.parentResized, container);
		}
	}
	if (!parentFinded) {
		addHandler(window,"resize",container.resize,container);
		addHandler(window,"load",container.resize,container);
	}		
	WbsFlexContainer.containers.push(container);
}
function nodeIsParentOf(node, parentNode) {
	var currentParent = node;
	while (currentParent && currentParent != window) {
		if (currentParent == parentNode)
			return true; 
		currentParent = currentParent.parentNode;
	}
	return false;
}

function WbsFooter (config) {
	this.config = config;
	this.contentElem = document.getElementById(config.contentElemId);
	this.wrapElem = this.contentElem.parentNode;
	
	var footer = this;
	this.resize = function () {
		footer.contentElem.style.height = (footer.wrapElem.offsetHeight - footer.footerElem.offsetHeight) + "px";
	}
	
	this.getElem = function() {
		return this.footerElem;
	}
	
	this.footerElem = document.createElement("div");
	this.footerElem.className = config.cls;
	this.footerElem.innerHTML = "&nbsp;";
	
	this.wrapElem.appendChild(this.footerElem);
	this.resize();
	
	addHandler(window,"resize",this.resize,false);
}


var WbsNavBar = newClass(WbsObservable, {
	constructor: function(config) {
		
		this.superclass().constructor.call(this);		
		this.addEvents({
			"resize" : 1,
			"horizontalResize" : 1,
			"blockActivated" : 1			
		});
		
		this.config = config;
		this.collapsed = false;
		this.contentElem = document.getElementById(config.contentElemId);
		this.wrapElem = this.contentElem.parentNode;
		this.activeBlock = null;
		this.width = 0;
		
		var resizer = new Ext.Resizable (this.wrapElem,  {handles: 'e', pinned: false,  disableTrackOver : true});
		this.resizer = resizer;
		resizer.on("resize", function(resizer, width) {
			this.wrapElem.style.height = "100%";
			if (this.width != width) {
				this.width = width;
				this.saveSize(width);
			}
			this.fireEvent("horizontalResize");
		}, this);
		
		var btnCollapse = createDiv("btn-collapse");
		this.contentElem.insertBefore(btnCollapse, this.contentElem.firstChild);
		
		addHandler(btnCollapse, "click", function() {
			this.collapse();
		}, this);
		
		var btnExpand = createDiv("btn-expand");
		this.contentElem.insertBefore(btnExpand, this.contentElem.firstChild);
		
		addHandler(btnExpand, "click", function() {
			this.expand();
		}, this);
		
		this.blocks = new Array ();	
		this.blocksIds = {};
		
		for (var i = 0; i < this.contentElem.childNodes.length; i++) {
			var node = this.contentElem.childNodes[i];
			if (node.className == "acc-block") {
				var block = new WbsNavBarBlock({
					navBar: this,				
					elem: node
				});
				this.blocks[this.blocks.length] = block;
				this.blocksIds[block.id] = block;
			}
		}
	
		//this.collapse.bind(this);
		
		this.closePanel = createDiv("close-panel");
		this.contentElem.insertBefore(this.closePanel, this.contentElem.firstChild);
		this.closePanel.onclick = this.collapse.bind(this);
		
		
		addHandler(window,"resize",this.resize,this);
		
		
		if (this.config.saveSize) {
			var savedSize = getCookie("navbar-" + this.config.id);
			if (!savedSize || savedSize == undefined) {
				savedSize = 200;
			}
			if (savedSize == -1)
				this.collapse();
			else if (savedSize)
				resizer.resizeTo(savedSize);
		}
	},
	
	collapse: function() {
		this.collapsed = true;
		this.resizer.resizeTo(20);
		addClass(this.contentElem, "collapsed");
		this.resizer.east.el.hide();
		/*if (this.expanderElem)
			addClass(this.expanderElem, "visible");*/
	},
	
	expand: function() {
		this.collapsed = false;
		removeClass(this.contentElem, "collapsed");
		this.resizer.resizeTo(200);
		this.resizer.east.el.show();
		this.resize();
	},
	
	resize: function () {
		var totalHeight = this.wrapElem.offsetHeight;
		var blocksTotalHeight = 0;
		for (var i = 0; i < this.blocks.length; i++) {
			var block= this.blocks[i];
			if (block == this.activeBlock)
				continue;
			blocksTotalHeight += block.getHeight();
		}
		var activeBlockHeight = totalHeight - blocksTotalHeight - 4;
		this.activeBlock.setHeight (activeBlockHeight);
		this.fireEvent("resize");
	},
	
	
	getElem: function() {
		return this.contentElem;
	},
		
	getBlock: function(id) {
		return this.blocksIds[id];
	},
	
	setActiveBlock: function (block, noFire) {
		if (typeof block == "string")
			block = this.blocksIds[block];
		if (this.activeBlock)
			this.activeBlock.setActive(false);
			
		this.activeBlock = block;
		this.activeBlock.setActive(true);
		if (noFire == undefined || !noFire) {
			this.fireEvent("blockActivated", block);
		}
		this.resize();		
	},
	
	saveSize: function(size) {
		if (!this.collapsed && size < 50) {
			this.collapse();
		}
		var value = (this.collapsed) ? -1 : size;
		if (this.config.id)
			setCookie("navbar-" + this.config.id, value);
	}
});



var WbsNavBarBlock = newClass(WbsObservable, {
	constructor: function (config) {
		this.navBar = config.navBar;
		this.elem = config.elem;
		this.id = config.elem.id;
		this.contentEl = null;
		this.titleEl = null;
		
		this.build();
	},
		
	getContentElem: function() {
		return this.contentEl;		
	},
	
	build: function() {
		for (var i = 0; i < this.elem.childNodes.length; i++) {
			var node = this.elem.childNodes[i];
			if ($(node).hasClass('title'))
				this.titleEl = node;
			if (node.className == "content")
				this.contentEl = node;
		}
	},
	
	setHeight: function(height) {
		if (height <= 0) {
			return;
		}
		this.elem.style.height = height;
		if (height != "auto" && this.contentEl) {
			var changeHeight = 0;
			if (this.titleEl) {
				changeHeight = $(this.titleEl).height();
			}
			this.contentEl.style.height = (height - changeHeight) + "px";
		}
		$(this.contentEl).find(".x-panel").height("auto");
	},
	
	getHeight: function() {
		return this.elem.offsetHeight;
	},
	
	activate: function() {
		this.navBar.setActiveBlock(this);		
	},
	
	deactivate: function() {
		
	},
	
	setActive: function(value) {
		if (value) 
			addClass(this.elem, "active");
		else {
			this.elem.style.height = "auto";
			removeClass(this.elem, "active");
		}
	}
});

var WbsPager = newClass(null,{
	constructor: function(config) {
		this.config = config;
		this.table = this.config.table;
		this.offset = config.offset | 0;
		
		this.itemsOnPage = 10;
		this.currentPage = 0;
		
		if (this.getStore())
			this.getStore().setOffset(this.offset, this.itemsOnPage);
	},
		
	setItemsOnPage: function(value) {
		if (!value)
			value = 10;
		this.itemsOnPage = value;
		this.resetPage();
	},
	
	render: function() {
		var renderElem = this.config.elem;
		renderElem.innerHTML = "&nbsp;";	
		if (!this.getStore())
			return;
		
		var listEl = createElem ("ul", "pages-list");
		var pagesCount = Math.ceil(this.getStore().getTotal() / this.itemsOnPage);
		labelEl = createElem("li", "pages-label");
		var advanced = this.getStore().getTotalAdvanced();
		labelEl.innerHTML = "<span class='records-label'>" + (this.config.nameElements ? this.config.nameElements : "Records") + ": " + (advanced ? advanced + ' (Records: ' + this.getStore().getTotal() + ')' : this.getStore().getTotal()) + "</span> ";
		if (pagesCount > 0)
			labelEl.innerHTML += "Pages" + ": ";
		listEl.appendChild(labelEl);
		
		var maxShowPages = 10;
		var showPagesDelta = 4;
		var separatorOuted = false;
		
		for (var i = 0; i < pagesCount; i++) {
			var pageEl = createElem("li", "page-item");
			if (i == this.currentPage)
				addClass(pageEl, "selected");				
			pageEl.innerHTML = (i + 1);
			pageEl.pageNo = i;
			
			if (!(pagesCount < maxShowPages || Math.abs(i - this.currentPage) < showPagesDelta || i == 0 || i == pagesCount - 1)) {
				if (!separatorOuted) {
					separatorEl = createElem("li", "separator");
					separatorEl.innerHTML = "...";
					listEl.appendChild(separatorEl);
					separatorOuted = true;
				}
				continue;
			}
			separatorOuted = false;
			
			addHandler(pageEl, "click", function(pageEl, pageNo) {
				return function() {pageEl, this.onPageClick(pageEl, pageNo);}
			}(pageEl, i), this);
			
			listEl.appendChild(pageEl);
		}
		renderElem.insertBefore(listEl, renderElem.firstChild);
	},
	
	resetPage: function(pageNo) {
		pageNo = pageNo | 0;
		this.currentPage = pageNo;
		this.getStore().setOffset(pageNo * this.itemsOnPage, this.itemsOnPage);
	},
	
	getStore: function() {
		if (!this.table)
			return false;
		return this.table.getStore();
	},
	
	onPageClick: function(pageEl,pageNo) {
		this.currentPage = pageNo;
		WbsCommon.showLoading(pageEl);
		this.getStore().setOffset(pageNo * this.itemsOnPage, this.itemsOnPage);
		this.getStore().load();
	}
});

var WbsReader = newClass(WbsObservable, {
	constructor: function(config) {
		this.config = config;
		this.baseParams = config.baseParams;
		if (!this.baseParams)
			this.baseParams = {};
		
		this.addEvents({
			"success" : true,
			"changeParams": true,
			"startReading" : true,
			"finishReading" : true
		});
	},
		
	addBaseParams: function (params) {
		var baseParams = this.baseParams;
		if (!baseParams)
			baseParams = [];
		for (var i in params) {
			baseParams[i] = params[i];
		}
		this.baseParams = baseParams;
		this.fireEvent("changeParams");
	},
	
	setSorting: function(column, direction) {
		this.addBaseParams({sortColumn: column, sortDirection: direction});
		this.baseParams.sortColumn = column;
	}, 
	
	read: function (addParams) {
		var params = {};
		for (var key in this.baseParams)
			params[key] = this.baseParams[key];
		if (addParams) {
			for (var key in addParams)
				params[key] = addParams[key];
			
		}		
		
		this.fireEvent("startReading");
		Ext.Ajax.request ({
			url: this.config.url,
			params: params,
			success: function (response) {
				var data = {};
				var responseData = Ext.decode(response.responseText);
				if (responseData.errorStr) {
					var dlg = new UGShowErrorDlg({error: responseData.errorStr});
					dlg.show();
					if (responseData.errorCode && responseData.errorCode == "SESSION_TIMEOUT" && responseData.redirectUrl) {
						window.top.location.href = responseData.redirectUrl;
					}
					if (responseData.newLocation && responseData.sessionExpired) { // for old code
							window.top.location.href = responseData.newLocation.replace("../", ""); // only ONE replace need			
					}					
					//WbsCommon.showError(responseData);
					return false;
				}
				var records = (this.config.recordsProperty) ? responseData[this.config.recordsProperty] : responseData;
				if (this.config.totalProperty)
					data.total = responseData[this.config.totalProperty];
				this.fireEvent("success", responseData, records, data);
			},
			scope: this
		});		
	}
});

var WbsRecord = newClass(WbsObservable, {
	constructor: function(recordData) {
		this.superclass().constructor.call(this);
		
		this.addEvents({
			"modified" : true			
		});
		
		this.loadFromData(recordData);
		if (this.data.id)
			this.id = this.data.id;
	},
		
	loadFromData: function(data) {
		this.data = data;
		var fields = this.getFields();
		if (data.id)
			this.id = data.id;
		for (var i = 0; i < fields.length; i++) {
			var field = fields[i];
			var value = data[field.name];
			if (field.convert) {
				value = field.convert(value);
			}
			this[field.name] = value;
		}
	},
		
	getFields: function() {
		return[];
	},
		
	getId: function() {
		return this.id;
	}	
});

WbsRecordsList = newClass(null, {
	records: [],
	constructor: function(records) {
		this.records = (records) ? records : [];
	},
		
	add: function(record) {
		this.records.push(record);
	},
		
	getRecords: function() {
		return this.records;
	},
		
	getRecord: function(index) {
		return this.records[index];
	},
		
	getCount: function() {
		return this.records.length;
	},
	
	getIds: function() {
		var ids = new Array ();
		for (var i = 0; i < this.records.length; i++) {
			ids.push(this.records[i].getId());
		}
		return ids;
	}
});

WbsRecordset = newClass(null, {
	records: [],
	constructor: function(records) {
		this.records = (records) ? records : [];
	},
		
	add: function(record) {
		this.records.push(record);
	},
		
	getRecords: function() {
		return this.records;
	},
		
	getRecord: function(index) {
		return this.records[index];
	},
		
	getCount: function() {
		return this.records.length;
	},
		
	isEmpty: function() {
		return this.getCount() < 1;		
	},
	
	getIds: function() {
		var ids = new Array ();
		for (var i = 0; i < this.records.length; i++) {
			ids.push(this.records[i].getId());
		}
		return ids;
	},
		
	getMinRights: function() {
		var minRights = 7;
		for (var i = 0; i < this.records.length; i++) {
			if (this.records[i].Rights < minRights)
				minRights = this.records[i].Rights;
		}
		return minRights;
	},
		
	canWrite: function() {
		return WbsRightsMask.canWrite(this.getMinRights());
	}
});

WbsRightsMask = {
	canRead: function(rightsValue) {
		return rightsValue >= 1;
	},
		
	canWrite: function(rightsValue) {
		return rightsValue >= 3;
	},
	
	canFolder: function (rightsValue) {
		return rightsValue >= 7;
	},
		
	getRightsStr: function(rightsValue) {
		switch (parseInt(rightsValue)) {
			case 0:
				return "No rights";
			case 1:
				return "Read";
			case 3:
				return "Write";
			case 7:
				return "Full";
			default: 
				return "Unknown rights: " + rightsValue;
		}
	}
}

var WbsTable = newClass(WbsObservable, {

	constructor: function (config) {
		this.config = config;
				
		if (config.store)
			this.setStore(config.store);
		
		this.id = config.id;
		if(!this.id)
			this.id = "commontable";
		
		this.configureSorting();
		
		this.sortItems = config.sortItems;
		this.view = null;
		this.views = new Array ();
		this.columns = config.columns;
		
		if (this.config.elem)
			this.elem = this.config.elem;
		else
			throw "No exists elem for table";
		
		this.tableElem = createDiv("wbs-table");
		this.elem.appendChild(this.tableElem);
		
		this.renderElem = createDiv("wbs-table-content");
		this.tableElem.appendChild(this.renderElem);
		
		if (this.config.pager) {
			this.pagerElem = createDiv("wbs-table-pager");
			this.getFooterElem().appendChild(this.pagerElem);
			this.pager = new WbsPager({elem: this.pagerElem, table: this, nameElements: config.nameElements, offset: config.offset});
		}
		
		this.itemsElem = createDiv("wbs-items-page");
		this.itemsElem.innerHTML = 'Show <span class="records-page-count">30</span> records on a page'; 
		this.getFooterElem().appendChild(this.itemsElem);
		
		this.rightsElem = createDiv("wbs-access-rights");
		this.getFooterElem().appendChild(this.rightsElem);		
		
		if (this.config.statusBar) {
			this.statusBarElem = createDiv("wbs-table-status-bar");
			this.getFooterElem().appendChild(this.statusBarElem);
		}
		
		if (this.config.autoHeight == false) {
			var container = createDiv("wbs-container");
			if (this.config.dock)
				this.tableElem.style.height = "100%";
			this.tableElem.appendChild(container);
			container.appendChild(this.renderElem);
			if(this.footerElem)
				container.appendChild(this.footerElem);
			container.resize = function(){};
			this.container = container;
		} else {
			this.container = new WbsFlexContainer({elem: this.tableElem, contentElem: this.renderElem,  footerElem: this.footerElem});
		}
		
		this.items = new Array ();
		this.checkboxes = new Array ();
		
		
		this.superclass().constructor.call(config);
		
		this.addEvents ({
			"afterRender": true,
			"afterLoad": true
		});
	},
		
	onLoad: function () {
	},
	
	getColumns: function() {
		return this.columns;
	},
		
	getFooterElem: function() {
		if (!this.footerElem) {
			this.footerElem = createDiv("wbs-table-footer");
			this.tableElem.appendChild(this.footerElem);
		}
		return this.footerElem;
	},
		
	configureSorting: function() {
		var sorting = null;
		if (this.config.sortingToCookie) {
			sortingStr = getCookie(this.id + '-sorting');
			if (sortingStr) {
				var parts = sortingStr.split(":");
				sorting = {column: parts[0], direction: parts[1]};
			}
		} 
		if (!sorting && this.config.defaultSorting) {
			sorting = this.config.defaultSorting;
		}
		if (!sorting)
			sorting = {column: null, direction: null};
		
		this.currentSorting = sorting;
		this.store.setSorting(sorting.column, sorting.direction);
	},
	
	setStore: function (store) {
		this.store = store;
		store.addListener("recordModified", function(record) {this.storeRecordModified(record)}, this);
		store.addListener("dataChanged", function() {this.renderData(); this.onLoad(); this.fireEvent("afterLoad"); }, this);
		store.addListener("startLoading", function() {this.showLoading();}, this);
		
	},
		
	storeRecordModified: function(record) {
		this.refreshRecordBlock(record.id);
	},
	
	getStore: function () {
		return this.store;
	},
		
	setView: function (view) {
		this.view = view;
	},
		
	showLoading: function() {
		if (this.view && !this.config.hideLoading)
			this.view.showLoading();
	},
	
	addItem: function (item) {
		this.items[this.items.length] = item;
	},
		
	focusRecord: function(recordId) {
		this.view.focusRecordBlock(recordId);
	},
	
	getRenderElem: function() {
		return this.renderElem;
	},
		
	getColumnById: function(name) {
		var column = null;
		for (var i = 0; i < this.columns.length; i++)
			if (this.columns[i].name == name) {
				column = this.columns[i];
				break;
			}
		return column;
	},
		
	setSortingColumn: function(columnId, direction, realSort) {
		var column = this.getColumnById(columnId);
		if (!column)
			return false;
		var realColumnName = (column.realSorting) ? column.realSorting : (realSort ? realSort : column.name);
		
		if (this.config.sortingToCookie)
			setCookie(this.id + '-sorting', realColumnName + ":" + direction);
		this.currentSorting = {column: realColumnName, direction: direction};
		if (this.pager) {
			this.pager.resetPage();
		}
		this.store.setSorting(realColumnName, direction);
		this.store.load();
	},
		
	render: function() {
		this.renderData();
		this.resize();
	},
		
	resize: function() {
		this.container.resize();
	},
		
	renderData: function() {
		this.checkboxes = new Array();
		if (this.view) {
			this.view.render();
		}
		if (this.pager)
			this.pager.render();
		
		this.fireEvent("afterRender");
	},
		
	reload: function() {
		this.store.load();
	},
		
	setViewMode: function (viewMode) {
		if (this.currentViewMode == viewMode)
			return;

		var view = null;
		if (this.views[viewMode] != null) {
			view = this.views[viewMode];
		} else {
			view = this.createView(viewMode);
			this.views[viewMode] = view;
		}
		
		this.currentViewMode = viewMode;
		this.setView(view);
		this.renderData();
	},
	
	reloadView: function () {
		var view = this.createView(this.currentViewMode);
		this.views[this.currentViewMode] = view;
		this.setView(view);
		this.reload();
		//this.renderData();
	},

	getCommonCheckbox: function() {
		var checkbox = createElem("input");
		checkbox.setAttribute("type", "checkbox");
		checkbox.table = this;
		checkbox.toggleAll = function(){
			var allChecked = true;
			for (var checkboxId in this.table.checkboxes) {
				var childCheckbox = this.table.checkboxes[checkboxId];
				if (!childCheckbox.checked)
					allChecked = false;
			}
			var needCheckAll = !allChecked;
			for (var checkboxId in this.table.checkboxes) {
				this.table.checkboxes[checkboxId].checked = needCheckAll;
				var check = this.table.checkboxes[checkboxId];
    			if (jQuery(check).is(":checked")) {
    				jQuery(check).parent().parent().addClass("selected");	    				
    			} else {
    				jQuery(check).parent().parent().removeClass("selected");
    			}
			}
			
			this.checked = needCheckAll;
		}
		checkbox.onclick = function() {this.toggleAll()};
		return checkbox;
	},

	updateItemBlock: function(block, record) {
		if (this.config.selection) {
			var selectorPlace = null;
			var sampObjects = block.getElementsByTagName("SAMP");
			for (var i = 0; i < sampObjects.length; i++)
	  		if (sampObjects[i].className=="selector")
	  			selectorPlace = sampObjects[i];
	  	if (selectorPlace) {
	  		var checkbox = document.createElement("input");
	  		checkbox.setAttribute("type", "checkbox");
	    	checkbox.className = "wbs-table-checkbox";
	    	checkbox.record = record;
	    	this.checkboxes.push(checkbox);
	    	selectorPlace.parentNode.replaceChild(checkbox, selectorPlace);
	    	jQuery(checkbox).change(function () {
	    		if (jQuery(this).parent().parent().hasClass("hover")) {
	    			if (jQuery(this).is(":checked")) {
	    				jQuery(this).parent().parent().addClass("selected");	    				
	    			} else {
	    				jQuery(this).parent().parent().removeClass("selected");
	    			}
	    		}
	    	});
	    	
	  	}
		}
	},

	refreshRecordBlock: function (recordId) {
		var record = null;
		for (var i= 0; i < this.store.records.length; i++) {
			if (this.store.records[i].id == recordId) {
				record = this.store.records[i];
				break;
			}
		}
		this.view.refreshRecordBlock (recordId, record);
	},

	openSortingMenu: function(e, column, a) {
		var table = this;
		var typesLabels = {
			"string" : ["A-Z", "Z-A"],
			"int" : ["1-999", "999-1"],
			"date" : ["1-31", "31-1"]
		};
		var labels = (column.type && typesLabels[column.type]) ? typesLabels[column.type] : typesLabels["string"];

		var menu = new SortingMenu({items: [
				{label: labels[0], onClick: function() {table.setSortingColumn(column.name, "asc")}, iconCls: "sorting-menu-asc"},
				{label: labels[1], onClick: function() {table.setSortingColumn(column.name, "desc")}, iconCls: "sorting-menu-desc"}
		]});
		menu.show(e);		
	},

	createSortLabel: function (column, parentEl, labelValueEl) {
		var sortEl = createDiv("sort-header");
		var table = this;
		sortEl.columnId = column.name;
		
		var label = createElem("label");
		if (labelValueEl)
			label.appendChild(labelValueEl);
		else
			label.innerHTML = column.label;
		/*
		if (column.name == 'C_NAME' && column.name == this.currentSorting.column) {
			label.innerHTML += ' (' + (this.currentSorting.direction == 'desc' ? 'Z-A' : 'A-Z') + ')';
		}
		*/
		if (label.innerHTML.length == 0)
			sortEl.className = "sort-header-empty";
		sortEl.appendChild(label);
		
		var sortingCallback = (column.sortingMenu) ?
			function(e) {table.labelClick = true ; table.openSortingMenu(e, column, table.sortItems);} :
			function(e) {if (table.labelClick) {table.labelClick = false; return; }; table.setSortingColumn(column.name, table.currentSorting.column == column.name ? (table.currentSorting.direction == "asc" ? "desc" : "asc") : "asc")};
		
		addHandler(sortEl, "click", sortingCallback);
		
		addEmptyImg(sortEl);
		
		var table = this;
		if (column.name == this.currentSorting.column) {
			addClass(sortEl, "current-" + this.currentSorting.direction);
		}
					
		parentEl.appendChild(sortEl);
		/*
		if (column.sortingMenu) {
			var sortname = "";
			for (var i = 0; i < this.sortItems.length; i++) {
				if (this.currentSorting.column == this.sortItems[i].dbname) {
					sortname = this.sortItems[i].label;
				}
			}
			var sortedby = jQuery('<div class="sortedby">sorted by: <span id="sortedby">' + sortname + '</span></div>');
			jQuery(parentEl).append(sortedby);
		}
		*/
		
	},

	getSortingColumns: function() {
		var result = new Array ();
		for (var i = 0; i < this.columns.length; i++) {
			if (this.columns[i] && this.columns[i].sorting)
				result.push(this.columns[i]);
		}
		return result;
	},
		
	getNoRecordsMessage: function() {
		return "<no records>";
	},
		
	createRecordsList: function() {
		return new WbsRecordsList();
	},
		
	getSelectedRecords: function() {
		var recordsList = this.createRecordsList();
		for (var checkboxId in this.checkboxes) {
			if (this.checkboxes[checkboxId].checked && this.checkboxes[checkboxId].record) {
				recordsList.add(this.checkboxes[checkboxId].record);
			}
		}
		return recordsList;
	}
});


SortingMenu = newClass (WbsPopmenu, {
	constructor: function(config) {
		config.withImages = true;
		this.superclass().constructor.call(this, config);
	}	
});

var WbsTree = newClass(null, {
	constructor: function (config) {
		this.config = config;
		this.treePanel = null;
		this.rootNode = null;
		this.nodes = new Array ();
		
		this.nodeMap = {
			id : 0,
			text: 1,
			children: 3
		}
	}, 

	init: function() {
		var cf = this.config;
		this.treePanel = new Ext.tree.TreePanel ({el: cf.elemId, lines: false, autoHeight: true, border: false, animate: false, rootVisible: cf.rootVisible});
		
		this.treePanel.addListener("click", this.onNodeClick, this);
		
		if (this.onBeforeNodeSelect)
			this.treePanel.getSelectionModel().on ("beforeselect", this.onBeforeNodeSelect);
		
		if (this.config.nodes) {
			this.loadNodes(this.config.nodes, true);
			this.render();			
		}
	},
		
	loadNodes: function (nodesData, isRootNode) {
		
		var dataRoot = this.addNode(nodesData);
		
		if (isRootNode) {
			this.treePanel.setRootNode(dataRoot);
			this.rootNode = dataRoot;
		} else {
			var rootNode = new Ext.tree.TreeNode ({text:"Root"});
			rootNode.appendChild(dataRoot);
			this.treePanel.setRootNode(rootNode);
			this.rootNode = rootNode;
		}
	},
	
	addNode: function(nodeData, addConfig) {
		var config = {id: nodeData[this.nodeMap.id], text: nodeData[this.nodeMap.text].htmlSpecialChars(), iconCls: this.config.iconCls};
		if (addConfig)
			jQuery.extend(config, addConfig);
		var extNode = new Ext.tree.TreeNode(config);
		extNode.Id = config.id;
		extNode.Name = config.text;
		this.nodes[nodeData[this.nodeMap.id]] = extNode;
		var childrenData = nodeData[this.nodeMap.children];
		if (childrenData) {
			for (var i = 0; i < childrenData.length; i++) {
				var childNodeData = childrenData[i];
				var extChildNode = this.addNode(childNodeData);
				extNode.appendChild(extChildNode);
			}
		}
		$('#' + this.config.elemId + ' .no-tree-items').remove();	
		return extNode;
	},
	
	setChildren: function (parent_id, children)
	{
		var parent = this.getNode(parent_id);
		for (var i = 0; i < children.length; i++) {
			var node = this.getNode(children[i][this.nodeMap.id]);
			if (node) {
				node.setText(children[i][this.nodeMap.text]);
			} else {
				var child = this.addNode(children[i]);
				parent.appendChild(child);
			}
		}
	},
	
	removeNode: function (node) {
		node.parentNode.removeChild(node);
		delete this.nodes[node.Id];
		node.ui.remove();
		this.checkNoItems();
	},
	
	
	checkNoItems: function () {
		if (this.treePanel.getRootNode() && !this.treePanel.getRootNode().firstChild) {
			var message = '';
			var c = this.config.elemId.replace(/-list/, '');
			if (c == 'folders') {
				message = 'no folders';
			} else if (c == 'lists') {
				message = 'no lists';
			} else if (c == 'widgets') {
				message = 'no forms';
			} else if (c == 'groups') {
				message = 'no groups';
			}
			if (message) {
				$('#' + this.config.elemId).append('<div class="no-tree-items">&lt;' + message + '&gt;</div>');
			}
		} else {
			$('#' + this.config.elemId + ' .no-tree-items').remove();
		}
	},
	
		
	render: function () {
		if (this.onBeforeRender)
			this.onBeforeRender();			
		this.treePanel.render();
		this.treePanel.getRootNode().expand();
		this.checkNoItems();
		if (this.onAfterRender)
			this.onAfterRender();			
	},
	
		
	selectNode: function(nodeId, hide) {	
		var node = this.nodes[nodeId];//this.treePanel.getNodeById(nodeId);
		if (!node || node == "undefined") {
			if (this.rootNode) {
				
				this.rootNode.select();
				this.onNodeClick(this.rootNode);
				return false;
			} else {
				return false;
			}
		}
		if (node.Id != this.rootNode.Id) {
			node.ensureVisible();
		}
		node.select();
		if (hide !== true) {
			this.onNodeClick(node);
		}
		node.expand();
		
		return true;
	},
	

	getNode: function(nodeId) {
		var node = this.treePanel.getNodeById(nodeId);
		return node;
	},
		
	getSelectedNode: function() {
		var node = this.treePanel.getSelectionModel().getSelectedNode();
		return node;
	},
	
	unSelect: function () {
		node = this.getSelectedNode();
		if (node) {
			this.treePanel.getSelectionModel().selNode = null;
			jQuery(node.ui.anchor).parent().removeClass('x-tree-selected');
		}
	}, 
	
	addClass: function (cls) {
		node = this.getSelectedNode();
		if (node) {
			jQuery(node.ui.anchor).prev().addClass(cls);
		}		
	},
	
	removeClass: function (cls) {
		node = this.getSelectedNode();
		if (node) {
			jQuery(node.ui.anchor).prev().removeClass(cls);
		}		
	}	
});

var WbsViewmodeSelector = newClass(WbsObservable, {
	constructor: function (table, config) {
		this.renderElem = config.elem;
		this.rendered = false;
		this.table = table;
		if (config.modes) this.modes = config.modes;
		else this.modes = new Array ("columns", "list", "detail", "tile");
		
		modeSelector = this;
		this.modesElems = {};
		this.onclick = null;
		
		
		this.superclass().constructor.call(this);
		
		this.addEvents ({
			"viewmodeChanged"	: true
		});
	},
	
	render: function() {
		this.container = document.createElement("div");
		this.container.className = "viewmode-selector";
		
		for (var i = 0; i < this.modes.length; i++) {
			var elem = this.createModeElem(this.modes[i]);
			this.container.appendChild(elem);
		}
		this.renderElem.appendChild(this.container);
		this.rendered = true;		
	},

	setSelectedElem: function(modeElem) {
		if (this.selectedModeElem != null) {
			removeClass(this.selectedModeElem, "selected");
			this.selectedModeElem.img.src = this.getModeImgSrc(this.selectedModeElem.mode, false);
		}
		if (!modeElem)
			return;
		addClass(modeElem, "selected");
		modeElem.img.src = this.getModeImgSrc(modeElem.mode, true);
		this.selectedModeElem = modeElem;
	},
	
	getModeImgSrc: function(mode, selected) {
		var addPart = (selected) ? "_on" : "";			
		return WbsCommon.getPublishedUrl("common/templates/img/viewmode_" + mode + addPart + ".gif");
	},
		
	isRendered: function() {
		return this.rendered;
	},
		
	selectMode: function(mode) {
		this.setMode(mode);
		this.fireEvent("viewmodeChanged", mode);
	},
		
	setMode: function(mode) {
		this.selectedMode = mode;
		if (this.isRendered())
			this.setSelectedElem(this.modesElems[mode]);
		if (this.table) {
			if (mode != undefined && mode != 'columns' && this.table.currentSorting.column == 'C_EMAILADDRESS') {
				this.table.setSortingColumn('C_NAME', 'asc');
			}
			this.table.setViewMode(mode);
		}
		if (this.onClick)
			this.onClick(this, mode);
	},
		
	setTable: function(table) {
		this.table = table;
		this.setMode(this.selectedMode);
	},
	
	createModeElem: function(mode) {
		var modeElem = createDiv("mode-elem");
		
		this.modesElems[mode] = modeElem;
		modeElem.mode = mode;
		modeElem.img = createElem("img");
		modeElem.img.src = this.getModeImgSrc(mode);
		modeElem.appendChild(modeElem.img);
		if (mode == this.selectedMode) {
			this.setSelectedElem(modeElem);
		}
		
		var table = this.table;
		modeElem.onclick = function () {
			modeSelector.selectMode(mode);
		};
		return modeElem;
	}
});

var WbsView = newClass(null, {
	constructor: function(table, config) {
		this.config = config;
		this.table = table;
	},

	outputRendered: function(outputObj) {
		var renderedElem = this.table.getRenderElem();

		if (this.loading) {
			outputObj = this.renderLoading();
			this.loading = false;
		} else if (!this.table.getStore() || !this.table.getStore().hasRecords()) {
			delete outputObj;
			if (document.app.mode == 'search' && document.app.search_type == 'advanced') {
				$("div.contacts-info").addClass('no-records');
			}
			var outputObj = this.renderNoRecords();
		} else {
			if (document.app.mode == 'search') {
				$("div.contacts-info").removeClass('no-records');
			}
		}
		
		if (renderedElem.listBody) {
			renderedElem.replaceChild(outputObj, renderedElem.listBody);
		} else {
			renderedElem.appendChild(outputObj);
		}
		renderedElem.listBody = outputObj;
		this.table.resize();
	},
	
	getClassName: function() {
		return this.modeName;
	},
	
	selectionEnabled: function() {
		return this.table.config.selection;
	},
		
	renderLoading: function() {
		var block = createDiv("wbs-loading");
		block.innerHTML = "Loading&nbsp; <div class='wbs-loading-icon'></div>";
		return block;
	},
	
	renderNoRecords: function () {
		var block = createDiv("no-records");
		block.appendChild(document.createTextNode(this.table.getNoRecordsMessage()));
		return block;
	},
		
	showLoading: function() {
		this.loading = true;
		this.outputRendered();
	},		
		
	getCellHeaderValueElem: function(column) {
		return document.createTextNode(column.label);
	}
});


var WbsColumnsView = newClass(WbsView, {
	constructor: function (table, config) {
		this.modeName = "columns";
		this.superclass().constructor.call(this, table, config);
	},
	
	render: function() {
		
		var tableElem = document.createElement("table");
		tableElem.className = this.getClassName();
		this.trElems = new Array ();
		
		if (this.config.header != false) {
			var headerElem = this.renderHeader(tableElem);
			tableElem.appendChild(headerElem);
		}
		
		var tbodyElem = document.createElement("tbody");
		tableElem.appendChild(tbodyElem);
		
		for (var i = 0; i < this.table.getStore().getLength(); i++) {
			var record = this.table.getStore().getRecordByIndex(i);
			record.index = i;
			var trElem = document.createElement("tr");
			trElem.className = "item " + ((i % 2) ? " odd" : " even");
			this.renderRow (trElem, record);
			this.trElems[record.id] = trElem;
			jQuery(trElem).hover(function () {
				jQuery(this).addClass("hover");
			}, function () {
				jQuery(this).removeClass("hover");
			});
			tbodyElem.appendChild(trElem);
		}
		this.outputRendered(tableElem);
	},
	
	refreshRecordBlock: function(recordId, record) {
		var block = this.getRecordBlock(recordId);
		clearNode(block);
		
		this.renderRow (block, record);
	},
		
	getRecordBlock: function(recordId) {
		return this.trElems[recordId];
	},
	
	getCellValue: function(column, record) {
		return record[column.name];  	
	},
	  
	getCellHeaderValueElem: function(column) {
		return document.createTextNode(column.label);
	},
	
	renderHeader: function (tableElem) {
		var theadElem = document.createElement("thead");
		var trElem = document.createElement("tr");
		
		var td = document.createElement("th");
		if (this.selectionEnabled()) {
			td.appendChild(this.table.getCommonCheckbox());
		}
		td.style.width = "10px";
		trElem.appendChild(td);
		
		var columns = this.table.getColumns();
		for (var i = 0; i < columns.length; i++) {
			var column = columns[i];
			var td = document.createElement("th");
			if (column.cls)
				td.className = column.cls;
			if (column.width) {
				td.style.width = (!isNaN(column.width)) ? column.width + "px" : column.width;
			}
			//addClass (td, "sort-column");
			var labelValueEl = this.getCellHeaderValueElem(column);
			if (column.sorting)
				this.table.createSortLabel(column, td, labelValueEl);
			else
				td.appendChild(labelValueEl);				
			//td.innerHTML = column.label;
			trElem.appendChild(td);
		}
		
		theadElem.appendChild(trElem);
		
		return theadElem;
	},
	
	renderRow: function(trElem, record) {
		
		var td = document.createElement("td");
		td.style.width = "10px";
		if (this.selectionEnabled()) {
			td.innerHTML = "<SAMP class='selector'></SAMP>";
		}
		trElem.appendChild(td);
		var columns = this.table.getColumns();
		for (var i = 0; i < columns.length; i++) {
			var column = columns[i];
			var td = document.createElement("td");
			if (column.width)
				td.style.width = (!isNaN(column.width)) ? column.width + "px" : column.width;
			if (column.cls)
				td.className = column.cls;
			if (column.type == "date")
				addClass(td, "date-cell");
			
			td.innerHTML = this.getCellValue(column, record);
			trElem.appendChild(td);
		}
		this.table.updateItemBlock(trElem, record);
	}
});



var WbsDivView = newClass(WbsView, {
	
	render: function () {
		
		var itemsListObj = document.createElement("div");
		itemsListObj.className = this.getClassName();
		this.itemElems = new Array ();
		
		if (this.config.header) {
			this.headerElem = createDiv("header");
			if (this.selectionEnabled()) {
				this.headerElem.appendChild(this.table.getCommonCheckbox());
			} else {
				jQuery(this.headerElem).append("&nbsp;");
			}
			this.createSortingPanel(this.headerElem);
			itemsListObj.appendChild(this.headerElem);
		}
		
		for (var i = 0; i < this.table.getStore().getLength(); i++) {
			var record = this.table.getStore().getRecordByIndex(i);
			
			var block = document.createElement("div");
			block.className = "item";
			
			this.buildRecordBlock (block, record);
			this.table.updateItemBlock(block, record);
			this.itemElems[record.id] = block;
			$(block).hover(function () {
				$(this).addClass("hover");
			}, function () {
				$(this).removeClass("hover");
			});			
			itemsListObj.appendChild(block);
		}
		this.outputRendered(itemsListObj);
	},
	
	createSortingPanel: function(headerElem) {
		var sortingPanel = createDiv("sorting-panel");
		sortingPanel.innerHTML = "<div class='label'>Sorting by</label>";
		var sortingColumns = this.table.getSortingColumns();
		// sortingColumns.length
		for (var i = 0; i < 1; i++) {
			var column = sortingColumns[i];
			var sortColumn = createDiv("sort-column");
			//if (i == sortingColumns.length - 1)
			addClass(sortColumn, "last");
			this.table.createSortLabel(column, sortColumn);
			sortingPanel.appendChild(sortColumn);
		}
		headerElem.insertBefore(sortingPanel, headerElem.firstChild);
	},
	
	buildRecordBlock: function(block, record) {
		throw "Not implemented buildRecordBlock in the view";
	},
	
	refreshRecordBlock: function(recordId, record) {
		var block = this.getRecordBlock(recordId);
		block.innerHTML = "";
		this.buildRecordBlock (block, record);
		this.table.updateItemBlock(block, record);
	},
		
	getRecordBlock: function(recordId) {
		return this.itemElems[recordId];
	}
});

var WbsListView = newClass(WbsDivView, {
	constructor: function (table, config) {
		this.superclass().constructor.call(this, table, config); 
		this.modeName = "list";
	}
});

WbsTileView = newClass(WbsDivView, {
	constructor: function (table, config) {
		this.superclass().constructor.call(this, table, config); 
		this.modeName = "tile";
	}
});


var WbsDlg = newClass(WbsObservable, {
	constructor: function (config) {
		if (!config)
			config = this.getDefaultConfig();
			
		this.config = config;
		var wnd = this;
		this.buttons = new Array ();
		this.innerContentElem = null;
		
		this.superclass.constructor.call(this);
	},
	
	render: function() {
		var windowElem = document.createElement("div");
		windowElem.className = "wbs-dlg";
		if (this.config.cls)
			addClass(windowElem, this.config.cls);
		windowElem.style.display = "none";
		
		if (this.config.width) {
			windowElem.style.width = this.config.width + "px";
		}
		if (this.config.height)
			windowElem.style.height = this.config.height == 'auto' ? 'auto' : this.config.height + "px";
		
		this.createHeader(windowElem);
		this.createContent(windowElem);
		this.createFooter(windowElem);
			
		document.body.appendChild(windowElem);
		return windowElem;
	},
	
	setPosition: function() {
		var docSize = getDocumentSize();
		var windowElem = this.getWindowElem();
		windowElem.style.top = (docSize.height - windowElem.offsetHeight)/2 + "px";
		windowElem.style.left = (docSize.width - windowElem.offsetWidth)/2 + "px";
	},
	
	getWindowElem: function() {
		if (!this.windowElem) {
			this.windowElem = this.render();
		}
		return this.windowElem;
	},
	
	show: function() {
		var windowElem = this.getWindowElem();
		windowElem.style.display = "block";
		this.showFade();
		this.setSizes();
		this.setPosition();
		if (this.onAfterShow)
			this.onAfterShow();
	},
	hide: function() {
		var windowElem = this.getWindowElem();
		windowElem.style.display = "none";
		this.hideFade();
	},
		
	close: function() {
		this.hideFade();
		var windowElem = this.getWindowElem();		
		windowElem.parentNode.removeChild(windowElem);
		delete windowElem;
	},
		
	showLoading: function(label) {
		if (!label)
			label = "Loading";
		if (!this.loadingElem) {
			this.loadingElem = createDiv("wbs-absolute-full-size");
			this.loadingElem.innerHTML = "<span class='wbs-loading'>" + label + " <div class='wbs-loading-icon'>&nbsp;</div></span>";
			this.getContentElem().appendChild(this.loadingElem);
		}
	},
		
	hideLoading: function() {
		if (this.loadingElem) {
			this.loadingElem.parentNode.removeChild(this.loadingElem);
			this.loadingElem = null;
		}
	},
		
	
	getDefaultConfig: function() {
		return {};
	},
	
	createHeader: function (windowElem) {
		this.headerElem = createDiv("wbs-dlg-header");
		
		if (this.config.title) {
			var label = createDiv("label");
			label.innerHTML = this.config.title;
			this.headerElem.appendChild(label);
		}
		
		if(!this.config.hideCloseBtn)
			this.createCloseButton(this.headerElem);
		windowElem.appendChild(this.headerElem);
	},
	
	createContent: function(windowElem) {
		this.contentElem = createDiv("wbs-dlg-content");
		
		if (this.config.contentElemId) {
			var content = document.getElementById(this.config.contentElemId);
			this.contentElem.appendChild(content);
			content.style.display = "block";
		} else {
			this.innerContentElem = createDiv("wbs-dlg-content-inner");
			this.contentElem.appendChild(this.innerContentElem);
		}
		
		this.buildContent(this.getContentElem());
		
		windowElem.appendChild(this.contentElem);
	},
		
	buildContent: function(contentElem) {
	},
		
	buildFooter: function (footerElem) {
		if (this.config.buttons) {
			for (var i = 0; i < this.config.buttons.length; i++) {
				var button = this.config.buttons[i];
				var addClass = button.disabled ? " dsabled-btn" : "";
				var buttonElem = createElem("input", "wbs-dlg-button" + addClass);
				buttonElem.setAttribute("type", "button");
				buttonElem.value = button.label;
				if (button.onClick)
					buttonElem.onclick = button.onClick;
				if (button.scope)
					buttonElem.onclick = buttonElem.onclick.bind(button.scope);
				if (button.disabled)
					buttonElem.disabled = true;
				if (button.id) {
					buttonElem.id = button.id;
					this.buttons[button.id] = buttonElem;
				}
				footerElem.appendChild(buttonElem);
			}
		}	
	},
		
	getContentElem: function() {
		if (this.innerContentElem)
			return this.innerContentElem;
		else
			return this.contentElem;
	},
		
	createFooter: function (windowElem) {
		this.footerElem = createDiv("wbs-dlg-footer");
		this.buildFooter(this.footerElem);
		windowElem.appendChild(this.footerElem);
	},
	
	setSizes: function() {
		this.contentElem.style.height = (this.getHeight() - this.headerElem.offsetHeight - this.footerElem.offsetHeight) + "px";
	},
	
	getHeight: function() {
		return this.windowElem.offsetHeight;
	},
	
	getWidth: function() {
		return this.windowElem.offsetWidth;
	},
	
	createCloseButton: function (parentElem) {
		var closeBtn = createDiv("close-btn");
		closeBtn.innerHTML = '<img height="16" width="16" src="../common/templates/img/close.gif"/>';
		closeBtn.onclick = function(){
			if (this.config.closeMode == "close")
				this.close();
			else 
				this.hide();
		}.bind(this);
		parentElem.appendChild(closeBtn);
	},
	
	showFade: function() {
		if (this.fade == null) {
			this.fade = createDiv("black-overlay");
			document.body.appendChild(this.fade);
		}
		this.fade.style.display = "block";
	},
	hideFade: function() {
		if (this.fade)
			this.fade.style.display = "none";
	}
});
function init () {
	var last_block = getCookie("last_block");
	var act_last_block = last_block;

	if (!last_block || jQuery("#" + last_block).length == 0) {
		last_block = jQuery("#nav-bar div.acc-block:first").attr('id');
	}
	jQuery("#" + last_block).show();
	if (document.app.navBar) {
		document.app.navBar.setActiveBlock(last_block, true);
	}
	if (document.app.navBarBlockActivated) {
		if (!act_last_block || act_last_block == 'null') act_last_block = last_block;
		document.app.navBarBlockActivated({id: act_last_block});
	}
	
	document.app.page = 0;
}

function openFrame(obj) {
	document.app.openSubframe($(obj).attr('href'), 1);
	return false;
}

function loadPage(url) {
	document.app.openSubframe(url);
}

function openFolder (id) {
	document.app.foldersTree.selectNode(id);
}

function openGroup (id) {
	document.app.groupsList.selectNode(id);	
}

var currentViewChanged = false;

var UGControlPanel = newClass(WbsObservable, {
	constructor: function(app, config) {
		this.app = app;
		this.config = config;
		this.contentEl = document.getElementById("control-panel");
		this.items = [];
		
		var titleWrapElem = createDiv("title-wrapper");
		document.getElementById("group-title-container").insertBefore(titleWrapElem, document.getElementById("group-title-container").firstChild);
		var titleElem = createDiv("title");
		titleWrapElem.appendChild(titleElem);
		
		this.titleControl = this.app.currentFolder.createTitleControl(titleElem);
			
		this.setTitleControl(this.titleControl);		
		
		this.viewmodeSelector =  this.createViewmodeSelector ();
		
		if (this.app.right.contacts) {
			var addContact =  new WbsMenuButton({
				el: "add-new-contact",
				url: "?mod=contacts&act=add&type=1",
				label: "Add a new contact",
				getMenu: this.getAddContactMenu.bind(this)
			});
		}
		this.usersActionsBtn = new WbsMenuButton({el: "users-actions-btn", getMenu: this.getUsersMenu.bind(this)});
	
		this.folderInfoElem = createDiv("folder-info-block");
		document.getElementById("group-title-container").appendChild(this.folderInfoElem);
			
	},
	
	addItem: function(item) {
		this.items.push(item);		
	},
		
	
	createViewmodeSelector: function() {
		var viewModeSelector = new WbsViewmodeSelector(null, {elem: document.getElementById("viewmode-selector-wrapper"), modes: ["columns", "detail", "tile"]});

		viewModeSelector.addListener("viewmodeChanged", function(mode) {
			var elem = document.app.mode + ":" + document.app.getCurrentFolder().Id; 
			jQuery.post("?mod=users&act=viewmode&ajax=1", {elem: elem, mode: mode}, function (response) {
			}, "json");		
		});
		
		this.addItem(viewModeSelector);
		return viewModeSelector;
	},
		
	setTableToControl: function(table) {
		this.viewmodeSelector.setTable(table);
	},
		
	groupChanged: function() {
		var group = this.app.currentFolder;
		this.titleControl.setViewMode();
		this.titleControl.setValue(group.Name);
		if (group.Data && group.Data.viewMode) {
			this.viewmodeSelector.setMode(group.Data.viewMode);
		}
	},
	
	folderChanged: function() {
		var folder = this.app.currentFolder;
		this.titleControl.setViewMode();
		this.titleControl.setValue(folder.Name);
		
		if (folder.Data && folder.Data.viewMode) {
			this.viewmodeSelector.setMode(folder.Data.viewMode);
		}
	},	
	
	setTitleControl: function(c) {
		this.titleControl = c;
		this.activeTitleControl = c;
	},
		
	render: function() {
		for (var i = 0; i < this.items.length; i++) {
			this.items[i].render();
		}
		if(this.activeTitleControl) {
			this.activeTitleControl.render();
		}
	},
		
	getUsersMenu: function() {
		var selectedUsers = this.app.table.getSelectedRecords();
		return selectedUsers.getMenu();
	},
	getAddContactMenu: function() {
		return new UGAddContactMenu();
	},
	
	getGroupMenu: function() {
		return this.app.getCurrentFolder().getMenu();
	}	
});

var UGUser = newClass (WbsRecord, {
	constructor: function(recordData) {
		this.folder = document.app.getCurrentFolder();
		this.superclass().constructor.call(this, recordData);
	},
	getFields: function() {
		var fields = [
		    {name: "U_ID"},
		    {name: "U_STATUS"},
		    {name: "C_ID"},
		    {name: "CT_ID"},
		    {name: "ENC_ID"},
		    {name: "C_NAME"}
		];
		
		for (var i in document.dbfields) {
			
			fields.push({name: i});	
		}
		return fields;
	},

	showMenu: function(e, type) {
		var menu = new UGUsersMenu(this, type);
		menu.show(e);
	},

	canWrite: function() {
		return this.folder.canWrite();
	}
});

var UGColumnsView = newClass(WbsColumnsView, {

	constructor: function(table, config) {
		this.superclass().constructor.call(this, table, config);
		this.superclass = function() {return WbsColumnsView.prototype; }
	},


	getCellHeaderValueElem: function(column) {
		if (column.name == "IS_USER") {
			var icon = createDiv("icon");
			icon.title = "User status";
			return icon;
		} else if (column.name == "COLUMNS") {
			var icon = $('<div id="view-settings-btn" class="' + column.cls + '" title="Customize columns..."></div>')
			jQuery(icon).click(function (e) {
				var viewSettingsWindow = new UGViewSettingsPopwindow({el: document.getElementById("view-settings-btn"), closeMode: "hide"});
				viewSettingsWindow.setViewSettings(document.app.getViewSettings());
				viewSettingsWindow.addListener("currentViewChanged", function() {
					document.app.table.columns = document.app.table.actualColumns();
					document.app.table.reloadView();
				});
				viewSettingsWindow.show(e);
			});
			return icon.get(0);
		}
		return this.superclass().getCellHeaderValueElem.call(this, column);
	},

		
	getCellValue: function(column, record) {

		if (column.name == "COLUMNS") 
			return "";
		if (column.name == "IS_USER") {
			if (record.U_ID) {

				if (record.U_STATUS == 3) {
					return '<img src="../UG/img/icon-invite.gif" width="16" />';
				}
				else if (record.U_STATUS == 2) {
					return '<img src="../UG/img/icon-inactive.gif" width="16" />';
				} else {
					return '<img src="../UG/img/icon-user.gif" width="16" />';
				}
			} else {
				return '<img src="../common/html/res/images/s.gif" width="15" />';
			}
		}
		if (column.type == "IMAGE") {
			if (record[column.name] == "") {
				if (column.name == document.photoField[record.CT_ID]) {
					var img = '../UG/img/empty-contact' + record.CT_ID + '.gif';
				} else {
					return '<div class="emptyimg">' + 'no image' + '</div>';
				}
			} else if (record[column.name] == null) {
				return "";
			} else { 
				var img = record[column.name] + '&size=96';
			}
			return '<img src="' + img + '" />';
		}

		record[column.name] = this.table.outputValue(record[column.name], column.name == 'C_NAME');
		
		if (column.name == "U_ID") {
			if (record.U_STATUS == 3) {
				return '<i style="color:#666; font-size:80%">invited</i>';
			} else {
				return record[column.name];
			}
		}
		if (column.name == "C_NAME") {
			return '<a href="?mod=users&C_ID='+ record.ENC_ID + '&mode=' + document.app.mode + "&id="  + document.app.getCurrentFolder().Id + '" onclick="return openFrame(this)">' + record[column.name] + '</a>';
		} 
		
		if (column.type == "URL") {
			if (record[column.name]) {
				return '<a target="_blank" href="' + record[column.name] + '">' + record[column.name] + '</a>'; 
			}
		}
		
		if (column.name == "C_EMAILADDRESS") {
			if (record.C_EMAILADDRESS) {
				var es = record.C_EMAILADDRESS.split(', ');
				var res = new Array();
				for (var k = 0; k < es.length; k++) {
					var e = es[k];
					var em = e.replace(/<span\sclass="highlight">([^<]*)<\/span>/gi, "$1");
					res.push('<a onclick="return openFrame(this)" href="?mod=users&act=email&mode=' + document.app.mode + '&id=' + record.C_ID + '&email=' + em + '">' + e + '</a>');
				}
				return res.join(', ');
			}
		}

		return this.superclass().getCellValue.call(this, column, record) ;
	}	
	});


var UGListView = newClass (WbsListView, {
	constructor: function (table, config) {
		config.header = true;
		this.superclass().constructor.call(this, table, config); 
	},

	getClassName: function() {
		if (this.config.iconType)
			return this.modeName + " " + this.config.iconType;
		return this.modeName;
	},

	getThumbnailHtml: function (record) {
		var photo = document.photoField[record['CT_ID']];
		if (!photo) {
			return false;
		}
		var src = record[photo] == '' ? "img/empty-contact" + record.CT_ID + ".gif" : record[photo] + "&size=96";
		return "<div onClick='this.parentNode.click()' class='thumbnail'><table><tr><td>" + "<img src='" + src + "'>" + "</td></tr></table></div>";
	},

	buildRecordBlock: function(block, record) {
		
		record.EDIT_URL = '?mod=users&C_ID='+ record.ENC_ID + '&mode=' + document.app.mode + "&id="  + document.app.getCurrentFolder().Id +'&p='+ (document.app.table.pager.currentPage);
		var resHTML = "";
		
		resHTML += "<div class='controls'><SAMP class='selector'></SAMP></div>";
		var html = this.getThumbnailHtml(record);
		if (html) {
			resHTML += "<a class='wrap-image' href='" + record.EDIT_URL + "' onclick='return openFrame(this)'>" + html + "</a>";
		}
		resHTML += "<div class='content' " + (!html ? 'style="margin-left:25px"' : '') + ">";
			resHTML += "<div class='name'>" + "<a href='" + record.EDIT_URL + "' onclick='return openFrame(this)'>" + this.table.outputValue(record.C_NAME, true) + "</a>" + "</div>";
			resHTML += "<SAMP id='desc'></SAMP>";
			resHTML += "<div class='small-gray'>";
			for (var i = 0; i < document.listfields[record.CT_ID].length; i++) {
				var section = document.listfields[record.CT_ID][i];		
				var section_content = "";
				for (var j = 0; j < section.fields.length; j++) {
					if (record[section.fields[j][0]]) {
						if (section_content.length > 0) {
							section_content += ', ';
						}
						var v = record[section.fields[j][0]];
						if (section.fields[j][0] == 'C_EMAILADDRESS') {
							var es = v.split(', ');
							var res = new Array();
							for (var k = 0; k < es.length; k++) {
								var e = es[k];
								res.push('<a onclick="return openFrame(this)" href="?mod=users&act=email&mode=' + document.app.mode + '&id=' + record.C_ID + '&email=' + e + '">' + e + '</a>');
							}
							v = res.join(', ');
						} else if (document.dbfields[section.fields[j][0]] == 'URL') {
							v = '<a target="_blank" href="' + v + '">' + v + '</a>'; 
						}
						section_content += '<span class="field_title" title="' + section.fields[j][1] + '">' + v + '</span>';
					}
				}
				if (section_content.length > 0) {
					resHTML += '<span class="section_title">' + section.name + ':</span>' + section_content + '<br />';
				}
			}
			resHTML += "</div>";
			
		resHTML += "</div>";
		
		block.innerHTML = resHTML;
		
	}
});


var UGTileView = newClass(WbsTileView, {

	constructor: function(table, config) {
		config.header = true;
		this.superclass().constructor.call(this, table, config); 
	},

	getThumbnailHtml: function (record) {
		var photo = document.photoField[record['CT_ID']];
		var src = record[photo] == '' ? "img/empty-contact" + record.CT_ID + ".gif" : record[photo] + "&size=96"; 
		return "<div onClick='this.parentNode.click()' class='thumbnail'><table><tr><td>" + (photo ? "<img src='" + src + "' />" : '') + "</td></tr></table></div>";
	},
	
	buildRecordBlock: function(block, record) {
		var resHTML = "";
		
		var controlsHTML = "";
		if (record.CT_ID == "1") {
			controlsHTML += record.C_COMPANY;
		}
			
		record.EDIT_URL = '?mod=users&C_ID='+ record.ENC_ID + '&mode=' + document.app.mode + "&id="  + document.app.getCurrentFolder().Id +'&p='+ (document.app.table.pager.currentPage);
		
		resHTML += "<br style='display: none'/>"; // IE bugfix
		resHTML += "<a style='margin-bottom: 0px' class='wrap-image' href='" + record.EDIT_URL + "' onclick='return openFrame(this)'>" + this.getThumbnailHtml(record) + "</a>";
		resHTML += "<div class='content' style='margin: 0px; position:relative'>";
			var title = this.table.outputValue(record.C_NAME, true);
			//title = title.replace(/<\/?(?!\!)[^>]*>/gi, ''); 
			resHTML += "<SAMP class='selector'></SAMP><div class='name'>" + "<a href='" + record.EDIT_URL + "' title='" + title + "'>" + title + "</a>" + "</div>";
			//resHTML += "<div class='controls'><SAMP class='control-icon'></SAMP>" + controlsHTML + "</div>" ;
		resHTML += "</div>";
			
		block.innerHTML = resHTML;
	}
});


var UGViewSettingsPopwindow = newClass(WbsPopwindow, {
	constructor: function() {
		var config = {
			width: 555, 
			height: 280,
			cls: "view-settings-window"	
		};
		this.viewSettings = null;
		this.superclass().constructor.call(this, config);
		
		this.addEvents({
			currentViewChanged : true
		});
	},
		
	render: function() {
		this.buildVisibleFields();		
	
		var elem = this.createFieldBlock("buttons");
		
		var saveBtn = createElem("input", null, {type:"button", value: "Save"});
		saveBtn.onclick = this.save.bind(this);
		elem.appendChild(saveBtn);
		
		var cancelBtn = createElem("input", null, {type:"button", value: "Cancel"});
		cancelBtn.onclick = this.cancel.bind(this);
		elem.appendChild(cancelBtn);
	},
		
	save: function() {
		var _this = this;
		var f = new Array();
		$("#in option").each(function () {
			//if (jQuery(this).val() > 0) {
				f.push(jQuery(this).val());
			//}
		});
		var params = {save: 1, "fields[]": f, mode: document.app.mode};
		if ($("#apply-to-current").is(":checked")) {
			params.elem = document.app.getCurrentFolder().Id;
		}
		$.post("?mod=users&act=viewsettings&ajax=1",
			params,
			function (response) {
				if (response.status == "OK") {
					var showFields = response.data.fields;
					document.fields = new Array();
					for (var i = 0; i < showFields.length; i++) {
						document.fields[i] = {
								name: showFields[i][0],
								label: showFields[i][1],
								sorting: showFields[i][2] ? true : false,				
								type: showFields[i][3] ? showFields[i][3] : "string"
						};
						if (i == 0) {
							document.fields[i].sortingMenu = true;
						}
					}		
				}
				_this.fireEvent("currentViewChanged");
				_this.close();
		}, "json");
	},
		
	cancel: function() {
		this.close();		
	},
		
	onAfterShow: function() {
	},
	
	compareArray: function (a1, s2) {
		if (a1.length() != a2.length()) {
			return false;
		}
		var v;
		v = true;
		for (var i = 0; i < a1.length(); i++) {
			v = v | (a1[i] != a2[i]);
		}
		return v;
	},
		
	createFieldBlock: function(cls) {
		var elem = this.getInnerElem();
		var field = createDiv("field");
		if (cls) {
			addClass(field, cls);
		}
		elem.appendChild(field);
		return field;
	},
		
	setViewSettings: function(viewSettings) {
		this.viewSettings	= viewSettings;
	},
		
	
	buildVisibleFields: function(elem) {
		var elem = this.createFieldBlock("visible-fields");
		var f = new Array();
		for (var i = 0; i < document.fields.length; i++) {
			f.push(document.fields[i].name);
		}
		f = f.join(',');
		jQuery(elem).width("100%").css('text-align', 'center').append('Loading... <img src="../common/img/loading.gif" />').load("?mod=users&act=viewsettings&mode=" + document.app.mode + "&elem=" + document.app.getCurrentFolder().Id+"&f=" + f);
	}	
});

var ItemsOnPageMenu = newClass (WbsPopmenu, {
	constructor: function(obj) {
		var config = {};
		config.items = new Array();
		for (var i = 30; i <= 70; i = i + 10) {
			config.items.push({label: i, onClick: function () {document.app.setItemsCount(this.n)}.bind({n:i})});	
		}
	            
		this.superclass().constructor.call(this, config);
	}
});


var UGFolder = newClass(WbsObservable, {
	constructor: function() {
		this.addEvents({"changed" : true, "modified" : true});
		this.reset();
	},
		
	reset: function() {
		$("div.contacts-info").hide();
		this.Name = "Loading...";
		this.Id = null;
		this.Rights = 0;
		this.fireEvent("changed", this);
	},
	
	load: function(data) {
		var oldId = this.Id;
		var oldName = this.Name; 

		this.Data = data;
		this.Name = data.NAME;
		this.Id = data.ID;
		this.Rights = data.RIGHTS;

		if (oldId != this.Id) {
			this.fireEvent("changed", this);
		} else if (oldName && oldName != this.Name) {
			this.fireEvent("modified", this);
		}
		if (this.Rights == 7 || (document.app.mode == 'groups' && this.Id == parseInt(this.Id))) {
			this.titleControl.setEditable(true);
		} else {
			this.titleControl.setEditable(false);
		}
	
		if (this.Rights || document.app.mode == 'search' || document.app.mode == 'groups') {
			$("div.contacts-info").show();
		} else {
			$("div.contacts-info").hide();
		}
	},
		
	renameFolder: function (newValue, onSuccess, onFail) {
		this.Name = newValue;
		this.titleControl.setValue(newValue);
		if (onSuccess) {
			onSuccess();
		}
		this.fireEvent("modified", this);			
	}, 
		
	editList: function () {
		if (this.Data.SEARCH) {
			document.app.mode = "search";
			document.app.openSubframe("?mod=contacts&act=search&type=list&id=" + this.Id +"&list=1");			
		} else {
			document.app.openSubframe("?mod=lists&act=edit&id=" + this.Id);
		}
	},

	doCopyMove: function(folderId, action, callback) {
		if (action != "move") {
			throw "Error action: " + action;
		}
		jQuery.post("index.php?mod=folders&act=move&ajax=1",
			{from: this.Id, to: folderId, action: action},
			function (response) {
				if (response.status == "OK") {
					if (callback) {
						callback(response.data);
					}
				} else {
					alert(response.error);
				}		
			}, "json"
		);
	},

	getRights: function() {
		return this.Rights;
	},
	
	canWrite: function() {
		return true;
	},
	
	showRename: function() {
		this.titleControl.setEditMode();
	},
		
	createTitleControl: function(elem) {
		var titleControl = new WbsEditableLabel({elem: elem, clickToEdit: false});
		
		titleControl.addListener("changeMode", function() {
			if (document.app) {
				document.app.resize();
			}
		}, this);
	  
	  titleControl.saveHandler = function(newValue, saveSuccessHandler, saveFailedHandler) {
			this.rename(newValue, saveSuccessHandler, saveFailedHandler);
		}.bind(this);
		this.titleControl = titleControl;
	  return titleControl;
	}, 
	
	rename: function (newValue, onSuccess, onFail) {
		Ext.Ajax.request ({
			url: "?mod="+ document.app.mode +"&act=rename&ajax=1",
			params: {id: this.Id, newName: newValue},
			success: function (response) {
				var result = Ext.decode(response.responseText);
				if (result.status == 'OK') {
					this.Name = newValue;
					if (onSuccess) onSuccess();
					this.fireEvent("modified", this);
				} else if (result.status = 'ERR') {
					if (onFail) onFail(result.error);
				}		
			}.bind(this)
		});	
	},
	
	tryDelete: function(onSuccess, onFail) {
		var str = "Are you sure you want to delete \"%s\"?".replace("%s", this.Name);
		if (document.app.mode == 'folders' && this.Id == 'PUBLIC') {
			str += '\r\n\r\nNOTE: "Public" is a special folder available for all users. If you delete "Public" now, you will be able to add it again later.';
		}
		if (document.app.mode == 'lists') {
			str += "\r\n\r\nNOTE: Contacts will not be deleted.";
		}
		if (document.app.mode == 'groups') {
			str += "\r\n\r\nNOTE: Users will not be deleted.";
		}
		if (!confirm(str)) 
			return false;
		
	  	var folder_id = this.Id;
	  	this.Name = "Loading...";
	  	document.app.startLoading();
	  	document.app.table.view.showLoading();
		$.post("?mod=" + document.app.mode + "&act=delete&ajax=1", {id: folder_id}, function (response) {
			document.app.finishLoading();
			if (response.status == 'OK') {
				this.fireEvent("deleted", this);
			} else if (response.status == 'ERR') {
				document.app.selectFolder(folder_id);
				$("#list_info div.info-message").remove();
				var message = '<div class="info-message-close"><a href="javascript:void(0)" onclick="jQuery(\'#list_info div.info-message\').remove(); document.app.resize()">Close</a></div>' + response.error;
				$("#list_info").append('<div class="info-message with-close">' + message + '</div>');
			}
		}.bind(this), "json");
	},
	
	showMoveDlg: function() {
		this.showDlg("move");
	},

	showDlg: function(action) {
		var title = "Move folder";
		var description = "Select new parent folder";
		var dlg = new UGCopyMoveDlg({
			selectedFolderId: this.Id, action: action, actionObject: this,
			contentElemId: "dlg-move-content", title: title, height: 340, width: 360, description: description
		});
		dlg.show();
	}	

});

var UGUsersList = newClass (WbsRecordset, {
	constructor: function(records){
		this.superclass().constructor.call(this, records);
		this.app = document.app;
	},
	
	getMenu: function() {
		if (document.app.mode == 'groups') {
			return new UGUsersListMenu(this);
		} else {
			return new UGContactsListMenu(this);
		}
	},
		
	showAddToGroupDlg: function() {
		this.showDlg("add_to_group");		
	},
		
	showChangeStatusDlg: function() {
		this.showDlg("change_status");
	},
	
	showMoveToFolderDlg: function() {
		this.showDlg("move_to_folder");
	},
		
	showAddToListDlg: function() {
		this.showDlg("add_to_list");
	},
	
	setDisabled: function () {
		this.setStatus(2);
	},
	
	setEnabled: function () {
		this.setStatus(0);
	},
	
	setStatus: function (status) {
		if (this.app.mode != 'groups') {
			return false;
		}
		$.post("?mod=users&act=disable&ajax=1", {"ids[]": this.getIds(), status: status}, function (response) {
			if (response.status == 'OK') {
				document.app.store.load();
				if (status == 2) {
					var message = "Login has been disabled for %s user(s)";
				} else {
					var message = "Login has been enabled for %s user(s)";
				}
				message = message.replace("%s", response.data.users);
				document.app.showInfoMessage(message);
			}
		}, "json");
	},

	tryDelete: function() {
		if (this.app.mode == "groups") {
			var message = "%s users will be deleted. Are you sure?";
		} else {
			var message = "Are you sure you want to delete %s contacts?";
		}
		if (!confirm(message.replace("%s", this.getCount())))
			return false;
		jQuery.post("?mod=users&act=delete&ajax=1", {"ids[]": this.getIds()}, function (response) {
			if (response.status == 'OK') {
				document.app.store.load();
				var message = '';
				if (response.data.deleted) {
					if (document.app.mode == 'groups') {
						message += response.data.deleted + ' users were successfully deleted<br />';
					} else {
						message += response.data.deleted + ' contacts were successfully deleted<br />';
					}
				}
				if (response.data.users) {
					message += response.data.users + ' contacts were not deleted because they have user accounts<br />';
				}
				if (response.data.noaccess) {
					message += response.data.noaccess + ' contacts were not deleted: insufficient access rights<br />' 
				}
				if (response.data.self) {
					message += response.data.self + " could not be deleted. You can not delete yourself!";
				}
				$("#list_info div.info-message").remove();
				$("#list_info").append('<div class="info-message">' + message + '</div>');

				$("#list_info div.info-message").fadeIn("slow", function () {
					jQuery("#list_info div.info-message").fadeOut(5000, function () {jQuery(this).remove()});
				});
				
			} else if (response.status == 'ERR') {
				alert(response.error);
			}
		}, "json");
	},
	
	exportContactsDlg: function () {
//		location.href = "?mod=users&act=csv&export=1&user_ids=" + this.getIds().join(',')+"&group_id=" + this.app.getCurrentFolder().Id;

		var title = "Export contacts";
		var dlg = new UGExportContactsDlg({
			selectedFolderId: this.app.getCurrentFolder().Id,
			actionObject: this,
			contentElemId: "dlg-export-content", title: title, height: 400, width: 700
		});
		dlg.show();

	},

	sendEmailScreen: function () {
		document.app.openSubframe("?mod=users&act=email&mode=" + document.app.mode + "&user_ids=" + this.getIds().join(','), 1);
	},

	sendsmsDlg: function () {

		var title = "Send SMS";
		var dlg = new UGSendsmsDlg({
			selectedFolderId: this.app.getCurrentFolder().Id,
			actionObject: this,
			contentElemId: "dlg-sendsms-content", 
			title: title, 
			height: 410, 
			width: 600
		});
		dlg.show();
	},

	showDlg: function(action) {
		switch(action) {
			case "move_to_folder":
				var title = "Move contacts";
				var description = "Select folder";
				var dlg = new UGCopyMoveDlg({
					systemFolders: true,
					selectedFolderId: this.app.getCurrentFolder().Id,
					action: action,
					actionObject: this,
					contentElemId: "dlg-move-content", title: title, height: 340, width: 360, description: description
				});
				dlg.show();
				break;
			case "add_to_list":
				var title = "Add contacts to list";
				var description = "Select list";
				var dlg = new UGAddToListDlg({
					action: action,
					actionObject: this,
					contentElemId: "dlg-move-content", title: title, height: 'auto', width: 360, description: description
				});
				dlg.show();
				break;
		}
	},
	
	doCopyMove: function(folderId, action, callback) {
		if (action != "move_to_folder") {
			throw "Error action: " + action;
		}
		jQuery.post("index.php?mod=contacts&act=move&ajax=1",
			{folderId: folderId, action: action, "contacts[]": this.getIds()},
			function (response) {
				if (response.status == 'OK') {
					if (callback) {
						callback();
					}
					var message = '';
					if(response.data['success']) {
						message = response.data['success'] + ' contacts were moved to folder "' + response.data['folderName'] + '"<br />';
					}
					if(response.data['errors']) {
						message += response.data['errors'] + ' contacts were not moved: insufficient access rights';
						jQuery("#list_info div.info-message").remove();
						message = '<div class="info-message-close"><a href="javascript:void(0)" onclick="' +
							'jQuery(\'#list_info div.info-message\').remove(); document.app.resize()">Close</a></div>' + message;
						jQuery("#list_info").append('<div class="info-message with-close">' + message + '</div>');
					} else {
						jQuery("#list_info").append('<div style="display:none" class="info-message">' + message + '</div>');
						jQuery("#list_info div.info-message").fadeIn("slow", function () {
							jQuery("#list_info div.info-message").fadeOut(3000, function () {
								jQuery(this).remove();
							});
						});
					}
				} else {
					alert(response.error);
				}		
			}, "json"
		);
	},

	doSendsms: function(callback) {

		if (!jQuery("#To").val().replace(/^\s*(.*?)\s*$/,"$1")) {
			jQuery('#error_block').html("Please enter phone number");
			jQuery('#error_block').show();
			jQuery('#To').focus();
		} else if (!jQuery("#message").val().replace(/^\s*(.*?)\s*$/,"$1")) {
			jQuery('#error_block').html("Please enter message text");
			jQuery('#error_block').show();
			jQuery('#message').focus();
		} else {
			jQuery('#loading-block', parent.document).css('visibility', '');
			jQuery.post("?mod=contacts&act=sendsms&mode=" + document.app.mode,
				{"To": jQuery("#To").val() + "", "message": jQuery("#message").val() + ""},
				function (response) {
					jQuery('#loading-block', parent.document).css('visibility', 'hidden');
					try {
						var r = eval("(" + response + ")");
						if (r.Error) {
							jQuery('#error_block').html(r.Error);
							jQuery('#error_block').show();
						} else {
							if (callback) {
								callback();
							}
							jQuery("#list_info").append('<div style="display:none" class="info-message">SMS was sent to ' +
								r.Count + ' recipient(s)</div>');
							jQuery("#list_info div.info-message").fadeIn("slow", function () {
								jQuery("#list_info div.info-message").fadeOut(3000, function () {jQuery(this).remove()});
							});
						}
					} catch (e) {
						jQuery('#error_block').html(response);
						jQuery('#error_block').show();
					}
				}
			);
		}
	},
	excludeFromList: function () {
		var list_id = this.app.getCurrentFolder().Id;
		$.post("?mod=contacts&act=exclude&ajax=1", {list_id: list_id, "contacts[]":this.getIds()}, function (response) {
			if (response.status == 'OK') {
				var n = response.data.contacts;
				if (n) {
					document.app.store.load();
					var message = n + ' contacts were excluded from this list';
					document.app.showInfoMessage(message, true);
				}
			} else if (response.status == 'ERR') {
				alert(response.error);
			}
		}, "json");
	},

	doAddToList: function(listId, listName, callback) {
		var n = this.getIds().length;
		jQuery.post("index.php?mod=contacts&act=addtolist&ajax=1",
			{listId: listId, listName: listName, "contacts[]": this.getIds()},
			function (response) {
				if (response.status == "OK") {
					if (callback) {
						callback();
					}
					var list = response.data.list;
					var listName = list.name;
					if (response.data.add) {
						document.app.listsList.addList(list, false, true);
					}
					$("#list_info").append('<div style="display:none" class="info-message">' + 
						n + ' contacts were added to list "' + listName + '"</div>');
					$("#list_info div.info-message").fadeIn("slow", function () {
						$("#list_info div.info-message").fadeOut(3000, function () {jQuery(this).remove()});
					});
				} else {
					alert(response.error);
				}		
			}, "json"
		);
	},

	getRights: function() {
		return document.app.getCurrentFolder().getRights();
	}
});

var UGShowErrorDlg = newClass(WbsDlg, {
	constructor: function(config) {
		config.title = 'Error';
		config.buttons = [
			{label: "Ok", onClick: this.close, scope: this}
		];
		config.height = 'auto';
		config.width = 600;
		this.superclass().constructor.call(this, config);
	},

	buildContent: function(contentElem) {
		contentElem.innerHTML = '<div style="padding: 10px 0">' + this.config.error + '</div>';
	}	
});



Toogles = {
	img_open: '../UG/img/darr.gif',
	img_close: '../UG/img/rarr.gif',
	image_xpath: 'img',
	isClose: function(id) {
		var toogleValue = getCookie('UG_toogle_value') || '';
		return new RegExp('.*'+id+'.*', "g").test(toogleValue);
	},
	imageOpen: function(idButton) {
		$(idButton).find(Toogles.image_xpath).attr('src', Toogles.img_open);
	},
	imageClose: function(idButton) {
		$(idButton).find(Toogles.image_xpath).attr('src', Toogles.img_close);
	},
	addToogleValue: function(idButton, idBlock) {
		var reg =new RegExp('.*'+idBlock+'.*', "g")
		var toogleValue = getCookie('UG_toogle_value') || '';
		if ( !reg.test(toogleValue) )
			toogleValue += ','+idBlock;
		setCookie('UG_toogle_value', toogleValue);
		Toogles.imageClose(idButton);
	},
	delToogleValue: function(idButton, idBlock) {
		var reg =new RegExp('(.*),'+idBlock+'(.*)', "g")
		var toogleValue = getCookie('UG_toogle_value') || '';
		toogleValue = toogleValue.replace(reg, "$1$2");
		setCookie('UG_toogle_value', toogleValue);
		Toogles.imageOpen(idButton);
	},
	openBlock: function (idButton, idBlock) {
		if ( $(idBlock).is(":hidden") ) {
			$(idBlock).show();
			Toogles.delToogleValue(idButton, idBlock);
		}		
	},
	init_toogle: function (idButton, idBlock) {
		$(idButton).click(function(){
			if ( $(idBlock).is(":hidden") ) {
				$(idBlock).show();
				Toogles.delToogleValue(idButton, idBlock);
			}
			else {
				$(idBlock).hide();
				Toogles.addToogleValue(idButton, idBlock);
			}
		});
		if ( this.isClose(idBlock) ) {
			$(idBlock).hide();
			Toogles.imageClose(idButton);
		}
		else {
			Toogles.imageOpen(idButton);
		}
	}
}

function backToAnalytics()
{
	if (document.app.analyticsUrl) {
		document.app.openSubframe(document.app.analyticsUrl);		
	} else {
		document.app.openSubframe('?mod=analytics');
	}	
}

var UGApplication = newClass(WbsApplication, {
	constructor: function(config) {

	this.config = config;
	this.right = config.right;
		this.page = this.config.page | 0;
		this.mode = "folders";
		this.search_type = "";
				
		this.currentFolder = new UGFolder();
		this.currentFolder.addListener("changed", function(folder) {this.folderChanged();}, this);
		this.currentFolder.addListener("modified", function(folder) {this.folderModified();}, this);
		this.currentFolder.addListener("deleted", function(folder) {this.folderDeleted();}, this);
	
		this.listsList = new UGListList({elemId: "lists-list", nodes: document.listNodes}, this);
		this.newListBtn = this.createNewListBtn();

		if (this.right.admin) {
			this.widgetsList = new UGWidgetList({elemId: "widgets-list", nodes: document.widgetNodes}, this);
			this.newWidgetBtn = this.createNewWidgetBtn();
		}
		this.foldersTree = new UGFolderList({elemId: "folders-list", nodes: document.folderNodes}, this);
		this.newFolderBtn = this.createNewFolderBtn();
		this.newFolderBtn.setDisabled(!this.foldersTree.rightsCreateFolder);		
		
		var self = this;
		$("#folders a.select-folder").click(function () {
			self.selectFolder($(this).attr('id').replace(/-CONTACTS/, ''));
			return false;
		});		
		
		this.viewSettings = {};

		// Create navigation bar
		this.navBar = new WbsNavBar({id: "UG", saveSize: true,  contentElemId: "nav-bar", expanderElemId: "nav-bar-expander"});	
		this.navBar.addListener("blockActivated", this.navBarBlockActivated, this);
			
		this.store = this.createStore();


		// Page container (for center scrollable part)
		this.container = new WbsFlexContainer ({
			elem: document.getElementById("main-container"), 
			headerElem: document.getElementById("main-header"), 
			contentElem: document.getElementById("main-content")
		});

		// Create control panel
		this.controlPanel = new UGControlPanel(this, {});
		this.controlPanel.render();

		// Create table
		this.table = new UGTable({
			//id: "ug-table", 
			elem: document.getElementById("main-content"), 
			store: this.store, 
			pager: true, 
			selection: true, 
			sortingToCookie: true,
			sortItems: document.sortItems,
			defaultSorting: {column: "C_NAME", direction: "asc"}
		});
		this.table.render();
		this.controlPanel.setTableToControl(this.table);
		
		this.superclass().constructor.call(this);
		this.init();
		$('.records-page-count').click(function(e){
		     var menu = new ItemsOnPageMenu();
		     menu.show(e);
		     return false;
		});
		var _this = this;
		$("#viewmode-print").click(function () {
			url = '?mod=print';

			url += '&' + $.param(_this.store.params);
			
			url += '&offset=' + _this.store.offset;
			url += '&limit=' + _this.table.pager.itemsOnPage;
			//url += '&params[mode]=' + this.mode;
			var w = window.open(url, 'print', 'width=700,height=400,top=0,left=0,location=no,menubar=yes,status=no,scrollbars=yes,resizable=yes');
			w.focus();
		});			
	},
	
	getItemById: function (id, tree, nodeMap) {
		if (tree[nodeMap.id] == id) {
			return tree;
		}
		if (!tree[nodeMap.children]) {
			return false;
		}
		for (var i = 0; i < tree[nodeMap.children].length; i++) {
			var child = tree[nodeMap.children][i];
			var result = this.getItemById(id, child, nodeMap);
			if (result) {
				return result;
			}
		}
		return false;
	},		
		
	init: function() {
		this.selectFolder(null);
		this.resize();
	},
	
	searchByName: function (string) {
		  if (string.length == 0) {
			  return false;
		  }
		  document.app.setSearchType('simple');
		  document.app.doSearch(string, 1);
		  $("#list_info").empty();
		  document.createList = function () {
			document.app.doSearch(string, -1);
		  };		  
	},
		
	setSearchType: function(type, params, load) {
		$("#folders a.select-folder").removeClass('selected');
		if (this.foldersTree) this.foldersTree.unSelect();
		if (this.listsList) this.listsList.unSelect();
		if (this.widgetsList) this.widgetsList.unSelect();			
		
		this.mode = 'search';
		this.table.config.selection = true;
		if (this.search_type != type || load === true || load === 2) {
			this.search_type = type;
			if (this.search_type != 'simple' || load == 2) {
				loadPage('?mod=contacts&act=search&type=' + type + (params == undefined || params == null || !params? '' : '&' + params));
			}
		}
	},
	
	showMessage: function (message, fade) {
		$('#main-container').hide();
		var elem = $('<div class="subframe" style="width:100%; height: 100%"></div>');
		elem.append('<div class="info-block">' + message + '</div>');
	  	$("#screen-content-block").prepend(elem);
	  	$('#main-container').show();
	},
	
	showInfoMessage: function (message, fade) {
		if (fade == undefined || !fade) {
			$("#list_info div.info-message").remove();
			message = '<div class="info-message-close"><a href="javascript:void(0)" onclick="$(\'#list_info div.info-message\').remove(); document.app.resize()">Close</a></div>' + message;
			$("#list_info").append('<div class="info-message with-close">' + message + '</div>');			
			
		} else {
			$("#list_info").append('<div style="display:none" class="info-message">' + message + '</div>');
			$("#list_info div.info-message").fadeIn("slow", function () {
				$("#list_info div.info-message").fadeOut(3000, function () {$(this).remove();});
			});	
		}
	},

	openSubframe: function(url, frame, saveKey) {
	  	this.closeSubframe();
		$('#main-container').hide();
  		var elem = createElem(frame ? "iframe" : "div", "subframe");
	  	elem.style.width = "100%";
	  	elem.style.height = "100%";
	  	if (frame) {
	  	  	elem.frameBorder = "no";
	  	  	elem.setAttribute("SCROLLING", "NO");  		
	  	} else if (this.subFrame) {
	  		$(this.subFrame).remove();
	  	}
	  	$("#screen-content-block").prepend(elem);
	  	
	  	this.startLoading();
	  	var _this = this;
	  	if (frame) {
	  		$(elem).load(function () {
	  			_this.finishLoading();
	  		});
	  	  	if (Ext.isOpera && elem.location) {
	  	  		elem.location.href = url;
	  	  	} else {
	  	  		elem.src = url;
	  	  	}  		
	  	} else {
			$(elem).load(url, false, function (response) {
					try {
						var r = eval("(" + response + ")");
						if (r.errorCode == 'SESSION_TIMEOUT') {
							if (window && window.parent) {
								var d = window.parent.document;
							} else {
								var d = document;
							}
							d.location.href = r.redirectUrl;
						}
					} catch (e) {
						
					}
					_this.finishLoading();
					$('#main-container').show();
			});
	  	}
	  	this.subFrame = elem;
	  },
	
	
	setViewSettings: function(settings) {
		$.extend(this.viewSettings, settings);
		this.table.pager.setItemsOnPage(this.viewSettings.itemsOnPage);
		$(".records-page-count").html(this.viewSettings.itemsOnPage);
	},
	
	getViewSettings: function() {
		return this.viewSettings;
	},
	
	resize: function() {
		this.container.resize();
		this.table.container.resize();
	},		

	setItemsCount: function (n) {
		this.viewSettings.itemsOnPage = n;
		this.table.pager.setItemsOnPage(this.viewSettings.itemsOnPage);
		$(".records-page-count").html(n);
		$.post("?mod=users&act=items&ajax=1", {n: n}, function (response) {}, "json");
		this.table.reloadView();
	},
	
	createStore: function() {
		// Create data reader
		var reader = new WbsReader ({
			url: "?mod=users&act=lists&ajax=1",
			baseParams: {},
			recordsProperty: 'users',
			totalProperty: 'total'
		});
	
		reader.addListener("success", function(responseData) {
			if (responseData.list && responseData.list.id) {
				this.mode = 'lists';
				this.navBarBlockActivated({id:'lists'}, true);
			}
				
			if (this.mode == 'search' && this.search_type != 'simple') {
				$("#group-title-container .folder-info-block").hide();
				$("#group-title-container .title-wrapper").hide();
				if ($("#search_content").parent().attr('id') != 'group-title-container') {
					$("#group-title-container #search_content").remove();
					$("#group-title-container").append($("#screen-content-block div.subframe #search_content"));
				}
			} else {
				$("#group-title-container .title-wrapper").show();
				$("#group-title-container .folder-info-block").show();
				$("#search_content").remove();
			}
			
			
			this.closeSubframe();
			if (responseData.viewMode)
				responseData.folder.viewMode = responseData.viewMode;
			
			if (responseData.sorting) 
				this.table.currentSorting = responseData.sorting; 

			if (responseData.itemsOnPage)
				responseData.folder.itemsOnPage = responseData.itemsOnPage;
			
			if (responseData.fields) {
				var showFields = responseData.fields;
				document.fields = new Array();
				for (var i = 0; i < showFields.length; i++) {
					document.fields[i] = {
							name: showFields[i][0],
							label: showFields[i][1],
							sorting: showFields[i][2] ? true : false,				
							type: showFields[i][3] ? showFields[i][3] : "string"
					};
					if (i == 0) {
						//document.fields[i].sortingMenu = true;
					}
				}		
			}
			this.table.columns = this.table.actualColumns();			
				
			if (responseData.list && responseData.list.id && responseData.add) {
				$("#nav-bar").parent().show();					
				//this.navBar.setActiveBlock('lists', true);
				this.listsList.addList(responseData.list,  responseData.add == 2);
			}
			this.currentFolder.load(responseData.folder);
			this.resize();			
		}, 
		this);
		
		// Create data store
		var store = new WbsDataStore({reader: reader, idProperty: "C_ID", recordClass: UGUser});
		return store;
	},
		
	selectFolder: function(folderId, fromTree) {
		if (this.mode != 'folders' && this.mode != 'analytics') {
			if (this.listsList) this.listsList.unSelect();
			if (this.widgetsList) this.widgetsList.unSelect();			
			this.mode = 'folders';
			this.navBarBlockActivated({id:'folders'}, true);
		}
		
		this.currentFolder.reset();
		if (folderId != null) {		
			if (folderId == 'ALL' || folderId == 'ANALYTICS') {
				$("#folders a.select-folder").removeClass('selected');
				$("a#" + folderId + '-CONTACTS').addClass('selected');
				this.foldersTree.unSelect();
			} 
			if (folderId == 'ANALYTICS') {
				document.app.openSubframe('?mod=analytics');
			} else {
				this.mode = 'folders';
				$("#main-header div.backlink").remove();
				$("#search_content").remove();
				this.table.resetPage(this.page);
				this.table.resetHighlightWord();	
				this.store.setParams({mode: "folders", folderId: folderId});
				this.store.setSorting("", "");
				this.store.load();
			}
		} 
	},
	
	selectList: function(listId) {
		if (this.mode != 'lists') {
			$("#folders a.select-folder").removeClass('selected');
			if (this.widgetsList) this.widgetsList.unSelect();
			if (this.foldersTree) this.foldersTree.unSelect();
			this.navBarBlockActivated({id:'lists'}, true);
		}
		$(this.newListBtn.getElem()).parent().removeClass('selected');		
		if (listId != null) {			
			this.table.resetPage(this.page);
			this.table.resetHighlightWord();					
			this.store.setParams({mode: "lists", listId: listId});
			this.store.setSorting("", "");
			this.store.load ();			
		} else {
			this.currentFolder.reset();
		}
	},	
	
	folderChanged: function() {
		//this.closeSubframe();
		this.controlPanel.folderChanged();
		this.table.folderChanged();
	},
	
	folderModified: function() {
		if (this.mode == "lists") {
			this.listsList.listModified();
		} else {
			this.foldersTree.folderModified();
		}
	},
	
	folderDeleted: function () {
		if (this.mode == "lists") {
			this.listsList.listDeleted();
			$("#lists-list a.create-list").click();
		} else {
			this.foldersTree.folderDeleted();
		}
	},
	
	getCurrentFolder: function() {
		return this.currentFolder;
	},
		
	
	navBarBlockActivated: function (block, hide) {
		setCookie("last_block", block.id);
		this.mode = block.id;
		$("#main-header div.backlink").remove();
		$("#search_header").hide();
		document.app.mode = block.id;
		this.table.pager.config.nameElements = 'Contacts';

		if (block.id != 'lists') {
			$('#main-container').show();
			this.table.config.selection = true;
			if ($("#list_info div.onload").length == 0) {
				$("#list_info").empty();
			}
			
			$("#group-title-container div.wbs-menu-btn.list").removeClass("list").insertBefore($("#view-settings-block"));
		} 
		
		if (block.id == "folders") {
			$('#main-container').show();
			this.controlPanel.usersActionsBtn.setDisplayed(true);
			if (!hide) {
				if (this.foldersTree.getSelectedNode() && this.foldersTree.getSelectedNode().Id != 'ALL') {
					this.foldersTree.selectNode(this.foldersTree.getSelectedNode().Id);
				} else {
					if (!this.config.currentFolderId) {
						this.config.currentFolderId = 'ALL';
					}
					this.foldersTree.getNode('ROOT').expand();
					if (this.config.currentFolderId == 'ALL' || this.config.currentFolderId == 'ANALYTICS') {
						this.selectFolder(this.config.currentFolderId);
					} else {
						this.foldersTree.selectNode(this.config.currentFolderId);
					}				
				}
			}
		} else if (block.id == "lists") {
			this.controlPanel.usersActionsBtn.setDisplayed(true);
			if (hide == undefined || hide !== true) {
				var l = this.listsList.getSelectedNode();
				if (l && l.Id != 'ROOT') {
					this.listsList.selectNode(l.Id);
				} else { 
					if (this.config.currentListId && this.listsList.getNode(this.config.currentListId) != undefined) {
						this.listsList.selectNode(this.config.currentListId);
					} else {
						$(this.newListBtn.btnElem).click();
					}
				}
			}
		} else if (block.id == "search") { 
			$('#main-container').show();
			this.controlPanel.usersActionsBtn.setDisplayed(true);
			if (this.search_type) {
				this.setSearchType(this.search_type, null, true);
			} else {
				this.setSearchType('', null, true);
			}
		} else if (block.id == "widgets") {
			$('#main-container').show();
			if (this.widgetsList.getSelectedNode()) {
				this.widgetsList.selectNode(this.widgetsList.getSelectedNode().Id);
			} else {
				if (this.config.currentFormId && this.widgetsList.getNode(this.config.currentFormId) != undefined) {
					this.widgetsList.selectNode(this.config.currentFormId);
				} else {
					$(this.newWidgetBtn.getElem()).click();
				}
			}
		}
		
	},

	refreshData: function() {
	},
	
	doAnalytics: function (f, v, title, save) {
		this.currentFolder.Id = 0;
		this.mode = 'analytics';
		document.createList = function () {
			document.app.doAnalytics(string, title, 1);
		};
		if ($("#main-header .backlink").length == 0) {
			$("#main-header").prepend('<div class="backlink lbg"><a href="#" onclick="return backToAnalytics()"><span>&larr;</span>Back</a></div>');
		}		
		this.closeSubframe();
		this.table.resetPage(this.page);
		this.store.setParams({mode: "analytics", query: f, value: v, title: title, save: (save == undefined || !save ? 0 : 1)});
		this.store.load();
		this.currentFolder.reset();				
	},
	
	doSearch: function(searchString, noSave, list) {
		if (list != undefined && list) {
			noSave = 1;
			this.table.resetHighlightWord();
		} else {
			this.table.setHighlightWord(searchString);
			list = 0;
		}
		var list_title = $("#list_name").val();
		if (list && list_title) {
			this.currentFolder.Name = list_title;
			this.listsList.listModified();
		}		
		this.table.resetPage(this.page);		
		this.store.setParams({mode: "search", searchString: searchString, noSave: noSave, list: list, list_title: list_title});
		this.store.load();
		
		this.currentFolder.reset();
	},
	
	doSmartSearch: function (query, noSave) {
		var s = new Array();
		for (var i in query) {
			if (i.substring(i.length - 5) == '[val]') {
				s.push(query[i]);
			}
		}
		query.mode = "smartsearch";
		query.noSave = noSave;
		this.table.resetHighlightWord();
		var list_title = $("#list_name").val();
		if (list_title) {
			query.list_title = list_title;
		}
		if (query.list && list_title) {
			this.currentFolder.Name = list_title;
			this.listsList.listModified();
		}		
		this.table.resetPage(this.page);
		this.store.setParams(query);
		this.store.load();
		this.currentFolder.reset();					
	},

	doAdvancedSearch: function (query, noSave, list) {
		query.mode = "advancedsearch";
		query.noSave = noSave;
		query.list = list;
		var list_title = $("#list_name").val();
		this.table.resetHighlightWord();
		if (list_title) {
			query.list_title = list_title;
		}		
		if (list && list_title) {
			this.currentFolder.Name = list_title;
			this.listsList.listModified();
		}				
		this.table.resetPage(this.page);
		this.store.setParams(query);
		this.store.load();
		this.currentFolder.reset();					
	},

	createNewListBtn: function () {
		var btn = new WbsLinkButton({
			el: 'new-list-btn',
			label: 'Add'
		});
		$(btn.getElem()).click(function () {
			Toogles.openBlock('#lists-list-toogle div.h', '#lists-list');
			loadPage('?mod=lists&act=create');
			document.app.listsList.unSelect();
			$(btn.getElem()).parent().addClass('selected');
		});
		return btn;
	},
	
	createNewWidgetBtn: function () {
		var btn = new WbsLinkButton({
			el: 'new-widget-btn',
			label: 'Add'
		});
		$(btn.getElem()).click(function () {
			Toogles.openBlock('#widgets-list-toogle div.h', '#widgets-list');
			loadPage('?mod=widgets&act=create');
			document.app.widgetsList.unSelect();
			$(btn.getElem()).parent().addClass('selected');			
		});
		return btn;
	},
	
	createNewFolderBtn: function() {	
		var btn = new WbsLinkButton({
			el: "new-folder-btn", 
			label: "Add", 
			onClick: this.foldersTree.showCreateNewDlg,
			scope: this.foldersTree
		});		
		return btn;
	}	
});


var UGListMenu = newClass (WbsPopmenu, {
	constructor: function(config) {
		this.list = config.list;
		var share_title = "Share this list with other users (read only)";
		if (this.list.Data.SHARED) {
			var cls = 'item-list-shared';
		} else {
			var cls = '';
		}
		config.items = [
		    {label: this.list.Data.SEARCH ? "Edit search criteria" : "Edit", disabled: false, onClick: this.list.editList},		                
			{label: "Rename list", disabled: this.list.Rights < 7, onClick: this.list.showRename.bind(this.list)},	
			{label: "Delete this list", disabled: this.list.Rights < 7, onClick: this.list.tryDelete.bind(this.list)},
			{label: share_title, iconCls: cls, disabled: this.list.Rights < 7, onClick: this.list.share.bind(this.list)},
		];	
		
		this.superclass().constructor.call(this, config);
	}
});


var UGListList = newClass(WbsTree, {
	constructor: function(config, app) {
		this.app = app;
		var config = {elemId: config.elemId, nodes: config.nodes, rootVisible: false};
		this.superclass().constructor.call(this, config);
		
		this.nodeMap = {
			id : 0,
			text: 1,
			children: 2,
			search: 3,
			shared: 4
		};
		
		this.init();
	},
			
	onAfterRender: function() {
	},
	
	getListItemById: function(id, tree) {
		if (tree == undefined) {
			tree = document.listNodes;
		}
		return document.app.getItemById(id, tree, this.nodeMap);		
	},
	
	listModified: function() {
		var list = this.app.currentFolder;
		var node = this.getNode(list.Id);
		if (node) {
			node.setText(list.Name.htmlSpecialChars());
			var item = this.getListItemById(list.Id);
			item[this.nodeMap.text] = list.Name;					 
		}
	},	
	
	onNodeClick: function(node, e) {
		$("#folders .content").scrollTop();
		if (this.app.getCurrentFolder().Id != null) {
			this.app.getCurrentFolder().reset();
		}
		$(".subframe").hide();	
		this.app.selectList(node.id, true);
	},
	
	addNode: function(nodeData) {
		var addConfig = null;
		if (nodeData[this.nodeMap.id] == -1) {
			addConfig = {iconCls: "icon-list-sc"};
		} else if (nodeData[this.nodeMap.search] === 2) {
			addConfig = {iconCls: "icon-list-wa"};
		} else if (nodeData[this.nodeMap.search]) {
			if (nodeData[this.nodeMap.shared]) {
				addConfig = {iconCls: "icon-list-search-shared"};
			} else {
				addConfig = {iconCls: "icon-list-search"};
			}
		} else {
			if (nodeData[this.nodeMap.shared]) {
				addConfig = {iconCls: "icon-list-shared"};
			} else {
				addConfig = {iconCls: "icon-list"};
			}
		}
		var node = this.superclass().addNode.call(this, nodeData, addConfig);
		return node;
	},
	
	
	addList: function (data, rename, hide) {
		Toogles.openBlock('#lists-list-toogle div.h', '#lists-list');
		var nodeData = {};
		nodeData[this.nodeMap.id] = data.id;
		nodeData[this.nodeMap.text] = data.name;
		nodeData[this.nodeMap.children] = null;
		nodeData[this.nodeMap.search] = data.search;
		nodeData[this.nodeMap.shared] = data.shared;

		var newNode = this.addNode(nodeData);
		this.getNode('ROOT').appendChild(newNode);
		
		var p = this.getListItemById('ROOT');
		p[this.nodeMap.children].push(nodeData);		
		if (hide == true) return;
		this.selectNode(newNode.Id, true);

		var r = false;
		if (r) {
			var currentFolder = this.app.getCurrentFolder();
			var showRename = function() {
				currentFolder.showRename();
				currentFolder.removeListener("changed", showRename);
			};						
			currentFolder.addListener("changed", showRename, currentFolder);
		}
		
		document.app.store.setParams({mode: "lists", listId: newNode.Id});
	},
	
	listDeleted: function() {
		var list = this.app.currentFolder;
		var node = this.getNode(list.Id);
		var cur = node.previousSibling || node.nextSibling;		
		if (node) {
			var f = this.getListItemById(node.parentNode.Id);
			for (var i = 0; i < f[this.nodeMap.children].length; i++) {
				if (f[this.nodeMap.children][i][this.nodeMap.id] == list.Id) {
					f[this.nodeMap.children].splice(i, 1);
					break;
				}
			}
			this.removeNode(node);
		}
		if (cur) {
			this.selectNode(cur.Id);
		} else {
			$(this.app.newListBtn.btnElem).click();
		}
	}	
});

var UGWidgetList = newClass(WbsTree, {
	constructor: function(config, app) {
		this.app = app;
		var config = {elemId: config.elemId, nodes: config.nodes, rootVisible: false};
		this.superclass().constructor.call(this, config);
		
		this.nodeMap = {
			id : 0,
			text: 1,
			children: 2,
			encId: 3
		};
		
		this.init();
	},
			
	onAfterRender: function() {
		var rootNode = this.treePanel.getRootNode();
	},
	
	setTitle: function (title) {
		var widget = this.getSelectedNode();
		widget.Name = title;
		var node = this.getNode(widget.Id);
		if (node)
			 node.setText(title);
	},
	
	widgetModified: function() {
		var widget = this.app.currentFolder;
		var node = this.getNode(widget.Id);
		if (node)
			 node.setText(widget.Name);
	},	
	
	onNodeClick: function(node, e) {
		if (this.app.mode != 'widgets') {
			$("#folders a.select-folder").removeClass('selected');
			if (this.app.listsList) this.app.listsList.unSelect();
			if (this.app.foldersTree) this.app.foldersTree.unSelect();			
			setCookie("last_block", 'widgets');
		}
		this.app.mode = "widgets";
		this.app.openSubframe("?mod=widgets&act=edit&id=" + node.Id, true);
	},
	
	addNode: function(nodeData) {
		var addConfig = {encId: nodeData[this.nodeMap.encId]};
		var node = this.superclass().addNode.call(this, nodeData, addConfig);
		return node;
	},
	
	
	addWidget: function (data) {
		var nodeData = {};
		nodeData[this.nodeMap.id] = data.id;
		nodeData[this.nodeMap.text] = data.name;
		nodeData[this.nodeMap.children] = null;
		nodeData[this.nodeMap.encId] = data.enc_id;

		var newNode = this.addNode(nodeData);
		this.getNode('ROOT').appendChild(newNode);

		this.selectNode(newNode.Id);
	},
	
	widgetDeleted: function() {
		var node = this.getSelectedNode();

		var cur = node.previousSibling || node.nextSibling;		
		if (node) {
			this.removeNode(node);
		}

		if (cur) {
			this.selectNode(cur.Id);
		} else {
			$(this.app.newWidgetBtn.btnElem).click();
		}	
	
	}	
});

var UGFolderList = newClass(WbsTree, {
	constructor: function(config, app) {
		this.app = app;
		var config = {elemId: config.elemId, iconCls: "my-folder", nodes: config.nodes, rootVisible: false};
		this.superclass().constructor.call(this, config);
		
		this.nodeMap = {
			id : 0,
			text: 1,
			right: 2,
			children: 3
		};
		this.rightsCreateFolder = this.checkCreateRights();
		this.init();
	},
	
	checkCreateRights: function (folder) {
		if (folder == undefined) {
			var folder = document.folderNodes;
		}
		if (folder[2] == 7) return true;
		for (var i = 0; i < folder[3].length; i++) {
			if (this.checkCreateRights(folder[3][i])) {
				return true;
			}
		}
		return false;
	},
	
	showCreateNewDlg: function () {
		Toogles.openBlock('#folders-list-toogle div.h', '#folders-list');
		var dlg = new UGNewFolderDlg();
		dlg.show();
	},
	
	getFolderItemById: function(id, tree) {
		if (tree == undefined) {
			tree = document.folderNodes;
		}
		var r = document.app.getItemById(id, tree, this.nodeMap);
		return r;
	},
	
	unSelect: function () {
		this.superclass().unSelect.call(this);
	},
		
	addNode: function(nodeData) {
		var addConfig = null;
		
		if (nodeData[this.nodeMap.right] == 0 && nodeData[this.nodeMap.id] != "ROOT") {
			addConfig = {iconCls: "folder-norights"};
		} else if (nodeData[this.nodeMap.id].substring(0, 7) == 'PRIVATE') {
			addConfig = {iconCls: "folder-private"};			
		} else if (nodeData[this.nodeMap.id] == 'PUBLIC') {
			addConfig = {iconCls: "folder-public"};
		} else if (nodeData[this.nodeMap.right] == 1) {
			addConfig = {iconCls: "folder-readonly"}; 
		}
					
		var node = this.superclass().addNode.call(this, nodeData, addConfig);
		node.Rights = nodeData[this.nodeMap.right];
		return node;		
	},
		
	onAfterRender: function() {
		
	},
	
	onNodeClick: function(node, e) {
		$("#folders a.select-folder").removeClass('selected');
		if (node.id == "ROOT") {
			this.app.selectFolder('ALL');
			return;
		} 
		if (this.app.getCurrentFolder().Id != null) {
			this.app.getCurrentFolder().reset();
		}

		this.app.selectFolder(node.id, true);		
	}, 
	
	folderModified: function() {
		var folder = this.app.currentFolder;
		var node = this.getNode(folder.Id);
		if (node) {
			node.setText(folder.Name.htmlSpecialChars());
			var item = this.getFolderItemById(folder.Id);
			item[this.nodeMap.text] = folder.Name;		
		}
	},
	
	folderDeleted: function() {
		var folder = this.app.currentFolder;
		var node = this.getNode(folder.Id);
		var cur = node.previousSibling || node.parentNode || this.rootNode;		
		if (node) {
			var f = this.getFolderItemById(node.parentNode.Id);
			for (var i = 0; i < f[this.nodeMap.children].length; i++) {
				if (f[this.nodeMap.children][i][this.nodeMap.id] == folder.Id) {
					f[this.nodeMap.children].splice(i, 1);
					break;
				}
			}
			this.removeNode(node);
		}
		if (cur) {
			this.selectNode(cur.Id);
		}	
		this.rightsCreateFolder = this.checkCreateRights();
		this.app.newFolderBtn.setDisabled(!this.rightsCreateFolder);
	},
	
	getNewFolderMenu: function() {	
		var node = this.getSelectedNode();
		if (node) {
			var subfolderDisabled = !WbsRightsMask.canFolder(node.Rights);
		} else {
			var subfolderDisabled = true;
		}

		var items = [
			{label: "Root folder", onClick: this.createRootFolder, scope: this, disabled: !this.app.right.createRootFolder},
			{label: "Subfolder", onClick: this.createSubFolder, scope: this, disabled: subfolderDisabled}
		];				
		return new WbsPopmenu({items: items});
	},
	
	createFolder: function (dlg, params) {
		var self = this;
		$.post('?mod=folders&act=add&ajax=1', params, function (response) {
			if (response.status == 'ERR') {
				alert(result.error);
				return;
			} else {
				var nodeData = {};
				nodeData[self.nodeMap.id] = response.data.id;
				nodeData[self.nodeMap.text] = response.data.name;
				nodeData[self.nodeMap.right] = response.data.id != 'PUBLIC' ? 7 : 3;
				nodeData[self.nodeMap.children] = new Array();
				var newNode = self.addNode(nodeData);
				var parentNode = self.getNode(response.data.parentId);
				if (response.data.id == 'PUBLIC') {
					var after = self.getNode(response.data.after);
					if (after) {
						after = after.nextSibling;
					} else {
						after = parentNode.firstChild;
					}
					parentNode.insertBefore(newNode, after);
				} else {
					parentNode.appendChild(newNode);
				}
				var p = self.getFolderItemById(parentNode.Id);
				p[self.nodeMap.children].push(nodeData);
				var currentFolder = self.app.getCurrentFolder();
				if (response.data.access == 1) {
					self.selectNode(newNode.Id, true);
					document.app.openSubframe('?mod=folders&act=rights&folder_id=' + newNode.Id, 1);
				} else {
					self.selectNode(newNode.Id);
				}
				dlg.close();		
			}
		}, "json");
	}
	
});

var UGAddToListDlg = newClass(WbsDlg, {
	constructor: function(config) {
		var actionBtnLabel = "Add";
		config.buttons = [
			{label: actionBtnLabel, onClick: this.doAction, scope: this, disabled: true},
			{label: "Cancel", onClick: this.hide, scope: this}
		];

		this.superclass().constructor.call(this, config);
		
		$("#dlg-move-content .add-to-list").show();
		this.folderSelector = document.getElementById("dlg-folders-select");
		this.folderSelector.onchange = this.enableButton;
		document.getElementById("add-to-new-list").onfocus = function () {
			this.enableButton();
			$('#dlg-folders-select option:selected').removeAttr('selected');
		}.bind(this);
		
		
		this.action = config.action;
		this.actionObject = config.actionObject;
		
		this.descElem = document.getElementById("dlg-move-desc");
		this.descElem.innerHTML = (config.description ? config.description : "") + ":";

		clearNode(this.folderSelector);
		this.buildFoldersSelect();
	},

	enableButton: function() {
		if($('#dlg-folders-select').val() != 0) {
			$('.dsabled-btn').removeAttr("disabled");
		} else {
			$('.dsabled-btn').attr("disabled", true);
		}
	},

	doAction: function() {
		var listId = this.folderSelector.value;
		if (!listId) {
			var listName = $("#add-to-new-list").val(); 
		} else {
			var listName = '';
		}
		this.actionObject.doAddToList(listId, listName, this.afterAction.bind(this));
	},

	buildFoldersSelect: function() {
		for (var i = 0; i < document.listNodes[2].length; i++) {
			this.addList(document.listNodes[2][i]);
		}
	},

	addList: function(ListData) {
		var option = createElem("option");
		if(!ListData[3]) {
			if (document.app.mode == 'lists' && document.app.currentFolder.Id == ListData[0]) {
				option.disabled = "disabled";
			}
			option.value = ListData[0];
			option.innerHTML = ListData[1].truncate(50);
			this.folderSelector.appendChild(option);
		}
	},
	
	afterAction: function() {
		this.hide();
		document.app.table.renderData();
	}

});

var UGExportContactsDlg = newClass(WbsDlg, {

	constructor: function(config) {
		var actionBtnLabel = "Export";
		config.buttons = [
			{label: actionBtnLabel, onClick: this.doAction, scope: this, disabled: false, id:"doExportBtn"},
			{label: "Cancel", onClick: this.hide, scope: this}
		];

		this.superclass().constructor.call(this, config);
		this.actionObject = config.actionObject;

		this.buildExportContent();
	},

	buildExportContent: function(elem) {
		var users = this.config.actionObject.getIds();
		//console.log(document.app.store);
		$("#dlg-export-content").load("?mod=contacts&act=csv&export=1&mode=" + document.app.mode, document.app.store.params, function() {
			$("#contacts").val(users);
			$("#current").val(document.app.getCurrentFolder().Id);
			$("#selected_count").html(users.length + "");
			$("#total_count").html(document.app.table.getStore().getTotal() + "");
			if(users.length) {
				$("#input_selected").attr("checked", true);
			} else {
				$("#input_selected").attr("disabled", true);
				$("#input_selected_wrapper").addClass("disable");
				$("#input_total").attr("checked", true);
			}
		});
	},

	doAction: function() {
		$('#ex_in').children().attr('selected', 'selected');
		document.csvExport.submit();
		this.hide();
	}

});

var UGSendsmsDlg = newClass(WbsDlg, {

	constructor: function(config) {
		var actionBtnLabel = "Send";
		config.buttons = [
			{label: actionBtnLabel, onClick: this.doAction, scope: this, disabled: false, id:"doSendsmsBtn"},
			{label: "Cancel", onClick: this.hide, scope: this}
		];

		this.superclass().constructor.call(this, config);
		this.actionObject = config.actionObject;

		this.buildSendsmsContent();
		
		var qwe = 'asd';
	},

	buildSendsmsContent: function(elem) {
		var users = this.config.actionObject.getIds();

		$("#dlg-sendsms-content").load("?mod=contacts&act=sendsms&users=" + users + "&mode=" + document.app.mode);
	},

	doAction: function() {
		this.actionObject.doSendsms(this.afterAction.bind(this));
	},

	afterAction: function() {
		this.hide();
	}

});

var UGCopyMoveDlg = newClass(WbsDlg, {
	constructor: function(config) {
		var actionBtnLabel = "Move";
		config.buttons = [
			{label: actionBtnLabel, onClick: this.doAction, scope: this, disabled: true},
			{label: "Cancel", onClick: this.hide, scope: this}
		];

		this.superclass().constructor.call(this, config);
		
		this.folderSelector = document.getElementById("dlg-folders-select");
		this.folderSelector.onchange = this.enableButton;

		this.descElem = document.getElementById("dlg-move-desc");
		$("#dlg-move-content .add-to-list").hide();
		
		this.action = config.action;
		this.actionObject = config.actionObject;
		
		this.descElem = document.getElementById("dlg-move-desc");
		this.descElem.innerHTML = (config.description ? config.description : "") + ":";

		clearNode(this.folderSelector);
		this.buildFoldersSelect();
	},

	enableButton: function() {
		if($('#dlg-folders-select').val() != 0) {
			$('.dsabled-btn').removeAttr("disabled");
		} else {
			$('.dsabled-btn').attr("disabled", true);
		}
	},

	doAction: function() {
		var folderId = this.folderSelector.value;
		this.actionObject.doCopyMove(folderId, this.action, this.afterAction.bind(this));
	},

	buildFoldersSelect: function() {
		if (this.config.action == 'move') {
			this.addFolder(document.folderNodes, 0);
		} else {
			for (var i = 0; i < document.folderNodes[3].length; i++) {
				this.addFolder(document.folderNodes[3][i], 0);
			}
		}
	},

	addFolder: function(folderData, level) {

		if ((folderData[0] == 'PUBLIC' || folderData[0].substring(0, 7) == 'PRIVATE' ) && !this.config.systemFolders) {
			return;
		}

		var selectedParent = 0;
		if(this.config.selectedFolderId) {
			selectedParent = this.config.selectedFolderId.replace(/(.*)\.\d+\.$/, "$1.");
		}
		selectedParent = (selectedParent && selectedParent != this.config.selectedFolderId) ? selectedParent : "ROOT";
		var re = new RegExp("^" + this.config.selectedFolderId);
		var disabled = false;
		if (this.action == "move") {
			if (folderData[0] == 'ROOT') {
				disabled = folderData[2] < 7 || folderData[0] == selectedParent;
			} else if (folderData[0] == selectedParent || re.test(folderData[0])) {
				disabled = true;
			}
		} else if (folderData[0] == "ROOT") {
			disabled = true;
		}
		if (folderData[0] == "ROOT") {
			folderData[1] = "&lt;root&gt;";
		}
		disabled = disabled || folderData[0] == this.config.selectedFolderId || folderData[2] < 3;
		
		var paddingLeft = "&nbsp;";
		for (var k = 0; k < level; k++) {
			paddingLeft += "&nbsp;";
		}
		var option = createElem("option");

		option.value = folderData[0];
		option.innerHTML = (paddingLeft + folderData[1]).truncate(50);
		if (disabled) {
			option.disabled = true;
		}
		this.folderSelector.appendChild(option);

		if (folderData[3]) {
			for (var i = 0; i < folderData[3].length; i++) {
				this.addFolder(folderData[3][i], level+1);
			}
		}
	},

	afterAction: function(ids) {
		this.hide();
		if(this.action != "move") {
			document.app.table.reloadView();
		} else if(ids) {
			document.app.selectFolder(ids[2], true);
			window.location = "index.php";
		}
	}
});


var UGNewFolderDlg = newClass(WbsDlg, {
	constructor: function() {
		var config = {};
		var folder = document.app.foldersTree.getSelectedNode();
		config.title = 'Create a new folder';
		config.buttons = [
			{label: "Create folder", onClick: this.doAction, scope: this},
			{label: "Cancel", onClick: this.close, scope: this}
		];
		config.height = 'auto';
		config.width = 600;
		this.superclass().constructor.call(this, config);
	},

	doAction: function() {
		var params = $("#form-new-folder").serialize();
		document.app.foldersTree.createFolder(this, params);
	},
	
	buildSelectFolder: function (folder_id, folder, prefix) {
		if (folder == undefined) {
			var folder  = document.folderNodes; 
		}
		if (prefix == undefined) {
			prefix = '';
		}
		var result = '';
		if (!folder[3]) {
			return '';
		}
		for (var i = 0; i < folder[3].length; i++) {
			this.subfolder_right = this.subfolder_right | (folder[3][i][2] == 7);  
			result += '<option value="' + folder[3][i][0] + '"' + (folder[3][i][0] == folder_id || (!folder_id && folder[3][i][2] > 3) ? 'selected="selected" ' : '') +  (folder[3][i][2] < 7 ? 'disabled="disabled"' : '') + '>' + prefix + folder[3][i][1].substr(0, 45) + '</option>';
			if (folder[3][i][3]) {
				if (!folder_id && folder[3][i][2] > 3) folder_id = "no";
				result += this.buildSelectFolder(folder_id, folder[3][i], prefix + "&nbsp;&nbsp;");
			}
		}
		return result;
	},

	buildContent: function(contentElem) {
		var folder = document.app.foldersTree.getSelectedNode();
		var folder_title = folder ? folder.Name : false;
		var root_right = document.app.foldersTree.getNode('ROOT').Rights > 3;
		this.subfolder_right = false;
		var nested_right = folder ? folder.Rights > 3 : 0;
		var select_folder = '<select class="fix-width" onchange="$(\'#new-folder-parent-nested\').click()" name="subfolder">' + this.buildSelectFolder(nested_right && folder ? folder.Id : false) + '</select>'; 
		var html = '<div class="folder-title">Folder name: <input name="name" id="new-folder-name" type="text" value="New folder" /></div>';
		html += '<div style="padding-bottom: 10px">Choose a location in your folder tree:</div>' +
			'<label><input id="new-folder-parent-root" type="radio" value="ROOT" name="parentId" ' + (!root_right ? 'disabled="disabled"' : '') + (!nested_right && root_right ? ' checked="checked"' : '') + ' /> Root</label><br />' + 
			'<label><input id="new-folder-parent-nested" type="radio" value="FOLDER" name="parentId" ' + (!this.subfolder_right ? 'disabled="disabled"' : '') + (nested_right || !root_right ? ' checked="checked"' : '') + ' /> Subfolder of:</label>' + select_folder + '<br />';	
		if (document.app.right.users) {
			html += '<div class="folder-access-rights">Access rights:</div>' + 
			'<label><input type="radio" onchange=\'$("#new-folder-name,#new-folder-parent-nested").removeAttr("disabled")\' name="access" value="0" checked="checked" /> Only mine <span>(will be able to customize access for other users later)</span></label><br />' + 
			'<label><input type="radio" onchange=\'$("#new-folder-name,#new-folder-parent-nested").removeAttr("disabled")\' name="access" value="1" /> Shared <span>(customize access for other users now)</span></label><br />';
		}
		if (document.app.right.admin && !document.app.foldersTree.getNode('PUBLIC')) {
			html += '<label><input onchange=\'$("#new-folder-parent-nested").attr("disabled","disabled");$("#new-folder-name").attr("disabled", "disabled").val("Public"); $("#new-folder-parent-root").attr("checked", "checked")\' type="radio" name="access" value="2" /> Public <span>(available for all users)</span></label><br />'; 
		}
	contentElem.innerHTML = '<div class="folder-new-dlg"><form id="form-new-folder">' + html + '</form></div>';
	},
	
	onAfterShow: function () {
		$("#new-folder-name").select();
	}
});


var UGAddContactMenu = newClass (WbsPopmenu, {
	constructor: function(record, type) {
		var items = [];
	
		var types = document.contactTypes;
		for ( var type in types ) {
			if ( typeof types[type] == 'string' )
				items.push( {label: types[type], onClick: this.click.bind(type) });
		}
		
		items = items.concat([
	       "-",
		   {label: "Import contacts", onClick: function () {
	    	  var url = 'index.php?mod=contacts&act=csv&import=1';
	    	  document.app.openSubframe(url, 1);
	       }}
		]);
		this.superclass().constructor.call(this, {items: items, withImages: true});
	},
	click: function() {
		var url = "?mod=contacts&act=add&type="+String(this) + "&mode="+document.app.mode+"&id="+document.app.getCurrentFolder().Id;
		document.app.openSubframe(url, 1);
	},
		
	onAfterShow: function() {
	},
		
	onClose: function() {
	}			
});


var UGTable = newClass(WbsTable, {
	constructor: function(config) {
		if (!config)
			config = {};
		config.nameElements  = "";

		config.columns = this.actualColumns();
		
		this.sortItems = config.sortItems;
				
		this.superclass().constructor.call(this, config);
	}, 
	
	folderChanged: function () {
		var app = document.app;
		
		if (app != undefined) {
			var folder = app.getCurrentFolder();
			if (app.mode == "lists" || app.mode == "search" || (app.mode == 'folders' && folder.Id == 'ALL')) {
				this.rightsElem.innerHTML = "";
			} else {
				this.rightsElem.innerHTML = "<label>Your access rights:</label> <b>" + WbsRightsMask.getRightsStr(folder.Rights) + "</b>";
			}
			if (app.mode == "lists") {
				if (folder.Data.SHARED && folder.Data.RIGHTS != 7) {
					var html = '<div class="info-message"' + (!folder.Data.SEARCH ? ' style="margin-right:300px"' : '') + '>This list is created and shared by administrator. Contacts from this list can be unavailable for editing, search, or in "All contacts" section if they are located in unavailable folders.</div>';
					if (folder.Data.SEARCH) {
						html += '<div class="small-gray">This list is based on the following search criteria:</div>';
						html += '<div class="search_info">' + folder.Data.SEARCH + '</div>';
					}
					$("#list_info").html(html);
				} else if (folder.Data.SEARCH) {
					$("#list_info").html('<div class="small-gray">This list is based on the following search criteria:</div><div class="search_info" onclick="document.app.getCurrentFolder().editList()">' + folder.Data.SEARCH + '</div>');				
				} else {
					$("#list_info").html("");
				}
			} else {
				$("#view-settings-block").css('padding-top', '0');
			}
		}
	},
	
	actualColumns: function () {
		var columns = [];
		if (document.manageUsers == 1) {
			columns.push({
				name: "IS_USER", 
				width: "20", 
				cls: "icon-user",
				label: "", 
				custom: true, 
				html: "<img src='../common/html/res/ext/resources/images/default/tree/user-group.gif' />", 
				sorting: false
			});
		}
		columns = columns.concat(document.fields);
		columns.push({
			name: "COLUMNS",
			width: "20",
			cls: "icon-custom-view",
			sorting: false
		});
		return columns;
	},
		
	setHighlightWord: function(word) {
		this.highlightWord = word;
	},
		
	resetHighlightWord: function() {
		this.highlightWord = null;
	},
	
	outputValue: function(value, hl) {
		if (value == undefined) {
			return '';
		}
	  	if (!this.highlightWord || !hl)
	  		return value;
	  	var v = $("<div>" + value + "</div>");
	  	if (value.indexOf('<span class="highlight">') != -1) {
	  		return value;
	  	}
	  	var regex = new RegExp("(" + this.highlightWord.replace(/\s/ig, "|") +")", "ig");
	  	var s = "";
	  	v.contents().each(function () {
	  		if (this.nodeType == 3) {
	  			s += $(this).parent().html().replace(regex, '<span class="highlight">$1</span>');
	  		} else {
	  			$(this).html($(this).html().replace(regex, '<span class="highlight">$1</span>'));
	  			s += $("<div></div>").append(this).html();
	  		}
	  	});
	  	return s;
	},	
	
	render: function() {		
		this.superclass().render.call(this);	
	},
		
	resetPage: function(page) {
		page = page | 0;
		this.pager.resetPage(page);
	},
		
	createView: function (viewMode) {
	  	var config = {};
	  	switch (viewMode) {
	  		case "detail":
	  			config.iconType = "bigicons";
	  			return new UGListView(this, config);
	  			break;	
	  		case "tile":
	  			return new UGTileView(this, config);
	  			break;
	  		case "columns":
	  			return new UGColumnsView(this, config);
	  			break;
	  	}
	  	return null;
  },
  	
  updateItemBlock: function (block, record) {
  	this.superclass().updateItemBlock.call(this, block, record);
  	
  	// Find control icon
  	var sampObjects = block.getElementsByTagName("SAMP");
  	var controlIconPlace = false;
  	for (var i = 0; i < sampObjects.length; i++)
  		if (sampObjects[i].className=="control-icon")
  			controlIconPlace = sampObjects[i];
  	if (!controlIconPlace) 
  		return;
  	
  	var icon = createDiv("control-icon");
  	controlIconPlace.parentNode.replaceChild(icon, controlIconPlace);
  	addHandler(icon, "click", function(e) {record.showMenu(e)}, record );
  	
  },
  	
  createRecordsList: function() {
  	return new UGUsersList();
  },
  	
  getNoRecordsMessage: function() {
	var mode = document.app.mode;
	if (mode == "lists") {
		return "<no contacts in this list>";
	} else 	if (mode == "folders") {
		if (!document.app.getCurrentFolder().Rights) {
			return 'You have no access rights to this folder';
		}
		return "<no contacts in this folder>";		
	} else 	if (mode == "search") {
		return 'No contacts found';
	} else {
		return "<no contacts>";
	}
  },
  
  onLoad: function () {
	  if (!this.getStore() || !this.getStore().hasRecords()) {
		  if (document.app.mode == "search") {
			  $("#search_header").remove();
		  }
	  } else {
		  if (document.app.mode == "search") {
			  if ($("#search_header").length) {
				  $("#search_header").html(this.getStore().getTotal() + ' contacts found');
			  } else {
				  var str = '<div id="search_header">' + this.getStore().getTotal() + ' contacts found</div>';
				  $("div.contacts-info").prepend(str);
			  }
		  } else {
			  this.resetHighlightWord();
			  $("#search_header").remove();
		  }
	  }
	  
	if (typeof(results_load) == 'function') {
		results_load();
	}
		
	// Contacts not found
	if (document.app.mode == 'search' && (!this.getStore() || !this.getStore().hasRecords())) {
		// Hide button
		$("#view-settings-block").hide();
	} else {
		// Show buttons
		$("#view-settings-block").show();
	}
  }
});

var UGContactsListMenu = newClass(WbsPopmenu, {
	constructor: function(recordsList) {
		this.recordsList = recordsList;
		this.folder = document.app.getCurrentFolder();
		var config = {};
		
		var disabled = this.recordsList.getCount() == 0;
		
		if (document.app.mode == 'search') {
			this.folder.Rights = 3;
			config.items = [
				{label: "Save as a list", disabled: false, iconCls: 'item-save-as-list', onClick: document.createList}
			];
		} else if (document.app.mode == 'lists' && this.folder.Id == -1) {
			config.items = [
			    {label: "Update", disabled: false, onClick: function () {
			    	var params = document.app.store.params;
			    	params.force = 1;
			    	document.app.store.load();
			    }}
			];
		} else {
			config.items = [];
		}
		config.items = config.items.concat([
		    {label: 'Actions with selected contacts (' + recordsList.getCount() + "):", cls: "unactive"}
		]);
		
		if (document.app.mode != 'lists' || this.folder.Rights == 7) {
			config.items = config.items.concat([
				{label: "Bulk editing", iconCls: "item-bulk-edit",
					 disabled: disabled || this.folder.Rights < 3, 
					 onClick: function () {
						var f = new Array();
						for (var i = 0; i < document.fields.length; i++) {
							f.push(document.fields[i].name);
						}
						f = f.join(',');
						document.app.openSubframe('?mod=contacts&act=multiedit&contacts='+recordsList.getIds()+'&f='+f, 1);
						}
				},
				"-",
				{label: (document.app.mode != 'folders' ? "Move to folder" : "Move to another folder"), iconCls: 'item-contact-move', disabled: (disabled || this.folder.Rights < 3), onClick: recordsList.showMoveToFolderDlg.bind(recordsList) },
				{label: document.app.mode == 'lists' ? "Add to another list" : "Add to list", disabled: disabled, onClick: recordsList.showAddToListDlg.bind(recordsList) }
			]);
		}
		if (document.app.mode == 'lists' && !this.folder.Data.SEARCH && this.folder.Rights == 7) {
			config.items = config.items.concat([
			    {label: "Exclude from this list", disabled: disabled, onClick: recordsList.excludeFromList.bind(recordsList) }
			]);
		}
		if (document.app.mode != 'lists' || this.folder.Rights == 7) {
			config.items = config.items.concat([
				{label: "Delete", iconCls: 'item-contact-delete', disabled: (disabled || this.folder.Rights < 3), onClick: recordsList.tryDelete.bind(recordsList)}
			]);
		}
		config.items = config.items.concat([
		    "-",
			{label: "Export", onClick: recordsList.exportContactsDlg.bind(recordsList)}
		]);
		config.items = config.items.concat([
		    "-",
			{label: "Send email", onClick: recordsList.sendEmailScreen.bind(recordsList)},
			{label: "Send SMS", onClick: recordsList.sendsmsDlg.bind(recordsList)}
		]);
		if (document.app.mode == 'folders' && (this.folder.Rights == 7 || (document.app.right.users && this.folder.Id && this.folder.Id.indexOf('.') != -1))) {
			config.items = config.items.concat([
			    "-",
			    {label: 'Actions with folder:', cls: "unactive"}
			]);
			if (document.app.right.users) {
				config.items = config.items.concat([
				    {label: "Customize access rights", iconCls: 'item-folder-customize', disabled: false, onClick:  function () {document.app.openSubframe('?mod=folders&act=rights&folder_id=' + this.folder.Id, 1)}}
				]);
			}
			if (this.folder.Rights == 7) {
				config.items = config.items.concat([
					{label: "Rename", disabled: this.folder.Rights < 7, onClick: this.folder.showRename.bind(this.folder)},
					{label: "Move", iconCls: 'item-folder-move', disabled: this.folder.Rights < 7, onClick: this.folder.showMoveDlg.bind(this.folder)},
					{label: "Delete folder", iconCls: 'item-folder-delete', disabled: this.folder.Rights < 7, onClick: this.folder.tryDelete.bind(this.folder)}
				]);
			}
		}
		if (document.app.mode == 'folders' && this.folder.Id == 'PUBLIC' && document.app.right.admin) {			
			config.items = config.items.concat([
			    "-",
			    {label: 'Actions with folder:', cls: "unactive"},
			    {html: 'Delete "Public" folder', iconCls: 'item-folder-delete', disabled: false, onClick: this.folder.tryDelete.bind(this.folder)}
			]);

		}
		if (document.app.mode == 'lists' && this.folder.Rights == 7) {
			this.list = document.app.getCurrentFolder();
			
			config.items = config.items.concat([
			    "-",
			    {label: 'Actions with list:', cls: "unactive"},
			    {label: this.list.Data.SEARCH ? "Edit search criteria" : "Edit", disabled: false, onClick: this.list.editList.bind(this.list)},		                
				{label: "Rename list", disabled: false, onClick: this.list.showRename.bind(this.list)},	
				{label: "Delete this list", disabled: false, onClick: this.list.tryDelete.bind(this.list)}
				
			]);		
			
			if (document.app.right.admin) {
				var share_title = "Share this list with other users (read only)";
				if (this.list.Data.SHARED) {
					var cls = "item-list-shared";
				} else {
					var cls = "";
				}
				var shareList = function () {
					this.Data.SHARED = this.Data.SHARED ? 0 : 1;
					jQuery.post("?mod=lists&act=share&ajax=1", {id: this.Id, share: this.Data.SHARED});
					
					var app = document.app;
					var cls = this.Data.SEARCH ? 'icon-list-search' : 'icon-list';
					
					app.listsList.addClass(this.Data.SHARED ? cls + '-shared' : cls);
					app.listsList.removeClass(this.Data.SHARED ? cls : cls + '-shared');
					
				}				
				config.items = config.items.concat([
				{label: share_title, iconCls: cls, disabled: false, onClick: shareList.bind(this.list)}
				]);
			}
		}
		config.withImages = true;
		this.superclass().constructor.call(this, config);			
	}
});

