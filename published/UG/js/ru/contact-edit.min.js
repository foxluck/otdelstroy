/**
 * Ajax upload plugin for jQuery
 * Project page - http://valums.com/ajax-upload/
 * Copyright (c) 2008 Andris Valums, http://valums.com
 * Licensed under the MIT license (http://valums.com/mit-license/)
 */
(function($){
	// we need jQuery to run
	if ( ! $) return;

	/**
	 * Function generates unique id
	 */		
	var get_uid = function(){
		var uid = 0;
		return function(){
			return uid++;
		}
	}();

	/**
	 * button - jQuery element
	 * option - hash of options :
	 *   action - URL which iframe will use to post data
	 *   name - file input name
	 *   data - extra data hash to post within the file
	 *   onSubmit - callback to fire on file submit
	 *   onComplete - callback to fire when iframe has finished loading
	 */
	window.Ajax_upload = function(button, options){
		// make sure it is jquery object
		button = $(button);
		
		if (button.size() != 1 ){
			//console.error('You passed ', button.size(),' elements to ajax_upload at once');
			return false;
		}
				
		this.button = button;
				
		this.wrapper = null;
		this.form = null;
		this.input = null;
		this.iframe = null;		

		this.disabled = false;
		this.submitting = false;
				
		this.settings = {
			// Location of the server-side upload script
			action: 'upload.php',			
			// File upload name
			name: 'userfile',
			// Additional data to send
			data: {},
			// Callback to fire when user selects file
			// You can return false to cancel upload
			onSubmit: function(file, extension) {},
			// Fired when file upload is completed
			onComplete: function(file, response) {},
			width: 0,
			height: 0,
			flt: "left"
		};

		// Merge the users options with our defaults	
		$.extend(this.settings, options);
		
		this.create_wrapper();
		this.create_input();
		
		if (jQuery.browser.msie){
			// fix ie transparent background bug
			this.make_parent_opaque();
		}
		
		this.create_iframe();		
	}
	
	// assigning methods to our class
	Ajax_upload.prototype = {
		set_data : function(data){
			this.settings.data = data;
		},
		disable : function(){
			this.disabled = true;
			if ( ! this.submitting){
				this.input.attr('disabled', true);
				this.button.removeClass('hover');	
			}			
		},
		enable : function(){
			this.disabled = false;
			this.input.attr('disabled', false);							
		},
		/**
		 * Creates wrapper for button and invisible file input
		 */
		create_wrapper : function(){
			// Shorten names			
			var button = this.button, wrapper;
			
			wrapper = this.wrapper = $('<span></span>')
				.insertAfter(button)
				.append(button);			

			// wait a bit because of FF bug
			// it can't properly calculate the outerHeight

			var self = this;
			setTimeout(function(){
				wrapper.css({
					'float': self.settings.flt,
					position: 'relative',
					overflow: 'hidden',
					display: 'block',
					margin: 0,
					padding: 0,
					// we need dimensions because of ie bug that allows to move 
					// input outside even if overflow set to hidden					

					height: self.settings.height ? self.settings.height : button.outerHeight(true),
					width: self.settings.width ? self.settings.width : button.outerWidth(true)
				});				
			}, 1);
			
			wrapper.mousemove(function(e){
				// Move the input with the mouse, so the user can't misclick it
				if (!self.input ) {
					return;
				}
									
				self.input.css({
					top: e.pageY - wrapper.offset().top - 5 + 'px'
					,left: e.pageX - wrapper.offset().left - 1 + 'px'
				});
			});

	
		},
		/**
		 * Creates invisible file input above the button 
		 */
		create_input : function(){
			var self = this;

			this.input = $('<input type="file" />')
				.attr('name', this.settings.name)				
				.css({'position' : 'absolute', 'margin': "0", 'padding': "0", 'width': '2px', 'height': '10px', 'opacity': 0})
				.change(function(){
					if ($(this).val() == ''){
						// there is no file
						return;
					}
					
					// we need to lock "disable" method
					self.submitting = true;
					
					// Submit form when value is changed
					self.submit();
					
					if (self.disabled){
						self.disable();					
					}						
					// unlock "disable" method
					self.submitting = false;					
				})
				.appendTo(this.wrapper)
				
				// Emulate button hover effect				
				.hover(
					function(){
						if (self.settings.hover) {
							self.settings.hover();
						}
						self.button.addClass('hover');
					}, function(){
						if (self.settings.unhover) {
							self.settings.unhover();
						}
						self.button.removeClass('hover');
					}
				);
				
			if (this.disabled){
				this.input.attr('disabled', true);
			}

		},
		/**
		 * Creates iframe with unique name
		 */
		create_iframe : function(){
			// unique name
			// We cannot use getTime, because it sometimes return
			// same value in safari :(
			var id = 'valums97hhu' + get_uid();
			
			// create iframe, so we dont need to refresh page
			this.iframe = 
				$('<iframe id="' + id + '" name="' + id + '"></iframe>')
				.css('display', 'none')
				.appendTo('body');									
		},
		/**
		 * Upload file without refreshing the page
		 */
		submit : function(){			
			var self = this, settings = this.settings;			
			
			// get filename from input
			var file = this.file_from_path(this.input.val());			

			// execute user event
			if (settings.onSubmit.call(this, file, this.get_ext(file)) === false){
				// Do not continue if user function returns false						
				return;
			}			

			this.create_form();
			this.input.appendTo(this.form);			
			this.form.submit();			
			
			this.input.remove(); this.input = null;
			this.form.remove();	this.form = null;

			this.submitting = false;
			
			// create new input
			this.create_input();	
	
			var iframe = this.iframe;
			iframe.load(function(){
				var response = iframe.contents().find('body').html();	
		
				settings.onComplete.call(self, file, response);				
				/// Workaround for FF2 bug, which causes cursor to be in busy state after post.
				setTimeout(function(){
					iframe.remove();
				}, 1);				
			});
			
			// Create new iframe, so we can have multiple uploads at once
			this.create_iframe();		
		},		
		/**
		 * Creates form, that will be submitted to iframe
		 */
		create_form : function(){
			// method, enctype must be specified here
			// because changing this attr on the fly is not allowed in IE 6/7
			this.form = 
				$('<form method="post" enctype="multipart/form-data"></form>')				
				.attr({
					"action" : this.settings.action
					,"target" : this.iframe.attr('name')					
				})
				.appendTo('body');			
			
			// Create hidden input element for each data key
			for (var i in this.settings.data){
				$('<input type="hidden" />')
					.appendTo(this.form)
					.attr({
						'name': i
						,'value': this.settings.data[i]
					});
			}
		},		
		file_from_path : function(file){
			return file.replace(/.*(\/|\\)/, "");			
		},
		get_ext : function(file){
			return (/[.]/.exec(file)) ? /[^.]+$/.exec(file.toLowerCase()) : '';
		},
		make_parent_opaque : function(){
			// ie transparent background bug
			this.button.add(this.button.parents()).each(function(){				
				var color = $(this).css('backgroundColor');
				var image = $(this).css('backgroundImage');
	
				if ( color != 'transparent' ||  image != 'none'){
					//$(this).css('opacity', 1);
					return false;
				}
			});			
		}
		
	};
})(jQuery);
/**
  * @name  wbsPopup
  * @type  jQuery
  * @param String  target             	div
  * @param Hash    options            	additional options
  * @param Iteger  options[width]  	
  * @param Iteger  options[height]
  * @param String  options[backgroundColor] background css background-color
  * @param Float  options[opacity]
  * @param String  options[url]  url content
  * @param Function  options[loadComplite]  callback
  * @param Function  options[hidePopup]  callback
  * @param Hash  options[callback]  object Functions to callback (iframe use)
  */
(function($) {
	
	$.fn.wbsPopup = function(options) {
		
		var settings = {
            width		: 500,
            height		: 400,
            backgroundColor: '#000000',
            opacity		: 0.5,
            iframe		: false,
            close		: ''
        };
        
        if(options) {
            $.extend(settings, options);
        }
        
        var loadComplite = settings.loadComplite || function() {};
        var hidePopup = settings.hidePopup || function() {};
        var callback = settings.callback || {};
        
        return this.each(function() {
        	if ( !settings.iframe ) {
        		$(this).empty();
        	}
        	var $target = $(this);

        	var $body =  $('body');
    	
		    $(window).keydown(function(e){		 
		    	if (e.keyCode == 27) {
					if ( settings.iframe)
						window.closePopup(false);
					else { 
						$target.wbsPopupClose();
					}
		    	}
		    });
        	
        	var $background = $("<div id='wbs-popup-bg'></div>");
        	$body.append($background);
        	$background.css({
        		opacity: settings.opacity,
        		'z-index': 500,
        		position: 'absolute',
        		top: 0,
        		left: 0,
				height: '100%',
				width: '100%',
				'background-color': settings.backgroundColor
        	});
        	
        	$target.css({
        		marginLeft: '-' + parseInt((settings.width / 2),10) + 'px', 
        		width: settings.width + 'px',
        		position: 'absolute',
        		display: 'block',
        		height: settings.height,
        		width : settings.width,
        		left: '50%',
        		top: '50%',
        		'z-index': 502        		
        	});
			if ( !(jQuery.browser.msie)) { // take away IE6
				$target.css({
					marginTop: '-' + parseInt((settings.height / 2), 10) + 'px'
				});
			}
						
			if (settings.url) {
				if ( !settings.iframe ) {
					$target.load( settings.url, function(){
						
						if ( !this.settings.close == '' )							
							$(this.self).append('<a href="#" id="popupclose" onclick="$(this).parent().wbsPopupClose(); $(this).remove(); return false;" >'+this.settings.close+'</a>');
							
						this.loadComplite();
					}.bind({
						self: this,
						settings: settings,
						loadComplite: loadComplite
					}) );
				}
				else {
					$target.hidePopup = hidePopup;
					$target.loadComplite = loadComplite;
					$target.children().not('#popup').remove();
					var $iframe = $('<iframe id="popup_iframe" src="'+settings.url+'" style="width:100%; height:100%;"/>').appendTo($target);
					
					window.closePopup = function(isReload, id){
						var isReload = (isReload == undefined) ? true : isReload;
						this.wbsPopupClose();
						if (isReload)
							this.hidePopup(id);
							
						//this.loadComplite(id);
					}.bind($target);
					
					var self = this;
					var isFrist = true;
					var dd_ = loadComplite;
					$iframe.load(function(){
						if ( isFrist ) {
							isFrist = false;
							
							$iframe.contents().find('form').submit(function(){
								$iframe.hide();
								$('#progress').show();
							});
							
							return;
						}
						var response = $iframe.contents().find('body').html();
						if ( response.length > 0 )						
						try {
							var response = eval("(" + response + ")");
						} catch (e) {}
						
						dd_.apply(self, [response]);
						return true;
					});
				}
			}
			else {
				if ( !settings.close == '' )
					$(this).append('<a href="#" id="popupclose" onclick="$(this).parent().wbsPopupClose(); $(this).remove(); return false;" >'+settings.close+'</a>');
			}

			$target.show();	
        });
	};
	
	$.fn.wbsPopupRender = function( notBindEvent ) {		
		return this.each(function() {
			var $target = $(this);
			$target.css({
        		marginLeft: '-' + parseInt( ($(this).width() / 2), 10) + 'px',
        		marginTop: '-' + parseInt( ($(this).height() / 2), 10) + 'px'
        	});
        	if ( !notBindEvent )
        	$(window).resize(function(){
        		$target.wbsPopupRender( true );
        	});
        	
		});
	};
	
	$.fn.wbsPopupClose = function(target, options) {
		return this.each(function() {
			$(this).children('iframe').remove();
			$('#popup_iframe').remove();
			$('#wbs-popup-bg').remove();
			$(this).hide();
		});
	};
	
})(jQuery);
(function($) {
	
	$.fn.wbspopup = function(settings) {
		settings = $.extend({
			width		: 500,
            height		: 400,
            backgroundColor: '#000000',
            opacity		: 0.5,
            iframe		: false,
            close		: ''
		},settings);
		
		var onOpen = settings.onOpen || function() {};
        var onOpenComplite = settings.onOpenComplite || function() {};
        var onCancel = settings.onCancel || function() {};
        var onSend = settings.onSend || function() {};
        var onSuccess = settings.onSuccess || function() {};
        var onClose = settings.onClose || function() {};
        
        var $target = this;	
        
        $(window).keydown(function(e){		 
	    	e = e || window.event;
	    	if (e.keyCode == 27) {
				$target.wbspopupClose();
	    	}
		});
		
		$target.wbspopupClose = function (param){			
			if (!param || param.close == true) {
				_close($(this));
				onClose.apply(this, [param]);
			}
			else {
				onClose.apply(this);
			}
		};
		
		function _close($popup) {
			$popup.children('iframe').remove();
			$('#popup_iframe').remove();
			$('#wbs-popup-bg').remove();
			$popup.hide();
		};
		
		window.closePopup = function(param){
			if (param)
				this.wbspopupClose(param);
			else
				this.wbspopupClose();
		}.bind($target);
        
		var $background = $("<div id='wbs-popup-bg'></div>");
    	$('body').append($background);
    	$background.css({
    		opacity: settings.opacity,
    		'z-index': 500,
    		position: 'absolute',
    		top: 0,
    		left: 0,
			height: '100%',
			width: '100%',
			backgroundColor: settings.backgroundColor
    	});

    	if (settings.height == 'auto' || !$.browser.msie) {
    		var top = '50%';
    	} else {
    		var top = ($(window).height() - settings.height) / (2 * $(window).height());
    		top = 100 * top + '%';
    	}
    	$target.css({
        		marginLeft: '-' + parseInt((settings.width / 2),10) + 'px', 
        		width: settings.width + 'px',
        		position: 'absolute',
        		display: 'block',
        		height: settings.height,
        		width : settings.width,
        		left: '50%',
        		top: top,
        		'z-index': 502        		
        });
        if ( !jQuery.browser.msie && settings.height != 'auto') { // take away IE6
			$target.css({
				marginTop: '-' + parseInt((settings.height / 2), 10) + 'px'
			});
		}
        	
		if (settings.url) {
			if ( settings.iframe ) {
				$target.children('.content').empty();
				var $iframe = $('<iframe id="popup_iframe" src="'+settings.url+'" style="width:100%; height:100%;"/>')
					.appendTo($target.find('.content').show());
					
				var isSubmit = false;
				$iframe.load(function(){
					$('#progress').hide();
					$iframe.contents().find('form').submit(function(){
						$target.children('.content').hide();
						$('#progress').show();
						isSubmit = true;
						return true;
					});
					if (isSubmit) {					
						var response = $iframe.contents().find('body').html();
						if ( response.length > 0 ) 
						try {
							var response = eval("(" + response + ")");
						} catch (e) {}
						onSuccess.apply(this, [response]);
						if (response && response.close_popup && response.close_popup == 1) {
							setTimeout(function(){
								$target.wbspopupClose();
							}, 10);
						}
						else {
							$target.find('.content').show();
						}
						isSubmit = false;
					}
					else {
						onOpenComplite.apply(this);
					}
				});
			}
			else {
				
			}
		}
		else {
			
		}
		
		/**
		 / THIRD FUNCTION
		 * getPageSize() by quirksmode.com
		 *
		 * @return Array Return an array with page width, height and window width, height
		 */
		function ___getPageSize() {
			var xScroll, yScroll;
			if (window.innerHeight && window.scrollMaxY) {	
				xScroll = window.innerWidth + window.scrollMaxX;
				yScroll = window.innerHeight + window.scrollMaxY;
			} else if (document.body.scrollHeight > document.body.offsetHeight){ // all but Explorer Mac
				xScroll = document.body.scrollWidth;
				yScroll = document.body.scrollHeight;
			} else { // Explorer Mac...would also work in Explorer 6 Strict, Mozilla and Safari
				xScroll = document.body.offsetWidth;
				yScroll = document.body.offsetHeight;
			}
			var windowWidth, windowHeight;
			if (self.innerHeight) {	// all except Explorer
				if(document.documentElement.clientWidth){
					windowWidth = document.documentElement.clientWidth; 
				} else {
					windowWidth = self.innerWidth;
				}
				windowHeight = self.innerHeight;
			} else if (document.documentElement && document.documentElement.clientHeight) { // Explorer 6 Strict Mode
				windowWidth = document.documentElement.clientWidth;
				windowHeight = document.documentElement.clientHeight;
			} else if (document.body) { // other Explorers
				windowWidth = document.body.clientWidth;
				windowHeight = document.body.clientHeight;
			}	
			// for small pages with total height less then height of the viewport
			if(yScroll < windowHeight){
				pageHeight = windowHeight;
			} else { 
				pageHeight = yScroll;
			}
			// for small pages with total width less then width of the viewport
			if(xScroll < windowWidth){	
				pageWidth = xScroll;		
			} else {
				pageWidth = windowWidth;
			}
			arrayPageSize = new Array(pageWidth,pageHeight,windowWidth,windowHeight);
			return arrayPageSize;
		};
		/**
		 / THIRD FUNCTION
		 * getPageScroll() by quirksmode.com
		 *
		 * @return Array Return an array with x,y page scroll values.
		 */
		function _getPageScroll() {
			var xScroll, yScroll;
			if (self.pageYOffset) {
				yScroll = self.pageYOffset;
				xScroll = self.pageXOffset;
			} else if (document.documentElement && document.documentElement.scrollTop) {	 // Explorer 6 Strict
				yScroll = document.documentElement.scrollTop;
				xScroll = document.documentElement.scrollLeft;
			} else if (document.body) {// all other Explorers
				yScroll = document.body.scrollTop;
				xScroll = document.body.scrollLeft;	
			}
			arrayPageScroll = new Array(xScroll,yScroll);
			return arrayPageScroll;
		};
	};
	
})(jQuery);
WbsData = function() {
	var params = {};
	return {
		set: function (obj) {
			$.extend(params, obj);
		},
		get: function (name, defaultValue) {
			if( name == null ) return params;
			return params[name] || defaultValue || null;
		}
	}
}();

function setCookie(cookieName, cookieValue, nDays) {
	var today = new Date();
	var expire = new Date();
	if (nDays==null || nDays==0) nDays=1;
	expire.setTime(today.getTime() + 3600000*24*nDays);
	document.cookie = cookieName+"="+escape(cookieValue)
	+ ";expires="+expire.toGMTString();
}

function newClass(parent, prop) {
	  // Dynamically create class constructor.
	  var clazz = function() {
	    // Stupid JS need exactly one "operator new" calling for parent
	    // constructor just after class definition.
	    if (clazz.preparing) return delete(clazz.preparing);
	    // Call custom constructor.
	    if (clazz.constr) {
	      this.constructor = clazz; // we need it!
	      clazz.constr.apply(this, arguments);
	    }
	  }
	  clazz.prototype = {}; // no prototype by default
	  if (parent) {
	    parent.preparing = true;
	    clazz.prototype = new parent;
	    clazz.prototype.constructor = parent;
	    clazz.constr = parent; // BY DEFAULT - parent constructor
	  }
	  if (prop) {
	    var cname = "constructor";
	    for (var k in prop) {
	      if (k != cname) clazz.prototype[k] = prop[k];
	    }
	    if (prop[cname] && prop[cname] != Object)
	      clazz.constr = prop[cname];
	  }
	  clazz.prototype.superclass = function() {return this.constructor.prototype};
	  return clazz;
}

Function.prototype.bind = function(scope, object) {	
	if (object)
		scope.self = object;
	
	var __method = this;
	return function() {
		return __method.apply(scope, arguments);
	}
}

function addHandler(element, event, action, scope){
	if (scope) {
		action = action.bind(scope);
	}
	
	if(document.addEventListener) element.addEventListener(event, action, null);
	else if(document.attachEvent) element.attachEvent('on' + event,action);
	else element['on'+event] = action;
}

function createDiv(className) {
	return createElem("div", className);
}

function createElem(tag, className, attributes) {
	var elem = document.createElement(tag);
	$(elem).addClass(className);
	if (attributes) {
		$(elem).attr(attributes);
	}
	return elem;	
}

function htmlspecialchars(str) {
	if (str == null || typeof str != 'string' || str.length == 0) {
		return str;
	}
	return str.replace(/&/g, "&amp;").replace(/</g, "&lt;").replace(/>/g, "&gt;").replace(/"/g, "&quot;").replace(/'/g, "&#039;").replace(/\n/g, "<br/>").replace(/\s/g, "&nbsp;");
}

$().ajaxComplete(function(request, settings){
	if (settings.status == 200) {
		try {
			var response = eval("(" + settings.responseText + ")");
			if (response.errorCode == 'SESSION_TIMEOUT') {
				if (window && window.parent) {
					var d = window.parent.document;
				} else {
					var d = document;
				}
				d.location.href = response.redirectUrl;
			}
			if ( response.status == 'ERR' && !response.hide &&  typeof(response.error) == "string") {
				if (document.hideError) {
					document.hideError = false;
				} else {
					alert(response.error);
				}
			}
		} catch (e) {
			
		}
	}
});
 
/*
 * jQuery UI Datepicker
 *
 * Copyright (c) 2006, 2007, 2008 Marc Grabanski
 * Dual licensed under the MIT (MIT-LICENSE.txt)
 * and GPL (GPL-LICENSE.txt) licenses.
 * 
 * http://docs.jquery.com/UI/Datepicker
 *
 * Depends:
 *	ui.core.js
 *
 * Marc Grabanski (m@marcgrabanski.com) and Keith Wood (kbwood@virginbroadband.com.au).
 */
   
(function(f){var s='datepicker';function R(){this.debug=false;this._j=null;this._8=[];this._f=false;this._d=false;this._u='ui-datepicker-div';this._v='ui-datepicker-append';this._9='ui-datepicker-trigger';this._w='ui-datepicker-dialog';this._x='ui-datepicker-prompt';this._y='ui-datepicker-unselectable';this._n='ui-datepicker-current-day';this.regional=[];this.regional['']={clearText:'Clear',clearStatus:'Erase the current date',closeText:'Close',closeStatus:'Close without change',prevText:'&#x3c;Prev',prevStatus:'Show the previous month',nextText:'Next&#x3e;',nextStatus:'Show the next month',currentText:'Today',currentStatus:'Show the current month',monthNames:['January','February','March','April','May','June','July','August','September','October','November','December'],monthNamesShort:['Jan','Feb','Mar','Apr','May','Jun','Jul','Aug','Sep','Oct','Nov','Dec'],monthStatus:'Show a different month',yearStatus:'Show a different year',weekHeader:'Wk',weekStatus:'Week of the year',dayNames:['Sunday','Monday','Tuesday','Wednesday','Thursday','Friday','Saturday'],dayNamesShort:['Sun','Mon','Tue','Wed','Thu','Fri','Sat'],dayNamesMin:['Su','Mo','Tu','We','Th','Fr','Sa'],dayStatus:'Set DD as first week day',dateStatus:'Select DD, M d',dateFormat:'mm/dd/yy',firstDay:0,initStatus:'Select a date',isRTL:false};this._2={showOn:'focus',showAnim:'show',showOptions:{},defaultDate:null,appendText:'',buttonText:'...',buttonImage:'',buttonImageOnly:false,closeAtTop:true,mandatory:false,hideIfNoPrevNext:false,navigationAsDateFormat:false,gotoCurrent:false,changeMonth:true,changeYear:true,yearRange:'-10:+10',changeFirstDay:true,highlightWeek:false,showOtherMonths:false,showWeeks:false,calculateWeek:this.iso8601Week,shortYearCutoff:'+10',showStatus:false,statusForDate:this.dateStatus,minDate:null,maxDate:null,duration:'normal',beforeShowDay:null,beforeShow:null,onSelect:null,onChangeMonthYear:null,onClose:null,numberOfMonths:1,stepMonths:1,rangeSelect:false,rangeSeparator:' - ',altField:'',altFormat:''};f.extend(this._2,this.regional['']);this.dpDiv=f('<div id="'+this._u+'" style="display: none;"></div>')}f.extend(R.prototype,{markerClassName:'hasDatepicker',log:function(){if(this.debug)console.log.apply('',arguments)},setDefaults:function(a){K(this._2,a||{});return this},_N:function(a,b){var c=null;for(attrName in this._2){var d=a.getAttribute('date:'+attrName);if(d){c=c||{};try{c[attrName]=eval(d)}catch(err){c[attrName]=d}}}var h=a.nodeName.toLowerCase();var g=(h=='div'||h=='span');if(!a.id)a.id='dp'+new Date().getTime();var i=this._z(f(a),g);i.settings=f.extend({},b||{},c||{});if(h=='input'){this._O(a,i)}else if(g){this._P(a,i)}},_z:function(a,b){return{id:a[0].id,input:a,selectedDay:0,selectedMonth:0,selectedYear:0,drawMonth:0,drawYear:0,inline:b,dpDiv:(!b?this.dpDiv:f('<div class="ui-datepicker-inline"></div>'))}},_O:function(d,h){var g=f(d);if(g.hasClass(this.markerClassName))return;var i=this._0(h,'appendText');var l=this._0(h,'isRTL');if(i)g[l?'before':'after']('<span class="'+this._v+'">'+i+'</span>');var j=this._0(h,'showOn');if(j=='focus'||j=='both')g.focus(this._h);if(j=='button'||j=='both'){var k=this._0(h,'buttonText');var o=this._0(h,'buttonImage');var p=f(this._0(h,'buttonImageOnly')?f('<img/>').addClass(this._9).attr({src:o,alt:k,title:k}):f('<button type="button"></button>').addClass(this._9).html(o==''?k:f('<img/>').attr({src:o,alt:k,title:k})));g[l?'before':'after'](p);p.click(function(){if(f.datepicker._f&&f.datepicker._i==d)f.datepicker._e();else f.datepicker._h(d);return false})}g.addClass(this.markerClassName).keydown(this._o).keypress(this._A).bind("setData.datepicker",function(a,b,c){h.settings[b]=c}).bind("getData.datepicker",function(a,b){return this._0(h,b)});f.data(d,s,h)},_P:function(d,h){var g=f(d);if(g.hasClass(this.markerClassName))return;g.addClass(this.markerClassName).append(h.dpDiv).bind("setData.datepicker",function(a,b,c){h.settings[b]=c}).bind("getData.datepicker",function(a,b){return this._0(h,b)});f.data(d,s,h);this._B(h,this._C(h));this._5(h)},_10:function(a,b,c,d,h){var g=this._Q;if(!g){var i='dp'+new Date().getTime();this._6=f('<input type="text" id="'+i+'" size="1" style="position: absolute;top: -100px;"/>');this._6.keydown(this._o);f('body').append(this._6);g=this._Q=this._z(this._6,false);g.settings={};f.data(this._6[0],s,g)}K(g.settings,d||{});this._6.val(b);this._3=(h?(h.length?h:[h.pageX,h.pageY]):null);if(!this._3){var l=window.innerWidth||document.documentElement.clientWidth||document.body.clientWidth;var j=window.innerHeight||document.documentElement.clientHeight||document.body.clientHeight;var k=document.documentElement.scrollLeft||document.body.scrollLeft;var o=document.documentElement.scrollTop||document.body.scrollTop;this._3=[(l/2)-100+k,(j/2)-150+o]}this._6.css('left',this._3[0]+'px').css('top',this._3[1]+'px');g.settings.onSelect=c;this._d=true;this.dpDiv.addClass(this._w);this._h(this._6[0]);if(f.blockUI)f.blockUI(this.dpDiv);f.data(this._6[0],s,g);return this},_11:function(a){var b=a.nodeName.toLowerCase();var c=f(a);f.removeData(a,s);if(b=='input'){c.siblings('.'+this._v).remove().end().siblings('.'+this._9).remove().end().removeClass(this.markerClassName).unbind('focus',this._h).unbind('keydown',this._o).unbind('keypress',this._A)}else if(b=='div'||b=='span')c.removeClass(this.markerClassName).empty()},_12:function(b){b.disabled=false;f(b).siblings('button.'+this._9).each(function(){this.disabled=false}).end().siblings('img.'+this._9).css({opacity:'1.0',cursor:''});this._8=f.map(this._8,function(a){return(a==b?null:a)})},_13:function(b){b.disabled=true;f(b).siblings('button.'+this._9).each(function(){this.disabled=true}).end().siblings('img.'+this._9).css({opacity:'0.5',cursor:'default'});this._8=f.map(this._8,function(a){return(a==b?null:a)});this._8[this._8.length]=b},_R:function(a){if(!a)return false;for(var b=0;b<this._8.length;b++){if(this._8[b]==a)return true}return false},_14:function(a,b,c){var d=b||{};if(typeof b=='string'){d={};d[b]=c}if(inst=f.data(a,s)){K(inst.settings,d);this._5(inst)}},_15:function(a,b,c){var d=f.data(a,s);if(d){this._B(d,b,c);this._5(d)}},_16:function(a){var b=f.data(a,s);if(b)this._D(b);return(b?this._p(b):null)},_o:function(a){var b=f.data(a.target,s);var c=true;if(f.datepicker._f)switch(a.keyCode){case 9:f.datepicker._e(null,'');break;case 13:f.datepicker._E(a.target,b.selectedMonth,b.selectedYear,f('td.ui-datepicker-days-cell-over',b.dpDiv)[0]);return false;break;case 27:f.datepicker._e(null,f.datepicker._0(b,'duration'));break;case 33:f.datepicker._4(a.target,(a.ctrlKey?-1:-f.datepicker._0(b,'stepMonths')),(a.ctrlKey?'Y':'M'));break;case 34:f.datepicker._4(a.target,(a.ctrlKey?+1:+f.datepicker._0(b,'stepMonths')),(a.ctrlKey?'Y':'M'));break;case 35:if(a.ctrlKey)f.datepicker._F(a.target);break;case 36:if(a.ctrlKey)f.datepicker._G(a.target);break;case 37:if(a.ctrlKey)f.datepicker._4(a.target,-1,'D');break;case 38:if(a.ctrlKey)f.datepicker._4(a.target,-7,'D');break;case 39:if(a.ctrlKey)f.datepicker._4(a.target,+1,'D');break;case 40:if(a.ctrlKey)f.datepicker._4(a.target,+7,'D');break;default:c=false}else if(a.keyCode==36&&a.ctrlKey)f.datepicker._h(this);else c=false;if(c){a.preventDefault();a.stopPropagation()}},_A:function(a){var b=f.data(a.target,s);var c=f.datepicker._S(f.datepicker._0(b,'dateFormat'));var d=String.fromCharCode(a.charCode==undefined?a.keyCode:a.charCode);return a.ctrlKey||(d<' '||!c||c.indexOf(d)>-1)},_h:function(a){a=a.target||a;if(a.nodeName.toLowerCase()!='input')a=f('input',a.parentNode)[0];if(f.datepicker._R(a)||f.datepicker._i==a)return;var b=f.data(a,s);var c=f.datepicker._0(b,'beforeShow');K(b.settings,(c?c.apply(a,[a,b]):{}));f.datepicker._e(null,'');f.datepicker._i=a;f.datepicker._D(b);if(f.datepicker._d)a.value='';if(!f.datepicker._3){f.datepicker._3=f.datepicker._H(f('img',a.parentNode)[0]);f.datepicker._3[1]+=a.offsetHeight}var d=false;f(a).parents().each(function(){d|=f(this).css('position')=='fixed';return!d});if(d&&f.browser.opera){f.datepicker._3[0]-=document.documentElement.scrollLeft;f.datepicker._3[1]-=document.documentElement.scrollTop}var h={left:f.datepicker._3[0],top:f.datepicker._3[1]};f.datepicker._3=null;b.rangeStart=null;b.dpDiv.css({position:'absolute',display:'block',top:'-1000px'});f.datepicker._5(b);b.dpDiv.width(f.datepicker._k(b)[1]*f('.ui-datepicker',b.dpDiv[0])[0].offsetWidth);h=f.datepicker._T(b,h,d);b.dpDiv.css({position:(f.datepicker._d&&f.blockUI?'static':(d?'fixed':'absolute')),display:'none',left:h.left+'px',top:h.top+'px'});if(!b.inline){var g=f.datepicker._0(b,'showAnim')||'show';var i=f.datepicker._0(b,'duration');var l=function(){f.datepicker._f=true;if(f.browser.msie&&parseInt(f.browser.version)<7)f('iframe.ui-datepicker-cover').css({width:b.dpDiv.width()+4,height:b.dpDiv.height()+4})};if(f.effects&&f.effects[g])b.dpDiv.show(g,f.datepicker._0(b,'showOptions'),i,l);else b.dpDiv[g](i,l);if(i=='')l();if(b.input[0].type!='hidden')b.input[0].focus();f.datepicker._j=b}},_5:function(a){var b={width:a.dpDiv.width()+4,height:a.dpDiv.height()+4};a.dpDiv.empty().append(this._U(a)).find('iframe.ui-datepicker-cover').css({width:b.width,height:b.height});var c=this._k(a);a.dpDiv[(c[0]!=1||c[1]!=1?'add':'remove')+'Class']('ui-datepicker-multi');a.dpDiv[(this._0(a,'isRTL')?'add':'remove')+'Class']('ui-datepicker-rtl');if(a.input&&a.input[0].type!='hidden')f(a.input[0]).focus()},_T:function(a,b,c){var d=a.input?this._H(a.input[0]):null;var h=window.innerWidth||document.documentElement.clientWidth;var g=window.innerHeight||document.documentElement.clientHeight;var i=document.documentElement.scrollLeft||document.body.scrollLeft;var l=document.documentElement.scrollTop||document.body.scrollTop;if(this._0(a,'isRTL')||(b.left+a.dpDiv.width()-i)>h)b.left=Math.max((c?0:i),d[0]+(a.input?a.input.width():0)-(c?i:0)-a.dpDiv.width()-(c&&f.browser.opera?document.documentElement.scrollLeft:0));else b.left-=(c?i:0);if((b.top+a.dpDiv.height()-l)>g)b.top=Math.max((c?0:l),d[1]-(c?l:0)-(this._d?0:a.dpDiv.height())-(c&&f.browser.opera?document.documentElement.scrollTop:0));else b.top-=(c?l:0);return b},_H:function(a){while(a&&(a.type=='hidden'||a.nodeType!=1)){a=a.nextSibling}var b=f(a).offset();return[b.left,b.top]},_e:function(a,b){var c=this._j;if(!c)return;var d=this._0(c,'rangeSelect');if(d&&this._a)this._q('#'+c.id,this._g(c,c.currentDay,c.currentMonth,c.currentYear));this._a=false;if(this._f){b=(b!=null?b:this._0(c,'duration'));var h=this._0(c,'showAnim');var g=function(){f.datepicker._I(c)};if(b!=''&&f.effects&&f.effects[h])c.dpDiv.hide(h,f.datepicker._0(c,'showOptions'),b,g);else c.dpDiv[(b==''?'hide':(h=='slideDown'?'slideUp':(h=='fadeIn'?'fadeOut':'hide')))](b,g);if(b=='')this._I(c);var i=this._0(c,'onClose');if(i)i.apply((c.input?c.input[0]:null),[this._p(c),c]);this._f=false;this._i=null;c.settings.prompt=null;if(this._d){this._6.css({position:'absolute',left:'0',top:'-100px'});if(f.blockUI){f.unblockUI();f('body').append(this.dpDiv)}}this._d=false}this._j=null},_I:function(a){a.dpDiv.removeClass(this._w).unbind('.ui-datepicker');f('.'+this._x,a.dpDiv).remove()},_V:function(a){if(!f.datepicker._j)return;var b=f(a.target);if((b.parents('#'+f.datepicker._u).length==0)&&!b.hasClass(f.datepicker.markerClassName)&&!b.hasClass(f.datepicker._9)&&f.datepicker._f&&!(f.datepicker._d&&f.blockUI))f.datepicker._e(null,'')},_4:function(a,b,c){var d=f(a);var h=f.data(d[0],s);this._r(h,b,c);this._5(h)},_G:function(a){var b=f(a);var c=f.data(b[0],s);if(this._0(c,'gotoCurrent')&&c.currentDay){c.selectedDay=c.currentDay;c.drawMonth=c.selectedMonth=c.currentMonth;c.drawYear=c.selectedYear=c.currentYear}else{var d=new Date();c.selectedDay=d.getDate();c.drawMonth=c.selectedMonth=d.getMonth();c.drawYear=c.selectedYear=d.getFullYear()}this._4(b);this._s(c)},_J:function(a,b,c){var d=f(a);var h=f.data(d[0],s);h._t=false;h[c=='M'?'drawMonth':'drawYear']=b.options[b.selectedIndex].value-0;this._4(d);this._s(h)},_K:function(a){var b=f(a);var c=f.data(b[0],s);if(c.input&&c._t&&!f.browser.msie)c.input[0].focus();c._t=!c._t},_W:function(a,b){var c=f(a);var d=f.data(c[0],s);d.settings.firstDay=b;this._5(d)},_E:function(a,b,c,d){if(f(d).hasClass(this._y))return;var h=f(a);var g=f.data(h[0],s);var i=this._0(g,'rangeSelect');if(i){this._a=!this._a;if(this._a){f('.ui-datepicker td').removeClass(this._n);f(d).addClass(this._n)}}g.selectedDay=g.currentDay=f('a',d).html();g.selectedMonth=g.currentMonth=b;g.selectedYear=g.currentYear=c;if(this._a){g.endDay=g.endMonth=g.endYear=null}else if(i){g.endDay=g.currentDay;g.endMonth=g.currentMonth;g.endYear=g.currentYear}this._q(a,this._g(g,g.currentDay,g.currentMonth,g.currentYear));if(this._a){g.rangeStart=this._1(new Date(g.currentYear,g.currentMonth,g.currentDay));this._5(g)}else if(i){g.selectedDay=g.currentDay=g.rangeStart.getDate();g.selectedMonth=g.currentMonth=g.rangeStart.getMonth();g.selectedYear=g.currentYear=g.rangeStart.getFullYear();g.rangeStart=null;if(g.inline)this._5(g)}},_F:function(a){var b=f(a);var c=f.data(b[0],s);if(this._0(c,'mandatory'))return;this._a=false;c.endDay=c.endMonth=c.endYear=c.rangeStart=null;this._q(b,'')},_q:function(a,b){var c=f(a);var d=f.data(c[0],s);b=(b!=null?b:this._g(d));if(this._0(d,'rangeSelect')&&b)b=(d.rangeStart?this._g(d,d.rangeStart):b)+this._0(d,'rangeSeparator')+b;if(d.input)d.input.val(b);this._X(d);var h=this._0(d,'onSelect');if(h)h.apply((d.input?d.input[0]:null),[b,d]);else if(d.input)d.input.trigger('change');if(d.inline)this._5(d);else if(!this._a){this._e(null,this._0(d,'duration'));this._i=d.input[0];if(typeof(d.input[0])!='object')d.input[0].focus();this._i=null}},_X:function(a){var b=this._0(a,'altField');if(b){var c=this._0(a,'altFormat');var d=this._p(a);dateStr=(Y(d)?(!d[0]&&!d[1]?'':this.formatDate(c,d[0],this._7(a))+this._0(a,'rangeSeparator')+this.formatDate(c,d[1]||d[0],this._7(a))):this.formatDate(c,d,this._7(a)));f(b).each(function(){f(this).val(dateStr)})}},noWeekends:function(a){var b=a.getDay();return[(b>0&&b<6),'']},iso8601Week:function(a){var b=new Date(a.getFullYear(),a.getMonth(),a.getDate());var c=new Date(b.getFullYear(),1-1,4);var d=c.getDay()||7;c.setDate(c.getDate()+1-d);if(d<4&&b<c){b.setDate(b.getDate()-3);return f.datepicker.iso8601Week(b)}else if(b>new Date(b.getFullYear(),12-1,28)){d=new Date(b.getFullYear()+1,1-1,4).getDay()||7;if(d>4&&(b.getDay()||7)<d-3){b.setDate(b.getDate()+3);return f.datepicker.iso8601Week(b)}}return Math.floor(((b-c)/86400000)/7)+1},dateStatus:function(a,b){return f.datepicker.formatDate(f.datepicker._0(b,'dateStatus'),a,f.datepicker._7(b))},parseDate:function(k,o,p){if(k==null||o==null)throw'Invalid arguments';o=(typeof o=='object'?o.toString():o+'');if(o=='')return null;var w=(p?p.shortYearCutoff:null)||this._2.shortYearCutoff;var u=(p?p.dayNamesShort:null)||this._2.dayNamesShort;var m=(p?p.dayNames:null)||this._2.dayNames;var q=(p?p.monthNamesShort:null)||this._2.monthNamesShort;var n=(p?p.monthNames:null)||this._2.monthNames;var r=-1;var A=-1;var B=-1;var H=false;var C=function(a){var b=(y+1<k.length&&k.charAt(y+1)==a);if(b)y++;return b};var E=function(a){C(a);var b=(a=='@'?14:(a=='y'?4:2));var c=b;var d=0;while(c>0&&v<o.length&&o.charAt(v)>='0'&&o.charAt(v)<='9'){d=d*10+(o.charAt(v++)-0);c--}if(c==b)throw'Missing number at position '+v;return d};var F=function(a,b,c){var d=(C(a)?c:b);var h=0;for(var g=0;g<d.length;g++)h=Math.max(h,d[g].length);var i='';var l=v;while(h>0&&v<o.length){i+=o.charAt(v++);for(var j=0;j<d.length;j++)if(i==d[j])return j+1;h--}throw'Unknown name at position '+l;};var x=function(){if(o.charAt(v)!=k.charAt(y))throw'Unexpected literal at position '+v;v++};var v=0;for(var y=0;y<k.length;y++){if(H)if(k.charAt(y)=="'"&&!C("'"))H=false;else x();else switch(k.charAt(y)){case'd':B=E('d');break;case'D':F('D',u,m);break;case'm':A=E('m');break;case'M':A=F('M',q,n);break;case'y':r=E('y');break;case'@':var z=new Date(E('@'));r=z.getFullYear();A=z.getMonth()+1;B=z.getDate();break;case"'":if(C("'"))x();else H=true;break;default:x()}}if(r<100)r+=new Date().getFullYear()-new Date().getFullYear()%100+(r<=w?0:-100);var z=this._1(new Date(r,A-1,B));if(z.getFullYear()!=r||z.getMonth()+1!=A||z.getDate()!=B)throw'Invalid date';return z},ATOM:'yy-mm-dd',COOKIE:'D, dd M yy',ISO_8601:'yy-mm-dd',RFC_822:'D, d M y',RFC_850:'DD, dd-M-y',RFC_1036:'D, d M y',RFC_1123:'D, d M yy',RFC_2822:'D, d M yy',RSS:'D, d M y',TIMESTAMP:'@',W3C:'yy-mm-dd',formatDate:function(h,g,i){if(!g)return'';var l=(i?i.dayNamesShort:null)||this._2.dayNamesShort;var j=(i?i.dayNames:null)||this._2.dayNames;var k=(i?i.monthNamesShort:null)||this._2.monthNamesShort;var o=(i?i.monthNames:null)||this._2.monthNames;var p=function(a){var b=(n+1<h.length&&h.charAt(n+1)==a);if(b)n++;return b};var w=function(a,b){return(p(a)&&b<10?'0':'')+b};var u=function(a,b,c,d){return(p(a)?d[b]:c[b])};var m='';var q=false;if(g)for(var n=0;n<h.length;n++){if(q)if(h.charAt(n)=="'"&&!p("'"))q=false;else m+=h.charAt(n);else switch(h.charAt(n)){case'd':m+=w('d',g.getDate());break;case'D':m+=u('D',g.getDay(),l,j);break;case'm':m+=w('m',g.getMonth()+1);break;case'M':m+=u('M',g.getMonth(),k,o);break;case'y':m+=(p('y')?g.getFullYear():(g.getYear()%100<10?'0':'')+g.getYear()%100);break;case'@':m+=g.getTime();break;case"'":if(p("'"))m+="'";else q=true;break;default:m+=h.charAt(n)}}return m},_S:function(a){var b='';var c=false;for(var d=0;d<a.length;d++)if(c)if(a.charAt(d)=="'"&&!lookAhead("'"))c=false;else b+=a.charAt(d);else switch(a.charAt(d)){case'd':case'm':case'y':case'@':b+='0123456789';break;case'D':case'M':return null;case"'":if(lookAhead("'"))b+="'";else c=true;break;default:b+=a.charAt(d)}return b},_0:function(a,b){return a.settings[b]!==undefined?a.settings[b]:this._2[b]},_D:function(a){var b=this._0(a,'dateFormat');var c=a.input?a.input.val().split(this._0(a,'rangeSeparator')):null;a.endDay=a.endMonth=a.endYear=null;var d=defaultDate=this._C(a);if(c.length>0){var h=this._7(a);if(c.length>1){d=this.parseDate(b,c[1],h)||defaultDate;a.endDay=d.getDate();a.endMonth=d.getMonth();a.endYear=d.getFullYear()}try{d=this.parseDate(b,c[0],h)||defaultDate}catch(e){this.log(e);d=defaultDate}}a.selectedDay=d.getDate();a.drawMonth=a.selectedMonth=d.getMonth();a.drawYear=a.selectedYear=d.getFullYear();a.currentDay=(c[0]?d.getDate():0);a.currentMonth=(c[0]?d.getMonth():0);a.currentYear=(c[0]?d.getFullYear():0);this._r(a)},_C:function(a){var b=this._l(this._0(a,'defaultDate'),new Date());var c=this._b(a,'min',true);var d=this._b(a,'max');b=(c&&b<c?c:b);b=(d&&b>d?d:b);return b},_l:function(j,k){var o=function(a){var b=new Date();b.setDate(b.getDate()+a);return b};var p=function(a,b){var c=new Date();var d=c.getFullYear();var h=c.getMonth();var g=c.getDate();var i=/([+-]?[0-9]+)\s*(d|D|w|W|m|M|y|Y)?/g;var l=i.exec(a);while(l){switch(l[2]||'d'){case'd':case'D':g+=(l[1]-0);break;case'w':case'W':g+=(l[1]*7);break;case'm':case'M':h+=(l[1]-0);g=Math.min(g,b(d,h));break;case'y':case'Y':d+=(l[1]-0);g=Math.min(g,b(d,h));break}l=i.exec(a)}return new Date(d,h,g)};j=(j==null?k:(typeof j=='string'?p(j,this._m):(typeof j=='number'?(isNaN(j)?k:o(j)):j)));j=(j&&j.toString()=='Invalid Date'?k:j);if(j){j.setHours(0);j.setMinutes(0);j.setSeconds(0);j.setMilliseconds(0)}return this._1(j)},_1:function(a){if(!a)return null;a.setHours(a.getHours()>12?a.getHours()+2:0);return a},_B:function(a,b,c){var d=!(b);b=this._l(b,new Date());a.selectedDay=a.currentDay=b.getDate();a.drawMonth=a.selectedMonth=a.currentMonth=b.getMonth();a.drawYear=a.selectedYear=a.currentYear=b.getFullYear();if(this._0(a,'rangeSelect')){if(c){c=this._l(c,null);a.endDay=c.getDate();a.endMonth=c.getMonth();a.endYear=c.getFullYear()}else{a.endDay=a.currentDay;a.endMonth=a.currentMonth;a.endYear=a.currentYear}}this._r(a);if(a.input)a.input.val(d?'':this._g(a)+(!this._0(a,'rangeSelect')?'':this._0(a,'rangeSeparator')+this._g(a,a.endDay,a.endMonth,a.endYear)))},_p:function(a){var b=(!a.currentYear||(a.input&&a.input.val()=='')?null:this._1(new Date(a.currentYear,a.currentMonth,a.currentDay)));if(this._0(a,'rangeSelect')){return[a.rangeStart||b,(!a.endYear?a.rangeStart||b:this._1(new Date(a.endYear,a.endMonth,a.endDay)))]}else return b},_U:function(a){var b=new Date();b=this._1(new Date(b.getFullYear(),b.getMonth(),b.getDate()));var c=this._0(a,'showStatus');var d=this._0(a,'isRTL');var h=(this._0(a,'mandatory')?'':'<div class="ui-datepicker-clear"><a onclick="jQuery.datepicker._F(\'#'+a.id+'\');"'+(c?this._c(a,this._0(a,'clearStatus')||'&#xa0;'):'')+'>'+this._0(a,'clearText')+'</a></div>');var g='<div class="ui-datepicker-control">'+(d?'':h)+'<div class="ui-datepicker-close"><a onclick="jQuery.datepicker._e();"'+(c?this._c(a,this._0(a,'closeStatus')||'&#xa0;'):'')+'>'+this._0(a,'closeText')+'</a></div>'+(d?h:'')+'</div>';var i=this._0(a,'prompt');var l=this._0(a,'closeAtTop');var j=this._0(a,'hideIfNoPrevNext');var k=this._0(a,'navigationAsDateFormat');var o=this._k(a);var p=this._0(a,'stepMonths');var w=(o[0]!=1||o[1]!=1);var u=this._1((!a.currentDay?new Date(9999,9,9):new Date(a.currentYear,a.currentMonth,a.currentDay)));var m=this._b(a,'min',true);var q=this._b(a,'max');var n=a.drawMonth;var r=a.drawYear;if(q){var A=this._1(new Date(q.getFullYear(),q.getMonth()-o[1]+1,q.getDate()));A=(m&&A<m?m:A);while(this._1(new Date(r,n,1))>A){n--;if(n<0){n=11;r--}}}var B=this._0(a,'prevText');B=(!k?B:this.formatDate(B,this._1(new Date(r,n-p,1)),this._7(a)));var H='<div class="ui-datepicker-prev">'+(this._L(a,-1,r,n)?'<a onclick="jQuery.datepicker._4(\'#'+a.id+'\', -'+p+', \'M\');"'+(c?this._c(a,this._0(a,'prevStatus')||'&#xa0;'):'')+'>'+B+'</a>':(j?'':'<label>'+B+'</label>'))+'</div>';var C=this._0(a,'nextText');C=(!k?C:this.formatDate(C,this._1(new Date(r,n+p,1)),this._7(a)));var E='<div class="ui-datepicker-next">'+(this._L(a,+1,r,n)?'<a onclick="jQuery.datepicker._4(\'#'+a.id+'\', +'+p+', \'M\');"'+(c?this._c(a,this._0(a,'nextStatus')||'&#xa0;'):'')+'>'+C+'</a>':(j?'':'<label>'+C+'</label>'))+'</div>';var F=this._0(a,'currentText');F=(!k?F:this.formatDate(F,b,this._7(a)));var x=(i?'<div class="'+this._x+'">'+i+'</div>':'')+(l&&!a.inline?g:'')+'<div class="ui-datepicker-links">'+(d?E:H)+(this._M(a,(this._0(a,'gotoCurrent')&&a.currentDay?u:b))?'<div class="ui-datepicker-current"><a onclick="jQuery.datepicker._G(\'#'+a.id+'\');"'+(c?this._c(a,this._0(a,'currentStatus')||'&#xa0;'):'')+'>'+F+'</a></div>':'')+(d?H:E)+'</div>';var v=this._0(a,'firstDay');var y=this._0(a,'changeFirstDay');var z=this._0(a,'dayNames');var Z=this._0(a,'dayNamesShort');var ba=this._0(a,'dayNamesMin');var bb=this._0(a,'monthNames');var S=this._0(a,'beforeShowDay');var N=this._0(a,'highlightWeek');var I=this._0(a,'showOtherMonths');var T=this._0(a,'showWeeks');var bc=this._0(a,'calculateWeek')||this.iso8601Week;var O=(c?this._0(a,'dayStatus')||'&#xa0;':'');var bd=this._0(a,'statusForDate')||this.dateStatus;var be=a.endDay?this._1(new Date(a.endYear,a.endMonth,a.endDay)):u;for(var P=0;P<o[0];P++)for(var L=0;L<o[1];L++){var U=this._1(new Date(r,n,a.selectedDay));x+='<div class="ui-datepicker-one-month'+(L==0?' ui-datepicker-new-row':'')+'">'+this._Y(a,n,r,m,q,U,P>0||L>0,c,bb)+'<table class="ui-datepicker" cellpadding="0" cellspacing="0"><thead><tr class="ui-datepicker-title-row">'+(T?'<td>'+this._0(a,'weekHeader')+'</td>':'');for(var D=0;D<7;D++){var J=(D+v)%7;var bf=(O.indexOf('DD')>-1?O.replace(/DD/,z[J]):O.replace(/D/,Z[J]));x+='<td'+((D+v+6)%7>=5?' class="ui-datepicker-week-end-cell"':'')+'>'+(!y?'<span':'<a onclick="jQuery.datepicker._W(\'#'+a.id+'\', '+J+');"')+(c?this._c(a,bf):'')+' title="'+z[J]+'">'+ba[J]+(y?'</a>':'</span>')+'</td>'}x+='</tr></thead><tbody>';var V=this._m(r,n);if(r==a.selectedYear&&n==a.selectedMonth)a.selectedDay=Math.min(a.selectedDay,V);var W=(this._Z(r,n)-v+7)%7;var bg=(w?6:Math.ceil((W+V)/7));var t=this._1(new Date(r,n,1-W));for(var X=0;X<bg;X++){x+='<tr class="ui-datepicker-days-row">'+(T?'<td class="ui-datepicker-week-col">'+bc(t)+'</td>':'');for(var D=0;D<7;D++){var M=(S?S.apply((a.input?a.input[0]:null),[t]):[true,'']);var G=(t.getMonth()!=n);var Q=G||!M[0]||(m&&t<m)||(q&&t>q);x+='<td class="ui-datepicker-days-cell'+((D+v+6)%7>=5?' ui-datepicker-week-end-cell':'')+(G?' ui-datepicker-otherMonth':'')+(t.getTime()==U.getTime()&&n==a.selectedMonth?' ui-datepicker-days-cell-over':'')+(Q?' '+this._y:'')+(G&&!I?'':' '+M[1]+(t.getTime()>=u.getTime()&&t.getTime()<=be.getTime()?' '+this._n:'')+(t.getTime()==b.getTime()?' ui-datepicker-today':''))+'"'+((!G||I)&&M[2]?' title="'+M[2]+'"':'')+(Q?(N?' onmouseover="jQuery(this).parent().addClass(\'ui-datepicker-week-over\');" onmouseout="jQuery(this).parent().removeClass(\'ui-datepicker-week-over\');"':''):' onmouseover="jQuery(this).addClass(\'ui-datepicker-days-cell-over\')'+(N?'.parent().addClass(\'ui-datepicker-week-over\')':'')+';'+(!c||(G&&!I)?'':'jQuery(\'#ui-datepicker-status-'+a.id+'\').html(\''+(bd.apply((a.input?a.input[0]:null),[t,a])||'&#xa0;')+'\');')+'" onmouseout="jQuery(this).removeClass(\'ui-datepicker-days-cell-over\')'+(N?'.parent().removeClass(\'ui-datepicker-week-over\')':'')+';'+(!c||(G&&!I)?'':'jQuery(\'#ui-datepicker-status-'+a.id+'\').html(\'&#xa0;\');')+'" onclick="jQuery.datepicker._E(\'#'+a.id+'\','+n+','+r+', this);"')+'>'+(G?(I?t.getDate():'&#xa0;'):(Q?t.getDate():'<a>'+t.getDate()+'</a>'))+'</td>';t.setDate(t.getDate()+1);t=this._1(t)}x+='</tr>'}n++;if(n>11){n=0;r++}x+='</tbody></table></div>'}x+=(c?'<div style="clear: both;"></div><div id="ui-datepicker-status-'+a.id+'" class="ui-datepicker-status">'+(this._0(a,'initStatus')||'&#xa0;')+'</div>':'')+(!l&&!a.inline?g:'')+'<div style="clear: both;"></div>'+(f.browser.msie&&parseInt(f.browser.version)<7&&!a.inline?'<iframe src="javascript:false;" class="ui-datepicker-cover"></iframe>':'');return x},_Y:function(a,b,c,d,h,g,i,l,j){d=(a.rangeStart&&d&&g<d?g:d);var k='<div class="ui-datepicker-header">';if(i||!this._0(a,'changeMonth'))k+=j[b]+'&#xa0;';else{var o=(d&&d.getFullYear()==c);var p=(h&&h.getFullYear()==c);k+='<select class="ui-datepicker-new-month" onchange="jQuery.datepicker._J(\'#'+a.id+'\', this, \'M\');" onclick="jQuery.datepicker._K(\'#'+a.id+'\');"'+(l?this._c(a,this._0(a,'monthStatus')||'&#xa0;'):'')+'>';for(var w=0;w<12;w++){if((!o||w>=d.getMonth())&&(!p||w<=h.getMonth()))k+='<option value="'+w+'"'+(w==b?' selected="selected"':'')+'>'+j[w]+'</option>'}k+='</select>'}if(i||!this._0(a,'changeYear'))k+=c;else{var u=this._0(a,'yearRange').split(':');var m=0;var q=0;if(u.length!=2){m=c-10;q=c+10}else if(u[0].charAt(0)=='+'||u[0].charAt(0)=='-'){m=q=new Date().getFullYear();m+=parseInt(u[0],10);q+=parseInt(u[1],10)}else{m=parseInt(u[0],10);q=parseInt(u[1],10)}m=(d?Math.max(m,d.getFullYear()):m);q=(h?Math.min(q,h.getFullYear()):q);k+='<select class="ui-datepicker-new-year" onchange="jQuery.datepicker._J(\'#'+a.id+'\', this, \'Y\');" onclick="jQuery.datepicker._K(\'#'+a.id+'\');"'+(l?this._c(a,this._0(a,'yearStatus')||'&#xa0;'):'')+'>';for(;m<=q;m++){k+='<option value="'+m+'"'+(m==c?' selected="selected"':'')+'>'+m+'</option>'}k+='</select>'}k+='</div>';return k},_c:function(a,b){return' onmouseover="jQuery(\'#ui-datepicker-status-'+a.id+'\').html(\''+b+'\');" onmouseout="jQuery(\'#ui-datepicker-status-'+a.id+'\').html(\'&#xa0;\');"'},_r:function(a,b,c){var d=a.drawYear+(c=='Y'?b:0);var h=a.drawMonth+(c=='M'?b:0);var g=Math.min(a.selectedDay,this._m(d,h))+(c=='D'?b:0);var i=this._1(new Date(d,h,g));var l=this._b(a,'min',true);var j=this._b(a,'max');i=(l&&i<l?l:i);i=(j&&i>j?j:i);a.selectedDay=i.getDate();a.drawMonth=a.selectedMonth=i.getMonth();a.drawYear=a.selectedYear=i.getFullYear();if(c=='M'||c=='Y')this._s(a)},_s:function(a){var b=this._0(a,'onChangeMonthYear');if(b)b.apply((a.input?a.input[0]:null),[new Date(a.selectedYear,a.selectedMonth,1),a])},_k:function(a){var b=this._0(a,'numberOfMonths');return(b==null?[1,1]:(typeof b=='number'?[1,b]:b))},_b:function(a,b,c){var d=this._l(this._0(a,b+'Date'),null);return(!c||!a.rangeStart?d:(!d||a.rangeStart>d?a.rangeStart:d))},_m:function(a,b){return 32-new Date(a,b,32).getDate()},_Z:function(a,b){return new Date(a,b,1).getDay()},_L:function(a,b,c,d){var h=this._k(a);var g=this._1(new Date(c,d+(b<0?b:h[1]),1));if(b<0)g.setDate(this._m(g.getFullYear(),g.getMonth()));return this._M(a,g)},_M:function(a,b){var c=(!a.rangeStart?null:this._1(new Date(a.selectedYear,a.selectedMonth,a.selectedDay)));c=(c&&a.rangeStart<c?a.rangeStart:c);var d=c||this._b(a,'min');var h=this._b(a,'max');return((!d||b>=d)&&(!h||b<=h))},_7:function(a){var b=this._0(a,'shortYearCutoff');b=(typeof b!='string'?b:new Date().getFullYear()%100+parseInt(b,10));return{shortYearCutoff:b,dayNamesShort:this._0(a,'dayNamesShort'),dayNames:this._0(a,'dayNames'),monthNamesShort:this._0(a,'monthNamesShort'),monthNames:this._0(a,'monthNames')}},_g:function(a,b,c,d){if(!b){a.currentDay=a.selectedDay;a.currentMonth=a.selectedMonth;a.currentYear=a.selectedYear}var h=(b?(typeof b=='object'?b:this._1(new Date(d,c,b))):this._1(new Date(a.currentYear,a.currentMonth,a.currentDay)));return this.formatDate(this._0(a,'dateFormat'),h,this._7(a))}});function K(a,b){f.extend(a,b);for(var c in b)if(b[c]==null||b[c]==undefined)a[c]=b[c];return a};function Y(a){return(a&&((f.browser.safari&&typeof a=='object'&&a.length)||(a.constructor&&a.constructor.toString().match(/\Array\(\)/))))};f.fn.datepicker=function(a){var b=Array.prototype.slice.call(arguments,1);if(typeof a=='string'&&(a=='isDisabled'||a=='getDate'))return f.datepicker['_'+a+'Datepicker'].apply(f.datepicker,[this[0]].concat(b));return this.each(function(){typeof a=='string'?f.datepicker['_'+a+'Datepicker'].apply(f.datepicker,[this].concat(b)):f.datepicker._N(this,a)})};f.datepicker=new R();f(document).ready(function(){f(document.body).append(f.datepicker.dpDiv).mousedown(f.datepicker._V)})})(jQuery);

$.fn.setHeight = function (h, min, max) {
	h = h < min ? min : h;
	h = h > max ? max : h;
	return $(this).height(h);
}

$.fn.resizeImage = function(w, h) {
	var iw = $(this).width();
	var ih = $(this).height();
	if (iw <= w && ih <= h) {
		return $(this);
	}
	if (!ih || !iw) {
		return $(this);
	}
	var k = w/iw < h/ih ? (w/iw) : (h/ih) ;
	return $(this).width(k * iw).height(k * ih);
}

$.fn.loadImage = function (src) {
	var i = $(this);
	if (i.attr('src') == src) {
		return i;
	}
	i.attr('src', WbsData.get('url.common', '/common/') + 'img/loading.gif');
	var img = $('<img src="' + src + '" />');
	img.load(function () {
		i.attr('src', $(this).attr('src'));
		
	});
	return i;
}

function AddInput(obj) {
	$('<input type = "text" /><a class="delete_email" href="javascript:void(0)" onClick="DeleteInput(this)">Удалить</a><br />').insertBefore(obj);
	$(obj).prevAll("input:first").select();
}

function DeleteInput(obj) {
	$(obj).prev().remove();
	$(obj).next().remove();
	$(obj).remove();
}

var WbsEditUser = newClass(null, {
	constructor: function(config) {
		this.config = config;
		if (this.config.editable == undefined) {
			this.config.editable = true;
		}
		this.main_fields = config.main_fields || new Array();
		this.showAll = config.showAll || false;
		this.requiredOnly = config.requiredOnly || false;
		this.editAll = config.editAll || false;
		this.noImage = config.noImage || false;
		this.contact = config.contact;
		document.contact = config.contact;
		this.groups = new Array();
		
		for (var i = 0; i < config.groups.length; i++) {
			this.groups[i] = {
					id: config.groups[i][0],
					fields: new Array(),
					edit: this.config.editable ? (config.edit || false) : false
			};
			for (var j = 0; j < config.groups[i][1].length; j++) {
				var fields = config.groups[i][1][j];
				this.groups[i].fields[j] = {
						id: fields[0], 
						name: fields[1], 
						type: fields[2], 
						value: fields[3], 
						required: fields[4]
				};
				if (fields[2] == 'MENU') {
					this.groups[i].fields[j].items = fields[5];
				} else if (fields[2] == 'IMAGE') {
					this.groups[i].fields[j].size = fields[5];
				} else if (fields[2] == 'TEXT' || fields[2] == 'VARCHAR'){
					this.groups[i].fields[j].max_length = fields[5] != undefined ? fields[5] : 0;
				} else {
					this.groups[i].fields[j].max_length = 0;
				}
				if (fields[6]) {
					this.groups[i].fields[j].comment = fields[6]; 
				}
			}
		}
		
		for (i = 0; i < this.groups.length; i++) {
			this.prepareGroup(this.groups[i]);
		}
		
		if (this.config.editable) {
			$("#display_name").click(function () {
				this.groups[0].edit = true;
				this.groups[0].showAll = true;
				this.renderGroup(this.groups[0]);				
				$("#edit_" + this.main_fields[0] + " .edit input").select();
			}.bind(this));
		}
		
		this.render();
	},

	prepareGroup: function(group) {
		var g = $("#" + group.id);
		for (i = 0; i < group.fields.length; i++) {
			var f = group.fields[i];
			var div = $("#" + f.id);
			if (!div.length) {
				div = $('<div id=' + f.id + ' class="field"></div>');
				if (f.id != this.config.photoField) {
					div.append('<div class="label">' + (f.name ? f.name + ':' : '&nbsp;') + '</div>');
				}
				var field = $('<div class="edit"></div>');
				if (this.isMain(f.id, true)) {
					
				} else if (this.isMain(f.id, false)){
					div.removeClass('field').addClass('l');
					if (f.type == 'EMAIL') {
						div.addClass('email');
						div.find("div.label").css('width', 'auto');
					}
					div.append(field).insertBefore("#editMain");
				} else {
					g.append(div.append(field));
				}
			} else {
				var field = div.children(".edit");
				if (div.children("div.label").length > 0) {
					div.children("div.label").html(f.name + ':');
				}
			}
			field = this.prepareField(field, f, group);
			var _this = this;
			if (this.config.editable && (f.type != 'EMAIL' || !this.config.disableEmail)) {
				var divEdit = $('<div id="edit_' + f.id + '" class="e field' + (this.isMain(f.id) ? ' large' : '') + '" style="display:none"></div>');
				if (f.id != this.config.photoField) {
					divEdit.append('<div class="label">' +  f.name  + (f.required == 1 ? '<font color="red">*</font>' : "") + (f.name ? ':' : '&nbsp;') + '</div>');
				} 
				fieldEdit = this.createEditField(f, group);
				divEdit.append(fieldEdit).hide();
				var links = $('<div class="field"><div class="label">&nbsp;</div></div>');
				var buttons = $('<div class="field_controls"></div>');
				
				var save = $('<input type="button" value="Сохранить" />').click(function(){
					_this.saveField(this.group, this.field);
				}.bind({group: group, field: f}));
				var cancel = $('<input type="button" value="Отмена" />').click(function () {
					_this.cancelField(this.group, this.field);
				}.bind({group: group, field: f}));
				if (this.isMain(f.id)) {
					$("#editMain").append(divEdit);
				} else {
					if (f.type != 'IMAGE') {
						links.hide().addClass('buttons').append(buttons.append(save).append(cancel));;
					}
					divEdit.append(links).insertAfter(div);									
				}
			}
			if ($("#" + f.id).hasClass("email")) divEdit.find("div.edit > input").addClass("email");			
		}
		if (this.config.editable) {
			$(g).find(".click").click(function () {
					group.edit = true;
					group.showAll = true;
					_this.renderGroup(group);
					if (typeof(_this.config.onEditGroup) == 'function') {
							_this.config.onEditGroup();	
					}
			});
		}
		var links = $('<div class="field"><div class="label">&nbsp;</div></div>');
		var buttons = $('<div class="field_controls"></div>');
		var save = $('<input type="button" value="Сохранить" />').click(function(){this.save(group);}.bind(this));
		var cancel = $('<input type="button" value="Отмена" />').click(function () {
			group.edit = false;
			this.cancelGroup(group);
		}.bind(this));
		
		links.hide().addClass('buttons');
		links.append(buttons.append(save).append(cancel));
		g.append('<div class="errors" style="display:none; clear: left;"><div class="label">&nbsp;</div><div class="edit" /></div>');
		g.append(links);
	},
	
	cancelGroup: function (group) {
		group.edit = false;
		this.renderGroup(group);
		var g = $("#" + group.id);
		if (group.id == 'CONTACT') {
			$("#editMain").hide();
		}
		g.find("div.errors > div.edit").html("");
		g.find("div.errors").hide();
		g.children(".error").removeClass("error");
		g.find("div.field > div.buttons").hide();
		if (this.config.onCancelGroup) {
			if (this.config.onCancelGroup[group.id]) {
				this.config.onCancelGroup[group.id]();
			} else if (typeof(this.config.onCancelGroup) == 'function') {
				this.config.onCancelGroup();
			}
		}		
	},
	
	cancelField: function (group, field) {
		if (this.isMain(field.id)) {
			for (var j = 0; j < group.fields.length; j++) {
				if (this.isMain(group.fields[j].id)) {
					group.fields[j].edit = false;
					this.renderField(group, group.fields[j]);
				}
			}
			$("#editMain").hide();
		} else {
			field.edit = false;
			this.renderField(group, field);			
		}
	},	
	
	cancelAll: function () {
		for (var i = 0; i < this.groups.length; i++) {
			this.cancelGroup(this.groups[i]);
		}
		$("#editMain").hide();
		$("#bottom_save").hide();
	},
	
	createEditField: function (f, group) {
		if (f.type == 'VARCHAR' && (f.value && f.value.length > 75)) {
			f.type = 'TEXT';
		}
		var div = $('<div class="edit"></div>');
		var edit = "";
		if (f.type == 'IMAGE') {
			edit = $('<img src="' + WbsData.get('url.common', '/common/') + 'img/loading.gif" />');
		} else if (f.type == 'MENU') {
			edit = $('<select class="fix-width"></select>');
			if (f.id == 'CF_ID') {
				edit.append('<option value="">&lt;никакая&gt;</option>');
			} else if (!this.config.noSelect && !f.required) { 
				edit.append('<option value="">&lt;выбрать&gt;</option>');
			}
			for (var i = 0; i < f.items.length; i++) {
				var item = f.items[i];
				var item_value = item.value ? item.value.replace(/</g, '&lt;').replace(/>/g, '&gt;') : item;
				if (item.offset) {
					for (var k = 0; k < item.offset; k++) {
						item_value = "&nbsp;" + item_value;
					}
				}
				item_value = item_value.substr(0, 50);
				edit.append('<option value="' + (item.key ? item.key : item) + '"' + (item.disabled ? ' disabled="disabled"' : '') + '>' + item_value + "</option>");
			}
		} else if (f.type == 'TEXT') {
			div.width("70%");
			edit = $("<textarea></textarea>");
		} else if (f.type == 'COUNTRY') {
			edit = $('<select class="fix-width"></select>');
			if (!f.required) {
				edit.append('<option value="">&lt;выбрать&gt;</option>');
			}
			var countries = WbsData.get('countries');
			for (var code in countries) {
				edit.append('<option value="' + code + '">' + countries[code] + "</option>");
			}
		} else if (f.type == 'CHECKBOX') {
			edit = $('<input type = "checkbox" />').css("width", "auto").css("margin-left", "0");
		} else if (f.type == 'SPAN') {
			edit = $('<span></span>');
		} else if (f.type == 'EMAIL') {
			var ss = '<input type = "text" /><br />';
			for (i = 1; i < f.value.length; i++) {
				ss += '<input type = "text" /><a class="delete_email" href="javascript:void(0)" onClick="DeleteInput(this)">Удалить</a><br />';
			}
			ss += '<a onfocus="blur(this)" href="javascript:void(0)" class="add_email" onClick="AddInput(this)">Добавить еще</a>';
			edit = ss;
		} else {
			edit = $('<input type = "text" />');
			
			if (f.type == 'DATE') {
				edit.addClass('DateField');
			}
		}
		var _this = this;
		if (f.max_length != undefined && f.max_length) {
			if (edit.blur) {
				edit.blur(function () {
					var l = edit.val().length;
					if (l > f.max_length) {
						_this.showFieldError({id: f.id, text: 'Количество символов не может превышать ' + f.max_length + '.'});
					}
				});
			}
		}
		div.append(edit);
		if (f.comment) {
			div.append('<span class="small">' + f.comment + '</span>')
		}
		return div;
	},
	
	viewAll: function(o) {
		this.requiredOnly = !this.requiredOnly;
		this.render();
	},
	
	prepareField: function(field, f, group) {
		if (f.type == 'IMAGE') {
			field.append('<img src="' + WbsData.get('url.common', '/common/') + 'img/loading.gif" /><p><br /></p>');	
		} else {
			if (this.config.editable) {
				$(field).attr("title", "Click to edit");
			}
			if (f.type == 'TEXT' || (f.type == 'VARCHAR' && f.value != null && f.value.length > 75)) {
				$(field).css('width', '70%');
			}
			var _this = this; 
			if (f.type != 'EMAIL' && this.config.editable) {
				$(field).click(function (e) {
					var t = e.target || e.srcElement;
					if ((t.tagName.toLowerCase() == 'img' && t.className != 'e') || t.tagName.toLowerCase() == 'a') {
						return true;
					}					
					if (f.type == 'SPAN') {
						return false;
					}
					if (f.edit == 'undefined') {
						f.edit = true;
					}
					f.edit = true;
					_this.renderField(group, f);
					if (_this.isMain(f.id)) {
						group.edit = true;
						group.showAll = true;
						_this.renderGroup(group);				
					}
					$("#edit_" + f.id + " div.buttons").show();
					$("#edit_" + f.id + " div.edit").children().select();
				});
			}
		}
		return field;
	},
	
	render: function (group) {
		if (group != null && group.id) {
			this.renderGroup(group);
		} else {
			for (var i = 0; i < this.groups.length; i++) {
				this.renderGroup(this.groups[i]);	
			}
		}
	},
	
	renderField: function (group, field) {
		if ((group.edit && !group.showAll) && this.requiredOnly && !(field.required > 0) && group.id != this.groups[0].id) {			
			$("#edit_" + field.id).hide();
			$("#" + field.id).hide();
			return ;
		}
		
		if (this.noImage && field.type == "IMAGE") {
			$("#edit_" + field.id).hide();
			$("#" + field.id).hide();
			return;
		}
		
		if (field.edit) {
			if (group.edit) {
				$("#edit_" + field.id).children('div.buttons').hide();
			}
			if ($("#edit_" + field.id).is(":visible")) {
				return;
			}
			this.setValue(group, field);
			if (this.isMain(field.id)) {
				$("#editMain").show();
			}
			if (field.type != 'EMAIL' || !this.config.disableEmail) {
				$("#" + field.id).hide();
			}
			
			$("#edit_" + field.id).show();
			if (field.type == 'IMAGE') {
				this.setUpload(group, field);
			}			
		} else {
			this.setValue(group, field);
			$("#edit_" + field.id).hide();
			if (this.showAll == false && (field.value == null || field.value.length == 0)) {
				if (field.id != this.config.photoField && field.type != 'CHECKBOX' && field.id != 'CF_ID') {		
					$("#" + field.id).hide();
				} else {
					$("#" + field.id).show();	
				}
			} else {
				$("#" + field.id).show();
			}			
		}
	},
	
	renderGroup: function(group) {
		if (group == null || !group) {
			return false;
		}
		var g = $("#" + group.id);
		if (group.fields.length == 0) {
			g.hide();
			return true;
		}
		if (!group.edit) {
			var empty = 0;
			for (var i = 0; i < group.fields.length; i++) {
				group.fields[i].edit = group.edit;
				this.renderField(group, group.fields[i]);
				if (!group.fields[i].value) {
					empty++;
				}
			}
			
			if (this.requiredOnly == true && empty == group.fields.length) {
			//	$("#" + group.id).hide();
			}
			
			$(g).children(".buttons").hide();
		} else {
			var empty = 0;
			for (var i = 0; i < group.fields.length; i++) {
				group.fields[i].edit = group.edit;
				this.renderField(group, group.fields[i]);
				if (i == 0) {
					$("#edit_" + group.fields[i].id + " div.edit").children().select();
				}
				if (!group.fields[i].value && group.fields[i].required == "0") {
					empty++;
				} 
			}
			if (this.requiredOnly == true && empty == group.fields.length) {
				//$("#" + group.id).hide();
			} else {
				$("#" + group.id).show();
			}
			if (!this.editAll) {
				$(g).children(".buttons").show();
			} else {
				$(g).children(".buttons").hide();
			}
			if (this.config.onEditGroup && this.config.onEditGroup[group.id]) {
				this.config.onEditGroup[group.id]();
			}
		}
	},
	
	isMain: function (id, super_main) {
		var s = super_main | false;
		var a = s ? this.config.super_main_fields : this.main_fields;
		if (!a) {
			return false;
		}
		for (var i = 0; i < a.length; i++) {
			if (a[i] == id) return true;
		}
		return false;
	},
	
	truncate: function (str, n) {
		var a = str.toString().split(" ");
		for (var i = 0; i < a.length; i++) {
			if (a[i].length > n) {
				var s = "";
				while (a[i].length > n) {
					s = s + htmlspecialchars(a[i].substr(0, n)) + ($.browser.mozilla ? "<wbr />" : "&shy;");
					a[i] = a[i].substr(n); 
				}
				a[i] = s + htmlspecialchars(a[i]);
			} else {
				a[i] = htmlspecialchars(a[i]);
			}
		}
		return a.join(" ");
	},
	
	setValue: function (g, f) {
		var v = f.value ? f.value : "";
		if (f.type == 'TEXT') {
			setTimeout(function () {
				$("#" + f.id + " > div.edit").html(this.truncate(v, 20));
			}.bind(this), 10);

			$("#" + f.id).width("100%");
			$("#" + f.id + " > .edit").width("70%");
			$("#edit_" + f.id + "> div.edit > textarea").html(v.replace(/</gi, "&lt;"));
			$("#edit_" + f.id + "> div.edit > textarea").setHeight($("#" + f.id + " > div.edit").outerHeight() + 5, 50, 500);
			if ($("#" + f.id + " > .edit").width() > 0) {
				$("#edit_" + f.id + "> div.edit > textarea").width($("#" + f.id + " > .edit").width());
			}
		}
		else if (f.type == 'VARCHAR') {
			setTimeout(function () {
				$("#" + f.id + " > div.edit").html(this.truncate(v, 20));
			}.bind(this), 10);
			if (g.id != 'CONTACT') {
				$("#" + f.id).width("100%");
				if (f.value != null && f.value.length > 75) {
					$("#" + f.id + " > .edit").width("70%");
				}
			}
			$("#edit_" + f.id + "> div.edit > input").val(v);			
		}
		else if (f.type == 'MENU') {
			if (f.id == 'CF_ID' && !v) {
				$("#" + f.id + " > div.edit").html('&lt;никакая&gt;');
			} else {
				$("#" + f.id + " > div.edit").html(v);
			}
			for (var j = 0; j < f.items.length; j++) {
				if (f.items[j].key != null && f.items[j].key == v) {
					$("#" + f.id + " > div.edit").text(f.items[j].value);
				}
			}
			$("#edit_" + f.id + "> div.edit > select").val(v);
		}
		else if (f.type == 'COUNTRY') {
			if (v) {
				var countries = WbsData.get('countries');
				$("#" + f.id + " > div.edit").html('<img class="e" src="' + WbsData.get('url.common', '/common/') + 'img/flag/' + v + '.png" /> ' + countries[v]);
			} else {
				$("#" + f.id + " > div.edit").html('');
			}
			$("#edit_" + f.id + "> div.edit > select").val(v);
		}		
		else if (f.type == 'IMAGE') {
			var full_v = v;
			if (v != null && v.length > 0) {
				v = v + "&size=" + (f.size != undefined ? f.size : "96");
				
				if (v == $("#edit_" + f.id + " > div.edit img").attr('src')) {
					return;
				}
			}
			
			if (f.id == this.config.photoField) {
				if (this.config.editable) {
					$("#" + f.id).parent().mouseover(function () {
						$("#edit_" + f.id).show();
						$("#" + f.id).hide();
					}).bind('mouseleave', function () {
						if (!g.edit) {
							setTimeout(function () {
								$("#" + f.id).show();
								$("#edit_" + f.id).hide();
							}, 2000);
						}
					});
				}

				var div = $("#edit_" + f.id + " > div.edit");
				div.unbind();
				div.find('p').remove();
				
				if (v && v != null && v.length > 0) {
					var _this = this;
					$("#" + f.id + " > div.edit img").removeAttr("width").removeAttr("height").attr('src', v).show();
					var img = new Image();
					img.src = v;
					$(img).load(function () {
						var i = $("#edit_" + f.id + " > div.edit img");
						i.removeAttr("width").removeAttr("height").attr('src', $(this).attr('src')).show();						
						if ($("#edit_" + f.id + "> div.edit a.link").length) {
							$("#edit_" + f.id + "> div.edit a.link").attr('href', full_v);
						} else {
							var a = $('<a class="link" target="_blank" href="?mod=users&act=thumb&fid=' + f.id + '&id=' + _this.config.contact + '"></a>').append(i.clone(true));
							i.replaceWith(a);
						}
					});
					div.append($('<p style="width:105px;text-align:center"><a href="javascript:void(0)">Изменить фото</a></p>')
					.click(function(){
						$('#popup2').wbspopup({
							url: 'index.php?mod=users&act=image&C_ID='+document.contact+'&CF_ID='+f.id+'&type=change',
							width: 590,
							height: 440,
							iframe: true,
							
							onClose: function(param){
								if (param && param.deleteImage) {
									this.f.value = '';
									this.self.setValue(this.g, this.f);
								}
							}.bind({self:this, 'f': f, 'g': g}),
							onSuccess: function(response) {
								if (response.url) {
									this.f.value = response.url.replace(/amp;/, '').replace(/amp;/, '');
									this.self.setValue(this.g, this.f);
								}
							}.bind({self:this, 'f': f, 'g': g})
							
						});
						return false;
					}.bind(this)));
				} else {
					$("#" + f.id + " > div.edit > img").attr('src',WbsData.get('url.img') + 'empty-contact' + (this.config.type >=2 ? this.config.type : '') + '.gif');
					if ($("#edit_" + f.id + " > div.edit a.link").length) {
						$("#edit_" + f.id + " > div.edit a.link").replaceWith($("#edit_" + f.id + " > div.edit img"));
					}
					$("#edit_" + f.id + " > div.edit > img").attr('src', WbsData.get('url.img') + 'empty-contact' + (this.config.type >=2 ? this.config.type : '') + '.gif');
					div.append($('<p class="add-photo"><a href="javascript:void(0)">Добавить фото</a></p>'))
					.click(function(){
						$('#popup2').wbspopup({
							url: 'index.php?mod=users&act=image&C_ID='+document.contact+'&CF_ID='+f.id+'&type=add',
							width: 590,
							height: 440,
							opacity: 0.1,
							iframe: true,
							onOpenComplite: function(){
							},
							onSuccess: function(response) {
								if (response.url) {
									this.f.value = response.url.replace(/amp;/, '').replace(/amp;/, '');
									this.self.setValue(this.g, this.f);
								}
							}.bind({self:this, 'f': f, 'g': g}),

							onClose: function(){
							}
							
						});
						return false;
					}.bind(this));					
				}
				return ;
			}
			
			$("#" + f.id + " > div.edit").unbind();
			$("#edit_" + f.id + " > div.edit").unbind();
			$("#edit_" + f.id + " > div.edit img").unbind();
			$("#edit_" + f.id + " > div.edit img").nextAll().remove();		
			$(document).unbind('click');
			if (v && v != null && v.length > 0) {			
				$("#" + f.id + " > div.edit img").removeAttr("width").removeAttr("height").attr('src', v).show();
		
				$("#" + f.id + " > div.edit").mouseover(function () {
					$("#" + f.id).hide();
					$("#edit_" + f.id).show();
					if (f.id != this.config.photoField) {
						this.setUpload(g, f);
					}
				}.bind(this));
				
				var img = new Image();
				img.src = v;
				$(img).load(function () {
					$("#edit_" + f.id + " > div.edit img").removeAttr("width").removeAttr("height").attr('src', $(this).attr('src')).show();
					if (img.width >= f.size || img.height >= f.size) {
						$("#edit_" + f.id + " > div.edit img").attr('_id', f.id).attr('_url', f.value).click(zoom);
						$("#edit_" + f.id + " > div.edit").css("cursor", "pointer");
					} else {
						$("#edit_" + f.id + " > div.edit").css("cursor", "default");
					}
					
					var i = $("#edit_" + f.id + " > div.edit img");
					var a = $('<a class="link" target="_blank" href="?mod=users&act=thumb&fid=' + f.id + '&id=' + document.contact + '"></a>').append(i.clone(true));
					if ($("#edit_" + f.id + " > div.edit > a.link").length) {
						$("#edit_" + f.id + " > div.edit > a.link").replaceWith(a);
					} else {
						$("#edit_" + f.id + " > div.edit > img").replaceWith(a);
					}
				});
				
				var div = $("#edit_" + f.id + " > div.edit");
				if (div.children().length == 1) {
					var del = $('<a id="delete_' + f.id + '" href="#">Удалить</a>').click(function () {
							this.deleteImage(g, f);
					}.bind(this));
					var replace = $('<a class="upload" id="upload_' + f.id + '" href="#">Заменить</a>');
					if (f.id == this.config.photoField) {
						div.append($('<p style="width:100px;text-align:center"><a href="javascript:void(0)">Заменить</a></p>'));
					} else {
						div.append($('<p></p>').append(replace).append('<span style="color:#0043A7">&nbsp;|&nbsp;</span>').append(del));
					}
					div.ready(function () {
						if ($("#edit_" + f.id).is(":visible")) {
							this.setUpload(g, f);
						}
					}.bind(this));
				}
			} else {
				if (f.id == this.config.photoField) {
					$("#" + f.id + " > div.edit > img").attr('src','img/empty-contact' + (this.config.type >=2 ? this.config.type : '') + '.gif');
					if (this.config.editable) {
						$("#edit_" + f.id + " > div.edit > img").attr('src', 'img/empty-contact' + (this.config.type >=2 ? this.config.type : '') + '.gif');
						$("#" + f.id + " > div.edit").mouseover(function () {
							$("#edit_" + f.id).show();
							$("#" + f.id).hide();
							this.setUpload(g, f);					
						}.bind(this));
					}
				} else {
					$("#edit_" + f.id + " > div.edit a.link").replaceWith($("#edit_" + f.id + " > div.edit a.link img"));
					$("#" + f.id + " > div.edit img").hide().attr('src', WbsData.get('url.common', '/common/') + 'img/loading.gif');
					$("#edit_" + f.id + " > div.edit img").hide().attr('src', WbsData.get('url.common', '/common/') + 'img/loading.gif');
				}
				var div = $("#edit_" + f.id + " > div.edit");
				if (div.children().length == 1) {
					div.append($('<p style="padding-top:0" align="center"><a class="upload" id="upload_' + f.id + '" href="#">Загрузить изображение</a></p>'));
				} else {
					div.find("p").replaceWith($('<p align="center"><a class="upload" id="upload_' + f.id + '" href="#">Загрузить изображение</a></p>'));
				}
				if ($("#edit_" + f.id).is(":visible")) {
					this.setUpload(g, f);
				}
			}
		}
		else if (f.type == 'CHECKBOX') {
			$("#" + f.id + " > div.edit").html(v > 0 ? "Да" : "Нет");
			$("#edit_" + f.id + "> div.edit > input").attr("checked", (v > 0 ? "checked" : ""));
		}
		else if (f.type == 'SPAN') {
			$("#" + f.id + " > div.edit").html(v);
			$("#edit_" + f.id + " > div.edit > span").html(v);
		}
		else if (f.type == 'EMAIL'){
			var _this = this;
			if ((!v || v == '0') && this.config.emptyValue) {
				var h = this.config.emptyValue;
			} else {
				var h ='';
				for (var k = 0; k < v.length; k++) {
					h += '<div>' + v[k];
					if (this.config.compose_mail) {
						h += ' <a class="compose-message" href="?mod=users&act=email&mode=contacts&contact_id=' + this.config.contact + '&email=' + v[k] + '">Написать письмо</a>';
					}
					h += '</div>';
				}
			}
			$("#" + f.id + " > div.edit").html(h);
			if (this.config.editable && !this.config.disableEmail) {
				$("#" + f.id + " > div.edit > div").each(function (i) {
					$(this).click(function (e) {
						var t = e.target || e.srcElement;
						if (t.tagName.toLowerCase() == 'a') {
							location.href = t.href;
							return false;
						}
						f.edit = true;
						_this.renderField(g, f);
						if (_this.isMain(f.id)) {
							group.edit = true;
							group.showAll = true;
							_this.renderGroup(g);				
						}
						$("#edit_" + f.id + " div.buttons").show();
						$("#edit_" + f.id + " div.edit input:eq(" + i + ")").select();
					});
				});
			
				$("#edit_" + f.id + "> div.edit input").each(function (i) {
					if (i > 0 && i >= v.length) {
						$(this).prev().remove();
						$(this).next().remove();
						$(this).remove();
					} else {
						$(this).val(v[i]);
					}
				})
			}
		}
		// MOBILE
		else if (f.type == 'MOBILE') {
			var vv = ((!v || v == '0') && this.config.emptyValue) ? this.config.emptyValue : htmlspecialchars(v);
			if (v) {
				var a = $('<a class="send-sms" href="javascript:void(0)" title="Отправить SMS">Отправить SMS</a>');
				a.click(function () {
					$('#popup').wbsPopup({
				       width: 600,
				       height: 'auto',
				       backgroundColor: '#000000',
				       opacity: 0.1,
				       url: "?mod=contacts&act=sendsms&mode=folders&users=",
				       loadComplite: function () {
							$('#popup').wbsPopupRender();
							$('.sendsms_wrapper').wrap('<div class="wbs-dlg-content"></div>');
							$('#popup').prepend(
								'<div class="wbs-dlg-header">'+
									'<div class="label">Отправить SMS</div>'+
									'<div class="close-btn"><img width="16" height="16" src="../common/templates/img/close.gif" /></div>'+
								'</div>'
							);
							$('#popup').append(
								'<div class="wbs-dlg-footer">'+
									'<input id="doSendsmsBtn" class="wbs-dlg-button" type="button" value="Отправить"/>'+
									'<input class="wbs-dlg-button" type="button" value="Отмена" onclick="$(\'#popup\').wbsPopupClose()" />'+
								'</div>'
							);
							$("#To").val(v);
							$('#doSendsmsBtn').click(function(){
								//alert($("#message").val());
								if (!$("#To").val().replace(/^\s*(.*?)\s*$/,"$1")) {
									$('#error_block').html("Введите номер телефона").show();
									$('#To').focus();
								} else if (!$("#message").val().replace(/^\s*(.*?)\s*$/,"$1")) {
									$('#error_block').html("Пожалуйста, введите текст сообщения");
									$('#error_block').show();
									$('#message').focus();
								} else {
									$.post("?mod=contacts&act=sendsms&mode=folders",
										{"To": $("#To").val() + "", "message": $("#message").val() + ""},
										function (response) {
											try {
												var r = eval("(" + response + ")");
												if (r.Error) {
													$('#error_block').html(r.Error).show();
												} else {
													$("#onload-message").show().html('SMS было успешно отправлено');
													$("#onload-message").fadeOut(5000, function () {$(this).hide()});
													$("#popup").wbsPopupClose();
												}
											} catch (e) {
												$('#error_block').html(response);
												$('#error_block').show();												
											}
										}
									);
								}
							});
							
							$("#popup .close-btn").click(function () {
								$("#popup").wbsPopupClose();
							});					
				       }		       
					});
					return false;	
				});	
				$("#" + f.id + " > div.edit").html(vv);
				if (!this.config.disableEmail) {
					$("#" + f.id + " > div.edit").append(' ');
					$("#" + f.id + " > div.edit").append(a);
				}
			} else {
				$("#" + f.id + " > div.edit").html(vv);
			}

			//$("#" + f.id + " > div.edit").html(vv);			
			$("#edit_" + f.id + "> div.edit > input").val(v);
		}	
		else if (f.type == 'URL') {
			var vv = ((!v || v == '0') && this.config.emptyValue) ? this.config.emptyValue : htmlspecialchars(v);
			if (v) {
				vv += '<a class="open-url" target="_blank" href="' + v + '"><img src="../UG/img/new_window_icon.gif" /></a>';
			}
			$("#" + f.id + " > div.edit").html(vv);			
			$("#edit_" + f.id + "> div.edit > input").val(v);
		}			
		else {
			$("#" + f.id + " > div.edit").html(((!v || v == '0') && this.config.emptyValue) ? this.config.emptyValue : htmlspecialchars(v));
			$("#edit_" + f.id + "> div.edit > input").val(v);
		}
	
	},
	
	setUpload: function (g, f) {
			
			if (f.id == this.config.photoField) {
				var elem = $("#CURRENT_PHOTO"); 
			} else {
				var elem = $("#edit_" + f.id);
			}
			elem.bind("mouseleave", function (e) {
				if (!g.edit && !$.browser.safari) {
					setTimeout(function () {
							if ((f.value != null && f.value.length > 0) || (f.id == this.config.photoField)) {
								$("#" + f.id).show();
							}
							$("#edit_" + f.id).hide();
					}.bind(this), 1000);
				}
			}.bind(this));
			if ($("#upload_" + f.id).attr("upload") != "1") {
				var uploadComplete = function (file, response) {
						response = eval('(' + response + ')');
						if (response.status == 'OK') {
							f.value = response.files[0].url.replace(/&amp;/g, '&');
							this.setValue(g, f);
						} else {
							this.showError(response.error[0], g);
							this.setValue(g, f);
						}
				}.bind(this);						
				new Ajax_upload("#upload_" + f.id, {
					flt: "left",
					action: "?mod=users&act=image&ajax=1&C_ID=" + encodeURIComponent(document.contact) + (f.id == this.config.photoField ? "&avatar=1" : ""), 
					name: f.id,
					onSubmit: function () {
						$("#edit_" + f.id + " > div.edit > img").removeAttr("width").removeAttr("height").show().attr('src', WbsData.get('url.common', '/common/') + "img/loading.gif");
					}.bind(this),
					onComplete: uploadComplete
				});
				$("#upload_" + f.id).attr("upload", "1");
			}		
	},
	
	showError: function(error, group) {
		if (error.ids)  {
			var g = $("#edit_" + error.ids[0]).parents(".group");
		} else if (group == null) {
			var g = $("#" + error.id).parent();
		} else {
			var g = $("#" + group.id);
		}
		g.find("> div.errors").show();
		g.find("> div.errors > div.edit").append(error.text + "<br />");
		if (error.ids) {
			for (var i = 0; i < error.ids.length; i++) {
				$("#edit_" + error.ids[i]).addClass("error").click(function () {
					g.find("> div.errors").hide();
					g.find("> div.errors > div.edit").html("");
					for (var j = 0; j < error.ids.length; j++) {
						$("#edit_" + error.ids[j]).removeClass("error");
					}
				});
			}
		} else {
			$("#edit_" + error.id).addClass("error").click(function () {
				g.find("> div.errors").hide();
				g.find("> div.errors > div.edit").html("");
				$(this).removeClass("error");
			});
		}
		if (this.editAll) {
			var id = $("#bottom_save").length ? "#bottom_save" : "#block_save_main";
			if ($(id + " div.error").length) {
				$(id + " div.error").show();
			} else {
				$(id).prepend('<div class="error">Пожалуйста, исправьте ошибки.</div>');
			}
		}
	},
	
	showFieldError: function(error) {
		if (error.ids) {
			for (var i = 0; i < error.ids.length; i++) {
				$("#edit_" + error.ids[i] + " > div.edit :input").addClass("error");
				$("#edit_" + error.ids[i]).addClass("error").click(function () {
					var g = $("#edit_" + error.ids[error.ids.length - 1]);
					g.find("> div.errors").hide();
					g.find("> div.errors > div.edit").html("");
					for (var j = 0; j < error.ids.length; j++) {
						$("#edit_" + error.ids[j]).removeClass("error");
					}
				});
			}			
			error.id = error.ids[error.ids.length - 1];
		}		
		
		var f = $("#edit_" + error.id);
		var er = $("#edit_" + error.id + " > div.errors > div.edit");
		if (er.length > 0) {
			er.html(error.text).parent().show();
		} else {
			$('<div class="field errors" style="padding:0"><div class="label">&nbsp;</div><div class="edit">' + error.text + '</div>').insertAfter($("#edit_" + error.id + " > div.edit"));
		}	
		if (error.i != null) {
			$("#edit_" + error.id + " > div.edit > input:eq(" + error.i + ")").addClass("error");
		} else {
			$("#edit_" + error.id + " > div.edit :input").addClass("error");
		}
		f.addClass("error").click(function () {
			f.find("div.errors").hide();
			$(this).removeClass("error");
		});
		
		if (this.editAll) {
			var id = $("#bottom_save").length ? "#bottom_save" : "#block_save_main";
			if ($(id + " div.error").length) {
				$(id + " div.error").show();
			} else {
				$(id).prepend('<div class="error">Пожалуйста, исправьте ошибки.</div>');
			}
		}		
	},

	
	getValue: function (f) {
		if (f.type == 'IMAGE') {
			return null;
		} else if (f.type == 'TEXT') {
			return $("#edit_" + f.id + " > div.edit > textarea").val();
		} else if (f.type == 'CHECKBOX') {
			return $("#edit_" + f.id + " > div.edit > input").is(":checked") ? 1 : 0;
		} else if (f.type == 'MENU' || f.type == 'COUNTRY') {
			return $("#edit_" + f.id + " > div.edit > select").val();
		} else if (f.type == 'EMAIL') {
			var a = new Array();
			$("#edit_" + f.id + " > div.edit > input").each(function (i) {
				a[i] = $(this).val();
			});
			return a;
		} else {
			return $("#edit_" + f.id + " > div.edit > input").val();
		}						
		
	},
	
	deleteImage: function (g, f) {
		params = new Array();
		params.push("G_ID=" + ($("#" + f.id).parents("div.group").attr("id") || "CONTACT"));
		params.push("C_ID=" + encodeURIComponent(this.contact));
		params.push("info[" + f.id + "]=");
		params = params.join("&");		
		$.post(this.config.saveUrl, params, function(response) {
			if (response.status == 'OK') {
				f.value = null;
				this.setValue(g, f);
			}
		}.bind(this), "json");
	},
	
	setEditAll: function(button) {
		this.editAll = !this.editAll;
		if (this.editAll) {
			
			for (var i = 0; i < this.groups.length; i++) {
				this.groups[i].edit = true;
			}
			var save = $('<input id="save_all" type="button" value="Сохранить" />').css('margin-right', '5px').click(function () {
				this.save(null);
				if (this.editAll == false) {
					$(button).show();
					$(button).parent().next().show();
					$(button).nextAll().remove();
				}
			}.bind(this));
			var cancel = $('<input id="cancel_all" type="button" value="Отмена" />').click(function () {
				if (this.config.onCancelAll) {
					this.config.onCancelAll();
				} else {
					this.cancelAll();
					this.editAll = false;				
					$(button).show();
					$(button).parent().next().show();
					$(button).nextAll(":visible").remove();
					$(button).nextAll(".nd").show();
				}
			}.bind(this));
			$(button).parent().next().hide();			
			save.insertAfter(button);
			cancel.insertAfter(save);
			$("#bottom_save").show().empty().append(save.clone(true)).append(cancel.clone(true));
			$(button).hide();
		} 
		this.render();
	},
	
	setShowAll: function () {
		this.showAll = !this.showAll;
		this.render();
	},
	
	saveField: function(group, field) {
		var params = new Array();
		var is_main = false;
		if (group && this.isMain(field.id)) {
			var is_main = true;
			for (var i = 0; i < group.fields.length; i++) {
				if (this.isMain(group.fields[i].id)) {
					if (group.fields[i].type == 'EMAIL') {
						var a = this.getValue(group.fields[i]);
						for (var k = 0; k < a.length; k++) {
							params.push('info[' + group.fields[i].id + "][]=" + encodeURIComponent(a[k]));
						}
					} else  {					
						params.push('info[' + group.fields[i].id + "]=" + encodeURIComponent(this.getValue(group.fields[i])));
					}						
				}
			}
		} else {
			if (field.type == 'EMAIL') {
				var a = this.getValue(field);
				for (var k = 0; k < a.length; k++) {
					params.push('info[' + field.id + "][]=" + encodeURIComponent(a[k]));
				}
			} else  {					
				params.push('info[' + field.id + "]=" + encodeURIComponent(this.getValue(field)));
			}
		}
		params.push("G_ID=" + (group ? group.id : ""));
		params.push("C_ID=" + encodeURIComponent(this.contact));
		params = params.join("&");
		var _this = this;
		$.post(this.config.saveUrl, params, function (response) {
			if (response.status == 'OK') {
				if ($("#display_name > div.edit").length) {
					$("#display_name > div.edit").html(response.data['display_name']);
				} else {
					$("#display_name").html(response.data['display_name']);
				}
				if (!is_main && !_this.config.updateAll) {
					field.value = response.data[field.id].value;
					field.edit = false;
					_this.renderField(group, field);
				} else if (_this.config.updateAll) {
					field.edit = false;
					for (var i = 0; i < group.fields.length; i++) {
						if (response.data[group.fields[i].id] != undefined) {
							group.fields[i].value = response.data[group.fields[i].id].value;
							_this.renderField(group, group.fields[i]);
						}
					}
				} else {
					for (var i = 0; i < group.fields.length; i++) {
						if (_this.isMain(group.fields[i].id)) {
							group.fields[i].edit = false;
							group.fields[i].value = response.data[group.fields[i].id].value;
							_this.renderField(group, group.fields[i]);
						}
					}
					$("#editMain").hide();
					var g = $("#" + group.id);
					g.find("> div.errors").hide();
					g.find("> div.errors > div.edit").html("");					
				}
			} else if (response.status == 'ERR') {
				for (var i = 0; i < response.error.length; i++) {
					if (response.error[i].id == group.id) {
						_this.showError(response.error[i], group);
					} else {
						_this.showFieldError(response.error[i]);
					}
				}
			}
		},"json");
		
	},
		
	save: function(group) {
		var params = new Array();
		if (!group) {
			for (var i = 0; i < this.groups.length; i++) {
				var g = this.groups[i];
				$("#" + g.id).find("div.errors > div.edit").html("");
				for (var j = 0; j < g.fields.length; j++) {
					if (g.fields[j].type == 'EMAIL') {
						var a = this.getValue(g.fields[j]);
						for (var k = 0; k < a.length; k++) {
							params.push('info[' + g.fields[j].id + "][]=" + encodeURIComponent(a[k]));
						}
					} else if (g.fields[j].type != 'IMAGE') {
						params.push('info[' + g.fields[j].id + "]=" + encodeURIComponent(this.getValue(g.fields[j])));
					}
					$("#" + g.id).find("div.errors > div.edit").html("");
				}
			}
		} else {
			$("#" + group.id).find("div.errors > div.edit").html("");
			for (var i = 0; i < group.fields.length; i++) {
				if (group.fields[i].type == 'EMAIL') {
					var a = this.getValue(group.fields[i]);
					for (var k = 0; k < a.length; k++) {
						params.push('info[' + group.fields[i].id + "][]=" + encodeURIComponent(a[k]));
					}
				} else if (group.fields[i].type != 'IMAGE') {
					params.push('info[' + group.fields[i].id + "]=" + encodeURIComponent(this.getValue(group.fields[i])));
				}
			}
			$("#" + group.id).find("div.errors > div.edit").html("");
			params.push("G_ID=" + (group ? group.id : ""));
		}
		
		
		params.push("C_ID=" + encodeURIComponent(this.contact));
		params.push("typeId="+document.typeId);
		params = params.join("&");
		var result = false;

		var success = function(response) {
			var responseData = response;
			if (responseData.status == 'OK') {
				if (this.config.saveSuccess) {
					this.config.saveSuccess(response);
					return true;
				}
				$("#editMain").hide();
				$("#bottom_save").hide().empty();
				if ($("#display_name > div.edit").length) {
					$("#display_name > div.edit").html(responseData.data['display_name']);
				} else {
					$("#display_name").html(responseData.data['display_name']);
				}
				if (!group) {
					for (var i = 0; i < this.groups.length; i++) {
						group = this.groups[i];
						for (j = 0; j < group.fields.length; j++) {
							if (responseData.data[group.fields[j].id] != undefined) {
								group.fields[j].value = responseData.data[group.fields[j].id].value;
							}
						}
						group.edit = this.config.edit ? true : false;
					}
					this.editAll = false;
					this.render();
				}
				else {
					for (i = 0; i < group.fields.length; i++) {
						if (group.fields[i].type != 'IMAGE') {
							try {
								group.fields[i].value = responseData.data[group.fields[i].id].value;
							} catch (e) {
								console.log(i);
								console.log(responseData.data);
								console.log(group.fields);
							}
						}
					}
					group.edit = this.config.edit ? true : false;
					this.renderGroup(group);
				}
				if (this.config.onSave) {
					this.config.onSave();
				}
			}
			else if (responseData.status == 'ERR') {
				for (i = 0; i < responseData.error.length; i++) {
					
					if (responseData.error[i].id != null || responseData.error[i].ids != null) {
						this.showFieldError(responseData.error[i], null);
					} else {
						this.showError(responseData.error[i]);
					}
				} 
			}
		}.bind(this);
		
		$.ajax({
			type: "POST",
			url: this.config.saveUrl,
			data: params,
			dataType: "json",
			success: success,
			async: false
		});
		
	}
});

